    /**
     * Receives an XML element instance and sorts the children of this
     * element in lexicographical (by default) order.
     *
     * @param args An array in which the first item is a
     * path to the XML instance file and the second item (optional) is
     * an XPath inside the document identifying the element to be sorted
     */
    public static void main(String[] args)
    {
        if (args.length < 1 || args.length > 2)
        {
            System.out.println("    java XmlSort <XML_File> [<XPath>]");
            return;
        }
        File f = new File(args[0]);
        try
        {
            XmlObject docInstance = XmlObject.Factory.parse(f, POIXMLDocumentPart.DEFAULT_XML_OPTIONS);
            XmlObject element = null;
            if (args.length > 1)
            {
                String xpath = args[1];
                XmlObject[] result = docInstance.selectPath(xpath);
                if (result.length == 0)
                {
                    System.out.println("ERROR: XPath \"" + xpath + "\" did not return any results");
                }
                else if (result.length > 1)
                {
                    System.out.println("ERROR: XPath \"" + xpath + "\" returned more than one " +
                        "node (" + result.length + ")");
                }
                else
                    element = result[0];
            }
            else
            {
                // Navigate to the root element
                XmlCursor c = docInstance.newCursor();
                c.toFirstChild();
                element = c.getObject();
                c.dispose();
            }
            if (element != null)
                sort(element, new QNameComparator(QNameComparator.ASCENDING));
            System.out.println(docInstance.xmlText());
        }
        catch (IOException ioe)
        {
            System.out.println("ERROR: Could not open file: \"" + args[0] + "\": " +
                ioe.getMessage());
        }
        catch (XmlException xe)
        {
            System.out.println("ERROR: Could not parse file: \"" + args[0] + "\": " +
                xe.getMessage());
        }
    }

