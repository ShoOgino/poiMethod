    /**
     * Gives back the output stream to which to write the signed XML document.
     * 
     * @return
     */
    // protected abstract OutputStream getSignedDocumentOutputStream();
    @Override
    public DigestInfo preSign(Document document, List<DigestInfo> digestInfos,
        PrivateKey key,
        List<X509Certificate> signingCertificateChain,
        IdentityDTO identity, AddressDTO address, byte[] photo)
    throws NoSuchAlgorithmException {
        SignatureInfo.initXmlProvider();

        LOG.log(POILogger.DEBUG, "preSign");
        HashAlgorithm hashAlgo = getSignatureDigestAlgorithm();

        byte[] digestValue;
        try {
            digestValue = getXmlSignatureDigestValue(document, hashAlgo, digestInfos, key, signingCertificateChain);
        } catch (Exception e) {
            throw new RuntimeException("XML signature error: " + e.getMessage(), e);
        }

        String description = getSignatureDescription();
        return new DigestInfo(digestValue, hashAlgo, description);
    }

