    /**
     * Main constructor.
     * 
     * @param tspServiceUrl
     *            the URL of the TSP service.
     * @param validator
     *            the trust validator used to validate incoming TSP response
     *            signatures.
     * @param requestPolicy
     *            the optional TSP request policy.
     * @param userAgent
     *            the optional User-Agent TSP request header value.
     */
    public TSPTimeStampService(String tspServiceUrl,
            TimeStampServiceValidator validator, String requestPolicy,
            String userAgent) {
        if (null == tspServiceUrl) {
            throw new IllegalArgumentException("TSP service URL required");
        }
        this.tspServiceUrl = tspServiceUrl;

        if (null == validator) {
            throw new IllegalArgumentException("TSP validator required");
        }
        this.validator = validator;

        this.requestPolicy = requestPolicy;

        if (null != userAgent) {
            this.userAgent = userAgent;
        } else {
            this.userAgent = DEFAULT_USER_AGENT;
        }
        
        setDigestAlgo(HashAlgorithm.sha1);
    }

