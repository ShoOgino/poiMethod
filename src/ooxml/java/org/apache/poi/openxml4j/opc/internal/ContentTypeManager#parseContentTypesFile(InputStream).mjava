	/**
	 * Parse the content types part.
	 *
	 * @throws InvalidFormatException
	 *             Throws if the content type doesn't exist or the XML format is
	 *             invalid.
	 */
	private void parseContentTypesFile(InputStream in)
			throws InvalidFormatException {
		try {
			Document xmlContentTypetDoc = DocumentHelper.readDocument(in);

			// Default content types
			NodeList defaultTypes = xmlContentTypetDoc.getDocumentElement().getElementsByTagName(DEFAULT_TAG_NAME);
			int defaultTypeCount = defaultTypes.getLength();
			for (int i = 0; i < defaultTypeCount; i++) {
                Element element = (Element) defaultTypes.item(i);
				String extension = element.getAttribute(EXTENSION_ATTRIBUTE_NAME);
				String contentType = element.getAttribute(CONTENT_TYPE_ATTRIBUTE_NAME);
				addDefaultContentType(extension, contentType);
			}

			// Overriden content types
            NodeList overrideTypes = xmlContentTypetDoc.getDocumentElement().getElementsByTagName(OVERRIDE_TAG_NAME);
            int overrideTypeCount = overrideTypes.getLength();
            for (int i = 0; i < overrideTypeCount; i++) {
				Element element = (Element) overrideTypes.item(i);
				URI uri = new URI(element.getAttribute(PART_NAME_ATTRIBUTE_NAME));
				PackagePartName partName = PackagingURIHelper.createPartName(uri);
				String contentType = element.getAttribute(CONTENT_TYPE_ATTRIBUTE_NAME);
				addOverrideContentType(partName, contentType);
			}
		} catch (URISyntaxException urie) {
			throw new InvalidFormatException(urie.getMessage());
        } catch (SAXException e) {
            throw new InvalidFormatException(e.getMessage());
        } catch (IOException e) {
            throw new InvalidFormatException(e.getMessage());
        }
    }

