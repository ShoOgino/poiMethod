        @Override
        public EmbeddedData extract(DirectoryNode dn) throws IOException {

            ClassID clsId = dn.getStorageClsid();

            String contentType, ext;
            if (ClassID.WORD2007.equals(clsId)) {
                ext = ".docx";
                contentType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
            } else if (ClassID.WORD2007_MACRO.equals(clsId)) {
                ext = ".docm";
                contentType = "application/vnd.ms-word.document.macroEnabled.12";
            } else if (ClassID.EXCEL2007.equals(clsId) || ClassID.EXCEL2003.equals(clsId) || ClassID.EXCEL2010.equals(clsId)) {
                ext = ".xlsx";
                contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
            } else if (ClassID.EXCEL2007_MACRO.equals(clsId)) {
                ext = ".xlsm";
                contentType = "application/vnd.ms-excel.sheet.macroEnabled.12";
            } else if (ClassID.EXCEL2007_XLSB.equals(clsId)) {
                ext = ".xlsb";
                contentType = "application/vnd.ms-excel.sheet.binary.macroEnabled.12";
            } else if (ClassID.POWERPOINT2007.equals(clsId)) {
                ext = ".pptx";
                contentType = "application/vnd.openxmlformats-officedocument.presentationml.presentation";
            } else if (ClassID.POWERPOINT2007_MACRO.equals(clsId)) {
                ext = ".ppsm";
                contentType = "application/vnd.ms-powerpoint.slideshow.macroEnabled.12";
            } else {
                ext = ".zip";
                contentType = "application/zip";
            }

            DocumentInputStream dis = dn.createDocumentInputStream("package");
            byte data[] = IOUtils.toByteArray(dis);
            dis.close();
            
            return new EmbeddedData(dn.getName()+ext, data, contentType);
        }

