    protected XWPFParagraph(CTP prgrph, XWPFDocument docRef) {
        this.paragraph = prgrph;
        this.document = docRef;

        if (!isEmpty()) {
            // All the runs to loop over
            // TODO - replace this with some sort of XPath expression
            // to directly find all the CTRs, in the right order
            ArrayList<CTR> rs = new ArrayList<CTR>();
            CTR[] tmp;

            // Get the main text runs
            tmp = paragraph.getRArray();
            for (int i = 0; i < tmp.length; i++) {
                rs.add(tmp[i]);
            }

            // Not sure quite what these are, but they hold
            // more text runs
            CTSdtRun[] sdts = paragraph.getSdtArray();
            for (int i = 0; i < sdts.length; i++) {
                CTSdtContentRun run = sdts[i].getSdtContent();
                tmp = run.getRArray();
                for (int j = 0; j < tmp.length; j++) {
                    rs.add(tmp[j]);
                }
            }

            // Get text of the paragraph
            for (int j = 0; j < rs.size(); j++) {
                // Grab the text and tabs of the paragraph
                // Do so in a way that preserves the ordering
                XmlCursor c = rs.get(j).newCursor();
                c.selectPath("./*");
                while (c.toNextSelection()) {
                    XmlObject o = c.getObject();
                    if (o instanceof CTText) {
                        text.append(((CTText) o).getStringValue());
                    }
                    if (o instanceof CTPTab) {
                        text.append("\t");
                    }
                }

                // Loop over pictures inside our
                // paragraph, looking for text in them
                CTPicture[] picts = rs.get(j).getPictArray();
                for (int k = 0; k < picts.length; k++) {
                    XmlObject[] t = picts[k]
                            .selectPath("declare namespace w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' .//w:t");
                    for (int m = 0; m < t.length; m++) {
                        NodeList kids = t[m].getDomNode().getChildNodes();
                        for (int n = 0; n < kids.getLength(); n++) {
                            if (kids.item(n) instanceof Text) {
                                pictureText.append("\n");
                                pictureText.append(kids.item(n).getNodeValue());
                            }
                        }
                    }
                }
            }
        }
    }

