    /**
     * pain the paragraphs starting from top left (x,y)
     *
     * @return  the vertical advance, i.e. the cumulative space occupied by the text
     */
    private double drawParagraphs(Graphics2D graphics,  double x, double y) {
        double y0 = y;
        for(int i = 0; i < _paragraphs.size(); i++){
            XSLFTextParagraph p = _paragraphs.get(i);
            List<XSLFTextParagraph.TextFragment> lines = p.getTextLines();

            if(i > 0 && lines.size() > 0) {
                // the amount of vertical white space before the paragraph
                double spaceBefore = p.getSpaceBefore();
                if(spaceBefore > 0) {
                    // positive value means percentage spacing of the height of the first line, e.g.
                    // the higher the first line, the bigger the space before the paragraph
                    y += spaceBefore*0.01*lines.get(0).getHeight();
                } else {
                    // negative value means the absolute spacing in points
                    y += -spaceBefore;
                }
            }

            y += p.draw(graphics, x, y);

            if(i < _paragraphs.size() - 1) {
                double spaceAfter = p.getSpaceAfter();
                if(spaceAfter > 0) {
                    // positive value means percentage spacing of the height of the last line, e.g.
                    // the higher the last line, the bigger the space after the paragraph
                    y += spaceAfter*0.01*lines.get(lines.size() - 1).getHeight();
                } else {
                    // negative value means the absolute spacing in points
                    y += -spaceAfter;
                }
            }
        }
        return y - y0;
    }

