    /**
     * Sets the solid color
     *
     * @param color solid color
     */
    @Internal
    protected void setColor(Color color) {
        if (!(_xmlObject instanceof CTSolidColorFillProperties)) {
            LOGGER.log(POILogger.ERROR, "XSLFColor.setColor currently only supports CTSolidColorFillProperties");
            return;
        }
        CTSolidColorFillProperties fill = (CTSolidColorFillProperties)_xmlObject;
        if (fill.isSetSrgbClr()) {
            fill.unsetSrgbClr();
        }
        
        CTSRgbColor rgb = fill.addNewSrgbClr();
        
        float[] rgbaf = color.getRGBComponents(null);
        int r = color.getRed(), g = color.getGreen(), b = color.getBlue();
        if (rgbaf[0]*255f == r && rgbaf[1]*255f == g && rgbaf[2]*255f == b) {
            rgb.setVal(new byte[]{(byte)r, (byte)g, (byte)b });
        } else {
            rgb.addNewRed().setVal((int)(100000 * rgbaf[0]));
            rgb.addNewGreen().setVal((int)(100000 * rgbaf[1]));
            rgb.addNewBlue().setVal((int)(100000 * rgbaf[2]));
        }

        // alpha (%)
        if (rgbaf.length == 4 && rgbaf[3] < 1f) {
            rgb.addNewAlpha().setVal((int)(100000 * rgbaf[3]));
        }

        if (fill.isSetHslClr()) {
            fill.unsetHslClr();
        }
        
        if (fill.isSetPrstClr()) {
            fill.unsetPrstClr();
        }
        
        if (fill.isSetSchemeClr()) {
            fill.unsetSchemeClr();
        }
        
        if (fill.isSetScrgbClr()) {
            fill.unsetScrgbClr();
        }
        
        if (fill.isSetSysClr()) {
            fill.unsetSysClr();
        }
    }

