    @Override
    public XSLFTextRun appendText(String text, boolean newParagraph) {
        if (text == null) return null;

        // copy properties from last paragraph / textrun or paragraph end marker
        CTTextParagraphProperties pPr = null;
        CTTextCharacterProperties rPr = null;
        
        boolean firstPara;
        XSLFTextParagraph para;
        if (_paragraphs.isEmpty()) {
            firstPara = false;
            para = null;
        } else {
            firstPara = !newParagraph;
            para = _paragraphs.get(_paragraphs.size()-1);
            CTTextParagraph ctp = para.getXmlObject();
            pPr = ctp.getPPr();
            List<XSLFTextRun> runs = para.getTextRuns();
            if (!runs.isEmpty()) {
                XSLFTextRun r0 = runs.get(runs.size()-1);
                rPr = r0.getXmlObject().getRPr();
            } else if (ctp.isSetEndParaRPr()) {
                rPr = ctp.getEndParaRPr();
            }
        }
        
        XSLFTextRun run = null;
        for (String lineTxt : text.split("\\r\\n?|\\n")) {
            if (!firstPara) {
                if (para != null && para.getXmlObject().isSetEndParaRPr()) {
                    para.getXmlObject().unsetEndParaRPr();
                }
                para = addNewTextParagraph();
                if (pPr != null) {
                    para.getXmlObject().setPPr(pPr);
                }
            }
            boolean firstRun = true;
            for (String runText : lineTxt.split("[\u000b]")) {
                if (!firstRun) {
                    para.addLineBreak();
                }
                run = para.addNewTextRun();
                run.setText(runText);
                if (rPr != null) {
                    run.getXmlObject().setRPr(rPr);
                }
                firstRun = false;
            }
            firstPara = false;
        }
        
        assert(run != null);
        return run;
    }

