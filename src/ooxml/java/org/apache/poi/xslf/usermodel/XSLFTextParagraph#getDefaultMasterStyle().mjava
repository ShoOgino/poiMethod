    /* package */ CTTextParagraphProperties getDefaultMasterStyle(){
        CTPlaceholder ph = _shape.getCTPlaceholder();
        String defaultStyleSelector;   
        switch(ph == null ? -1 : ph.getType().intValue()) {
            case STPlaceholderType.INT_TITLE:
            case STPlaceholderType.INT_CTR_TITLE:
                defaultStyleSelector = "titleStyle";
                break;
            case -1: // no placeholder means plain text box
            case STPlaceholderType.INT_FTR:
            case STPlaceholderType.INT_SLD_NUM:
            case STPlaceholderType.INT_DT:
                defaultStyleSelector = "otherStyle";
                break;
            default:
                defaultStyleSelector = "bodyStyle";
                break;
        }
        int level = getIndentLevel();

        // wind up and find the root master sheet which must be slide master
        final String nsDecl =
            "declare namespace p='http://schemas.openxmlformats.org/presentationml/2006/main' " +
            "declare namespace a='http://schemas.openxmlformats.org/drawingml/2006/main' ";
        final String xpaths[] = {
            nsDecl+".//p:txStyles/p:" + defaultStyleSelector +"/a:lvl" +(level+1)+ "pPr",
            nsDecl+".//p:notesStyle/a:lvl" +(level+1)+ "pPr"
        };
        XSLFSheet masterSheet = _shape.getSheet();
        for (XSLFSheet m = masterSheet; m != null; m = (XSLFSheet)m.getMasterSheet()) {
            masterSheet = m;

            XmlObject xo = masterSheet.getXmlObject();
            for (String xpath : xpaths) {
                XmlObject[] o = xo.selectPath(xpath);
                if (o.length == 1) {
                    return (CTTextParagraphProperties)o[0];
                }
            }
        }

        
//        for (CTTextBody txBody : (CTTextBody[])xo.selectPath(nsDecl+".//p:txBody")) {
//            CTTextParagraphProperties defaultPr = null, lastPr = null;
//            boolean hasLvl = false;
//            for (CTTextParagraph p : txBody.getPArray()) {
//                CTTextParagraphProperties pr = p.getPPr();
//                if (pr.isSetLvl()) {
//                    hasLvl |= true;
//                    lastPr = pr;
//                    if (pr.getLvl() == level) return pr;
//                } else {
//                    defaultPr = pr;
//                }
//            }
//            if (!hasLvl) continue;
//            if (level == 0 && defaultPr != null) return defaultPr;
//            if (lastPr != null) return lastPr;
//            break;
//        }
//           
//        String err = "Failed to fetch default style for " + defaultStyleSelector + " and level=" + level;
//        throw new IllegalArgumentException(err);
        
        return null;
    }

