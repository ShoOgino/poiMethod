    protected PaintStyle getFillPaint() {
        PropertyFetcher<PaintStyle> fetcher = new PropertyFetcher<PaintStyle>() {
            public boolean fetch(XSLFShape shape) {
                XmlObject pr = null;
                try {
                    pr = shape.getSpPr();
                    if (((CTShapeProperties)pr).isSetNoFill()) {
                        setValue(PaintStyle.TRANSPARENT_PAINT);
                        return true;
                    }                    
                } catch (IllegalStateException e) {}
                // trying background properties now
                if (pr == null) {
                    pr = shape.getBgPr();
                }
                if (pr == null) {
                    pr = shape.getGrpSpPr();
                }
                if (pr == null) {
                    setValue(PaintStyle.TRANSPARENT_PAINT);
                    return true;
                }
                
                PaintStyle paint = null;
                for (XmlObject obj : pr.selectPath("*")) {
                    paint = selectPaint(obj, null, getSheet().getPackagePart());
                    if (paint != null) break;
                }
                
                if (paint == null) return false;
                
                setValue(paint);
                return true;
            }
        };
        fetchShapeProperty(fetcher);

        PaintStyle paint = fetcher.getValue();
        if (paint != null) return paint;
        
        // fill color was not found, check if it is defined in the theme
        // get a reference to a fill style within the style matrix.
        CTStyleMatrixReference fillRef = null;
        if (fillRef == null) {
            CTShapeStyle style = getSpStyle();
            if (style != null) fillRef = style.getFillRef();
        }
        if (fillRef == null) {
            fillRef = getBgRef();
        }
        if (fillRef == null) {
            return PaintStyle.TRANSPARENT_PAINT;
        }

        // The idx attribute refers to the index of a fill style or
        // background fill style within the presentation's style matrix, defined by the fmtScheme element.
        // value of 0 or 1000 indicates no background,
        // values 1-999 refer to the index of a fill style within the fillStyleLst element
        // values 1001 and above refer to the index of a background fill style within the bgFillStyleLst element.
        int idx = (int)fillRef.getIdx();
        CTSchemeColor phClr = fillRef.getSchemeClr();
        XSLFSheet sheet = getSheet();
        XSLFTheme theme = sheet.getTheme();
        XmlObject fillProps = null;
        CTStyleMatrix matrix = theme.getXmlObject().getThemeElements().getFmtScheme();
        if(idx >= 1 && idx <= 999){
            fillProps = matrix.getFillStyleLst().selectPath("*")[idx - 1];
        } else if (idx >= 1001 ){
            fillProps = matrix.getBgFillStyleLst().selectPath("*")[idx - 1001];
        }
        if(fillProps != null) {
            paint = selectPaint(fillProps, phClr, sheet.getPackagePart());
        }

        return paint == null ? PaintStyle.TRANSPARENT_PAINT : paint;
    }

