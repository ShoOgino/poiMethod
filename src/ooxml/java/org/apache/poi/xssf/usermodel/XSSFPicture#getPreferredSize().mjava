    /**
     * Calculate the preferred size for this picture.
     *
     * @return XSSFClientAnchor with the preferred size for this image
     */
    public XSSFClientAnchor getPreferredSize(){
        XSSFClientAnchor anchor = getAnchor();

        XSSFPictureData data = getPictureData();
        Dimension size = getImageDimension(data.getPackagePart(), data.getPictureType());

        float w = 0;

        //space in the leftmost cell
        w += anchor.getDx1()/EMU_PER_POINT;
        short col2 = (short)(anchor.getCol1() + 1);
        int dx2 = 0;

        while(w < size.width){
            w += getColumnWidthInPixels(col2++);
        }

        if(w > size.width) {
            //calculate dx2, offset in the rightmost cell
            col2--;
            float cw = getColumnWidthInPixels(col2);
            float delta = w - size.width;
            dx2 = (int)(EMU_PER_POINT*(cw-delta));
        }
        anchor.setCol2(col2);
        anchor.setDx2(dx2);

        float h = 0;
        h += (1 - anchor.getDy1()/256)* getRowHeightInPixels(anchor.getRow1());
        int row2 = anchor.getRow1() + 1;
        int dy2 = 0;

        while(h < size.height){
            h += getRowHeightInPixels(row2++);
        }
        if(h > size.height) {
            row2--;
            float ch = getRowHeightInPixels(row2);
            float delta = h - size.height;
            dy2 = (int)((ch-delta)/ch*256);
        }
        anchor.setRow2(row2);
        anchor.setDy2(dy2);

        return anchor;
    }

