	/**
	 * Save, with the specified name
	 * @return The internal reference ID it was saved at, normally then used as an r:id
	 */
	protected String save(XSSFWritableModel model, PackagePart corePart, String name) throws IOException {
        PackagePartName ppName = null;
        try {
        	ppName = PackagingURIHelper.createPartName(name);
        } catch(InvalidFormatException e) {
        	throw new IllegalStateException("Can't create part with name " + name + " for " + model, e);
        }
        PackageRelationship rel =
        	corePart.addRelationship(ppName, TargetMode.INTERNAL, _relation);
        PackagePart part = corePart.getPackage().createPart(ppName, _type);
        
        OutputStream out = part.getOutputStream();
        model.writeTo(out);
        out.close();
        
		// Do children, if required
		if(model instanceof XSSFChildContainingModel) {
			XSSFChildContainingModel ccm = 
				(XSSFChildContainingModel)model;
			// Loop over each child, writing it out
			int numChildren = ccm.getNumberOfChildren();
			for(int i=0; i<numChildren; i++) {
				XSSFChildContainingModel.WritableChild child =
					ccm.getChildForWriting(i);
				child.getRelation().save(
						child.getModel(),
						part, 
						(i+1)
				);
			}
		}
        
        return rel.getId();
	}

