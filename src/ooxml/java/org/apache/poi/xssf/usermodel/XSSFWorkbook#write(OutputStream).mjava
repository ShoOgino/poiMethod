    public void write(OutputStream stream) throws IOException {

        try {
            // Create a package referring the temp file.
            Package pkg = Package.create(stream);
            // Main part
            PackagePartName corePartName = PackagingURIHelper.createPartName("/xl/workbook.xml");
            // Create main part relationship
            pkg.addRelationship(corePartName, TargetMode.INTERNAL, PackageRelationshipTypes.CORE_DOCUMENT, "rId1");
            // Create main document part
            PackagePart corePart = pkg.createPart(corePartName, WORKBOOK.getContentType());
            OutputStream out;

            XmlOptions xmlOptions = new XmlOptions();
            // Requests use of whitespace for easier reading
            xmlOptions.setSavePrettyPrint();
            xmlOptions.setSaveOuter();
            xmlOptions.setUseDefaultNamespace();
            
            // Write out our sheets, updating the references
            //  to them in the main workbook as we go
            for (int i=0 ; i < this.getNumberOfSheets(); i++) {
            	int sheetNumber = (i+1);
            	XSSFSheet sheet = (XSSFSheet) this.getSheetAt(i);
                PackagePartName partName = PackagingURIHelper.createPartName("/xl/worksheets/sheet" + sheetNumber + ".xml");
                PackageRelationship rel =
                	 corePart.addRelationship(partName, TargetMode.INTERNAL, WORKSHEET.getRelation(), "rSheet" + sheetNumber);
                PackagePart part = pkg.createPart(partName, WORKSHEET.getContentType());
                 
                // XXX This should not be needed, but apparently the setSaveOuter call above does not work in XMLBeans 2.2
                xmlOptions.setSaveSyntheticDocumentElement(new QName(CTWorksheet.type.getName().getNamespaceURI(), "worksheet"));
                out = part.getOutputStream();
                sheet.save(out, xmlOptions);
                out.close();
                 
                // Update our internal reference for the package part
                workbook.getSheets().getSheetArray(i).setId(rel.getId());
                workbook.getSheets().getSheetArray(i).setSheetId(sheetNumber);
            }
             
            // Write shared strings and styles
            if(sharedStringSource != null) {
	             SharedStringsTable sst = (SharedStringsTable)sharedStringSource;
	             SHARED_STRINGS.save(sst, corePart);
            }
            if(stylesSource != null) {
	             StylesTable st = (StylesTable)stylesSource;
	             STYLES.save(st, corePart);
            }
            
            // Named ranges
            if(namedRanges.size() > 0) {
            	CTDefinedNames names = CTDefinedNames.Factory.newInstance();
            	CTDefinedName[] nr = new CTDefinedName[namedRanges.size()];
            	for(int i=0; i<namedRanges.size(); i++) {
            		nr[i] = namedRanges.get(i).getCTName();
            	}
            	names.setDefinedNameArray(nr);
            	workbook.setDefinedNames(names);
            } else {
            	if(workbook.isSetDefinedNames()) {
            		workbook.setDefinedNames(null);
            	}
            }

            // Now we can write out the main Workbook, with
            //  the correct references to the other parts
            out = corePart.getOutputStream();
            // XXX This should not be needed, but apparently the setSaveOuter call above does not work in XMLBeans 2.2
            xmlOptions.setSaveSyntheticDocumentElement(new QName(CTWorkbook.type.getName().getNamespaceURI(), "workbook"));
            workbook.save(out, xmlOptions);
            out.close();
             
            //  All done
            pkg.close();
        } catch (InvalidFormatException e) {
            // TODO: replace with more meaningful exception
            throw new RuntimeException(e);
        }
    }

