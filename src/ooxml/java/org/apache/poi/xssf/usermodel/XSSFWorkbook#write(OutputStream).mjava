    public void write(OutputStream stream) throws IOException {

        try {
            // Create a package referring the temp file.
            Package pkg = Package.create(stream);
            // Main part
            PackagePartName corePartName = PackagingURIHelper.createPartName("/xl/workbook.xml");
            // Create main part relationship
            pkg.addRelationship(corePartName, TargetMode.INTERNAL, PackageRelationshipTypes.CORE_DOCUMENT, "rId1");
            // Create main document part
            PackagePart corePart = pkg.createPart(corePartName,
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml");
            XmlOptions xmlOptions = new XmlOptions();
             // Requests use of whitespace for easier reading
             xmlOptions.setSavePrettyPrint();
             xmlOptions.setSaveOuter();
             // XXX This should not be needed, but apparently the setSaveOuter call above does not work in XMLBeans 2.2
             xmlOptions.setSaveSyntheticDocumentElement(new QName(CTWorkbook.type.getName().getNamespaceURI(), "workbook"));
             xmlOptions.setUseDefaultNamespace();
             
             OutputStream out = corePart.getOutputStream();
             workbook.save(out, xmlOptions);
             out.close();
             
             for (int i = 0 ; i < this.getNumberOfSheets() ; ++i) {
            	 XSSFSheet sheet = (XSSFSheet) this.getSheetAt(i);
                 PackagePartName partName = PackagingURIHelper.createPartName("/xl/worksheets/sheet" + i + ".xml");
                 corePart.addRelationship(partName, TargetMode.INTERNAL, WORKSHEET_RELATIONSHIP, "rSheet" + 1);
                 PackagePart part = pkg.createPart(partName, WORKSHEET_TYPE);
                 
                 // XXX This should not be needed, but apparently the setSaveOuter call above does not work in XMLBeans 2.2
                 xmlOptions.setSaveSyntheticDocumentElement(new QName(CTWorksheet.type.getName().getNamespaceURI(), "worksheet"));
                 out = part.getOutputStream();
                 sheet.getWorksheet().save(out, xmlOptions);
                 
                 out.close();
             }
             
             // TODO - shared strings source
             // TODO - styles source
             
             pkg.close();
             
        } catch (InvalidFormatException e) {
            // TODO: replace with more meaningful exception
            throw new RuntimeException(e);
        }
    }

