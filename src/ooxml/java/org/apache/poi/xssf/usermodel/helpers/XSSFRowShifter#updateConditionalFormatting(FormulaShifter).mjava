    public void updateConditionalFormatting(FormulaShifter shifter) {
        XSSFWorkbook wb = sheet.getWorkbook();
        int sheetIndex = wb.getSheetIndex(sheet);


        XSSFEvaluationWorkbook fpb = XSSFEvaluationWorkbook.create(wb);
        List<CTConditionalFormatting> cfList = sheet.getCTWorksheet().getConditionalFormattingList();
        for(int j = 0; j< cfList.size(); j++){
            CTConditionalFormatting cf = cfList.get(j);

            ArrayList<CellRangeAddress> cellRanges = new ArrayList<CellRangeAddress>();
            for (Object stRef : cf.getSqref()) {
                String[] regions = stRef.toString().split(" ");
                for (int i = 0; i < regions.length; i++) {
                    cellRanges.add(CellRangeAddress.valueOf(regions[i]));
                }
            }

            boolean changed = false;
            List<CellRangeAddress> temp = new ArrayList<CellRangeAddress>();
            for (int i = 0; i < cellRanges.size(); i++) {
                CellRangeAddress craOld = cellRanges.get(i);
                CellRangeAddress craNew = shiftRange(shifter, craOld, sheetIndex);
                if (craNew == null) {
                    changed = true;
                    continue;
                }
                temp.add(craNew);
                if (craNew != craOld) {
                    changed = true;
                }
            }

            if (changed) {
                int nRanges = temp.size();
                if (nRanges == 0) {
                    cfList.remove(j);
                    continue;
                }
                List<String> refs = new ArrayList<String>();
                for(CellRangeAddress a : temp) refs.add(a.formatAsString());
                cf.setSqref(refs);
            }

            for(CTCfRule cfRule : cf.getCfRuleList()){
                List<String> formulas = cfRule.getFormulaList();
                for (int i = 0; i < formulas.size(); i++) {
                    String formula = formulas.get(i);
                    Ptg[] ptgs = FormulaParser.parse(formula, fpb, FormulaType.CELL, sheetIndex);
                    if (shifter.adjustFormula(ptgs, sheetIndex)) {
                        String shiftedFmla = FormulaRenderer.toFormulaString(fpb, ptgs);
                        formulas.set(i, shiftedFmla);
                    }
                }
            }
        }
    }

