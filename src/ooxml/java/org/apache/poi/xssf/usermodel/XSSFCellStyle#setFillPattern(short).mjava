    public void setFillPattern(short fp) {
	cellFill=getCellFill();
	switch (fp) {
	case CellStyle.NO_FILL:
		cellFill.setPatternType(STPatternType.NONE);
	    break;
	case CellStyle.SOLID_FOREGROUND:
		cellFill.setPatternType(STPatternType.SOLID);
		    break;
	case CellStyle.FINE_DOTS:
		cellFill.setPatternType(STPatternType.LIGHT_GRAY);
		    break;
	case CellStyle.ALT_BARS:
		cellFill.setPatternType(STPatternType.DARK_GRID);
		    break;
	case CellStyle.SPARSE_DOTS:
		cellFill.setPatternType(STPatternType.DARK_GRAY);
		    break;
	case CellStyle.THICK_HORZ_BANDS:
		cellFill.setPatternType(STPatternType.DARK_HORIZONTAL);
		    break;
	case CellStyle.THICK_VERT_BANDS:
		cellFill.setPatternType(STPatternType.DARK_VERTICAL);
		    break;
	case CellStyle.THICK_BACKWARD_DIAG:
		cellFill.setPatternType(STPatternType.DARK_UP);
		    break;
	case CellStyle.THICK_FORWARD_DIAG:
		cellFill.setPatternType(STPatternType.DARK_DOWN);
		    break;
	case CellStyle.BIG_SPOTS:
		cellFill.setPatternType(STPatternType.GRAY_0625);
		    break;
	case CellStyle.BRICKS:
		cellFill.setPatternType(STPatternType.DARK_TRELLIS);
		    break;
	case CellStyle.THIN_HORZ_BANDS:
		cellFill.setPatternType(STPatternType.LIGHT_HORIZONTAL);
		    break;
	case CellStyle.THIN_VERT_BANDS:
		cellFill.setPatternType(STPatternType.LIGHT_VERTICAL);
		    break;
	case CellStyle.THIN_BACKWARD_DIAG:
		cellFill.setPatternType(STPatternType.LIGHT_UP);
		    break;
	case CellStyle.THIN_FORWARD_DIAG:
		cellFill.setPatternType(STPatternType.LIGHT_DOWN);
		    break;
	case CellStyle.SQUARES:
		cellFill.setPatternType(STPatternType.LIGHT_GRID);
		    break;
	case CellStyle.DIAMONDS:
		cellFill.setPatternType(STPatternType.LIGHT_TRELLIS);
		    break;
	case CellStyle.LESS_DOTS:
		cellFill.setPatternType(STPatternType.GRAY_125);
		    break;
	case CellStyle.LEAST_DOTS:
		cellFill.setPatternType(STPatternType.GRAY_0625);
		    break;
	default: throw new RuntimeException("Fill type ["+fp+"] not accepted");
	}
    }

