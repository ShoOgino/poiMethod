    /**
     * Sets array formula to the specified range of cells.
     * <p>
     *  Note, that this method silently creates cells in the
     *  specified range if they don't exist.
     * </p>
     * Example:
     * <blockquote><pre>
     *  Workbook workbook = new XSSFWorkbook();
     *  Sheet sheet = workbook.createSheet();
     *  CellRangeAddress range = CellRangeAddress.valueOf("C1:C3");
     *  Cell[] cells = sheet.setArrayFormula("A1:A3*B1:B3", range);
     * </pre></blockquote>
     *  Three cells in the C1:C3 range are created and returned.
     *
     * @param formula the formula to set
     * @param range Region of array formula for result.
     * @return the array of cells that represent the entire formula array
     * @throws org.apache.poi.ss.formula.FormulaParseException if
     *   the formula has incorrect syntax or is otherwise invalid
     */
     public XSSFCell[] setArrayFormula(String formula, CellRangeAddress range) {
        XSSFRow row = getRow(range.getFirstRow());
        if (row == null) {
            row = createRow(range.getFirstRow());
        }
        XSSFCell mainArrayFormulaCell = row.getCell(range.getFirstColumn());
        if (mainArrayFormulaCell == null) {
            mainArrayFormulaCell = row.createCell(range.getFirstColumn());
        }
        mainArrayFormulaCell.setCellArrayFormula(formula, range);
        arrayFormulas.add(range);

        XSSFCell[] cells = new XSSFCell[range.getNumberOfCells()];
        int k = 0;
        for (int rowIndex = range.getFirstRow(); rowIndex <= range.getLastRow(); rowIndex++) {
            row = getRow(rowIndex);
            if (row == null) {
                row = createRow(rowIndex);
            }
            for (int columnIndex = range.getFirstColumn(); columnIndex <= range.getLastColumn(); columnIndex++) {
                XSSFCell arrayFormulaCell = row.getCell(columnIndex);
                if (arrayFormulaCell == null) {
                    arrayFormulaCell = row.createCell(columnIndex);
                }
                cells[k++] = arrayFormulaCell;
            }
        }
        return cells;
    }

