    public XSSFSheet(CTSheet sheet) {
        this.sheet = sheet;
        this.worksheet = CTWorksheet.Factory.newInstance();
        this.worksheet.addNewSheetData();
        this.rows = new LinkedList<Row>();
        for (CTRow row : worksheet.getSheetData().getRowArray()) {
                this.rows.add(new XSSFRow(row));
        }
        // XXX ???
        CTSheetViews views = this.worksheet.addNewSheetViews();
        CTSheetView view = views.addNewSheetView();
        view.setWorkbookViewId(0);
        view.setZoomScale(100);
        CTSelection selection = view.addNewSelection();
        selection.setActiveCell("A1");
        CTSheetFormatPr format = this.worksheet.addNewSheetFormatPr();
        format.setDefaultColWidth(13);
        format.setDefaultRowHeight(15);
        format.setCustomHeight(true);
        CTCols cols = this.worksheet.addNewCols();
        CTCol col = cols.addNewCol();
        col.setMin(1);
        col.setMax(2);
        col.setWidth(13);
        col.setCustomWidth(true);
        for (int i = 3 ; i < 5 ; ++i) {
            col = cols.addNewCol();
            col.setMin(i);
            col.setMax(i);
            col.setWidth(13);
            col.setCustomWidth(true);
        }
        CTHeaderFooter hf = this.worksheet.addNewHeaderFooter();
        hf.setOddHeader("&amp;C&amp;A");
        hf.setOddFooter("&amp;C&amp;\"Arial\"&amp;10Page &amp;P");
        CTPageBreak rowBreaks = worksheet.addNewRowBreaks();
        CTPageBreak columnBreak = worksheet.addNewColBreaks();
        CTSheetPr sheetPr = worksheet.addNewSheetPr();
        CTPageSetUpPr sheetPageSetUpPr = sheetPr.addNewPageSetUpPr();
        CTPageMargins pageMargins = worksheet.addNewPageMargins();
        columnHelper = new ColumnHelper(worksheet);
    }

