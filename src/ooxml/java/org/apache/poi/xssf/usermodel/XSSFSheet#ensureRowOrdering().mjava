    /**
     * ensure that the array of CTRow written to CTSheetData is ordered by row index
     */
    private void ensureRowOrdering(){
        CTSheetData sheetData = worksheet.getSheetData();
        // check if row indexes in CTSheetData match the internal model:
        // rows in the internal model (_rows) are always ordered while
        // CTRow beans held by CTSheetData may be not, for example, user can
        // insert rows in random order, shift rows after insertion, etc.
        Integer [] curRows = new Integer[sheetData.sizeOfRowArray()];
        int i = 0;
        for(CTRow ctrow : sheetData.getRowArray()){
            curRows[i++] = (int)(ctrow.getR() - 1);
        }
        Integer [] ordRows = _rows.keySet().toArray(new Integer[_rows.size()]);
        if(!Arrays.equals(curRows, ordRows)){
            // The order of rows in CTSheetData and internal model does not match 
            CTRow[] orderedCTRows = new CTRow[_rows.size()];
            i = 0;
            for(XSSFRow row : _rows.values()){
                orderedCTRows[i++] = row.getCTRow();
            }
            sheetData.setRowArray(orderedCTRows);
        }
    }

