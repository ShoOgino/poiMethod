    /**
     * Fired when the document is written to an output stream.
     *
     * @see org.apache.poi.xssf.usermodel.XSSFSheet#write(java.io.OutputStream) ()
     */
    protected void onDocumentWrite() {
        // _row.cArray and _cells.getCTCell might be out of sync after adding/removing cells,
        // thus we need to re-order it here to make the resulting file correct

        // copy all values to 2nd array and a map for lookup of index
        List<CTCell> cArrayOrig = _row.getCList();
        CTCell[] cArrayCopy = new CTCell[cArrayOrig.size()];
        IdentityHashMap<CTCell, Integer> map = new IdentityHashMap<>(_cells.size());
        int i = 0;
        for (CTCell ctCell : cArrayOrig) {
            cArrayCopy[i] = (CTCell) ctCell.copy();
            map.put(ctCell, i);
            i++;
        }

        // populate _row.cArray correctly
        i = 0;
        for (XSSFCell cell : _cells.values()) {
            // no need to change anything if position is correct
            Integer correctPosition = map.get(cell.getCTCell());
            Objects.requireNonNull(correctPosition, "Should find CTCell in _row");
            if(correctPosition != i) {
                // we need to re-populate this CTCell
                _row.setCArray(i, cArrayCopy[correctPosition]);
                cell.setCTCell(_row.getCArray(i));
            }
            i++;
        }

        // remove any remaining illegal references in _rows.cArray
        while(cArrayOrig.size() > _cells.size()) {
            _row.removeC(_cells.size());
        }
    }

