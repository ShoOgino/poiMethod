    public XSSFWorkbook(Package pkg) throws IOException {
        super(pkg);
        try {
            WorkbookDocument doc = WorkbookDocument.Factory.parse(getCorePart().getInputStream());
            this.workbook = doc.getWorkbook();
            
            // Are we macro enabled, or just normal?
            isMacroEnabled = 
            		getCorePart().getContentType().equals(MACROS_WORKBOOK.getContentType());
            
            try {
	            // Load shared strings
	            this.sharedStringSource = (SharedStringSource)
	            	SHARED_STRINGS.load(getCorePart());
            } catch(Exception e) {
            	throw new IOException("Unable to load shared strings - " + e.toString());
            }
            try {
	            // Load styles source
	            this.stylesSource = (StylesSource)
	            	STYLES.load(getCorePart());
            } catch(Exception e) {
            	e.printStackTrace();
            	throw new IOException("Unable to load styles - " + e.toString());
            }
            
            // Load individual sheets
            for (CTSheet ctSheet : this.workbook.getSheets().getSheetArray()) {
                PackagePart part = getPackagePart(ctSheet);
                if (part == null) {
                	log.log(POILogger.WARN, "Sheet with name " + ctSheet.getName() + " and r:id " + ctSheet.getId()+ " was defined, but didn't exist in package, skipping");
                    continue;
                }
                
                // Get the comments for the sheet, if there are any
                CommentsSource comments = null;
                PackageRelationshipCollection commentsRel =
                	part.getRelationshipsByType(SHEET_COMMENTS.REL);
                if(commentsRel != null && commentsRel.size() > 0) {
                	PackagePart commentsPart = 
                		getTargetPart(commentsRel.getRelationship(0));
                	comments = new CommentsTable(commentsPart.getInputStream());
                }
                
                // Now create the sheet
                WorksheetDocument worksheetDoc = WorksheetDocument.Factory.parse(part.getInputStream());
                XSSFSheet sheet = new XSSFSheet(ctSheet, worksheetDoc.getWorksheet(), this, comments);
                this.sheets.add(sheet);
                
                // Process external hyperlinks for the sheet,
                //  if there are any
                PackageRelationshipCollection hyperlinkRels =
                	part.getRelationshipsByType(SHEET_HYPERLINKS.REL);
                sheet.initHyperlinks(hyperlinkRels);
                
                // Get the embeddings for the workbook
                for(PackageRelationship rel : part.getRelationshipsByType(OLEEMBEDDINGS.REL))
                    embedds.add(getTargetPart(rel)); // TODO: Add this reference to each sheet as well
                
                for(PackageRelationship rel : part.getRelationshipsByType(PACKEMBEDDINGS.REL))
                    embedds.add(getTargetPart(rel));
            }
        } catch (XmlException e) {
            throw new IOException(e.toString());
        } catch (InvalidFormatException e) {
            throw new IOException(e.toString());
        }
        
        // Process the named ranges
        if(workbook.getDefinedNames() != null) {
        	for(CTDefinedName ctName : workbook.getDefinedNames().getDefinedNameArray()) {
        		namedRanges.add(new XSSFName(ctName, this));
        	}
        }
    }

