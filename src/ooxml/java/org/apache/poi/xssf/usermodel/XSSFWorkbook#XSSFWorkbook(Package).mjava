    public XSSFWorkbook(Package pkg) throws IOException {
        super(pkg);
        try {
            WorkbookDocument doc = WorkbookDocument.Factory.parse(getCorePart().getInputStream());
            this.workbook = doc.getWorkbook();
            
            try {
	            // Load shared strings
	            this.sharedStringSource = (SharedStringSource)
	            	SHARED_STRINGS.load(getCorePart());
            } catch(Exception e) {
            	throw new IOException("Unable to load shared strings - " + e.toString());
            }
            try {
	            // Load styles source
	            this.stylesSource = (StylesSource)
	            	STYLES.load(getCorePart());
            } catch(Exception e) {
            	e.printStackTrace();
            	throw new IOException("Unable to load styles - " + e.toString());
            }
            
            // Load individual sheets
            for (CTSheet ctSheet : this.workbook.getSheets().getSheetArray()) {
                PackagePart part = getPackagePart(ctSheet);
                if (part == null) {
                	log.log(POILogger.WARN, "Sheet with name " + ctSheet.getName() + " and r:id " + ctSheet.getId()+ " was defined, but didn't exist in package, skipping");
                    continue;
                }
                WorksheetDocument worksheetDoc = WorksheetDocument.Factory.parse(part.getInputStream());
                XSSFSheet sheet = new XSSFSheet(ctSheet, worksheetDoc.getWorksheet(), this);
                this.sheets.add(sheet);
            }
        } catch (XmlException e) {
            throw new IOException(e.toString());
        } catch (InvalidFormatException e) {
            throw new IOException(e.toString());
        }
        
        // Process the named ranges
        if(workbook.getDefinedNames() != null) {
        	for(CTDefinedName ctName : workbook.getDefinedNames().getDefinedNameArray()) {
        		namedRanges.add(new XSSFName(ctName, this));
        	}
        }
    }

