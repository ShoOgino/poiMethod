    /**
     * xssfSheetIterator was added to make transitioning to the new Iterator<Sheet> iterator()
     *  interface less painful for projects currently using POI.
     *  
     *  If your code was written using a for-each loop:
     *  <pre><code>
     *  for (XSSFSheet sh : wb) {
     *      sh.createRow(0);
     *  }
     *  </code></pre>
     *  
     *  There are two ways to upgrade your code:
     *  // Option A:
     *  <pre><code>
     *  for (XSSFSheet sh : (Iterable<XSSFSheet>) (Iterable<? extends Sheet>) wb) {
     *      sh.createRow(0);
     *  }
     *  </code></pre>
     *      
     *  // Option B (preferred for new code):
     *  <pre><code>
     *  for (Sheet sh : wb) {
     *      sh.createRow(0);
     *  }
     *  </code></pre>
     *  
     *  
     *  
     *  If your code was written using an iterator variable:
     *  <pre><code>
     *  Iterator<XSSFSheet> it = wb.iterator();
     *  XSSFSheet sh = it.next();
     *  sh.createRow(0);
     *  </code></pre>
     *  
     *  There are three ways to upgrade your code:
     *  // Option A:
     *  <pre><code>
     *  Iterator<XSSFSheet> it = (Iterator<XSSFSheet>) (Iterator<? extends Sheet>) wb.iterator();
     *  XSSFSheet sh = it.next();
     *  sh.createRow(0);
     *  </code></pre>
     *
     *  // Option B:
     *  <pre><code>
     *  &#64;SuppressWarnings("deprecation")
     *  Iterator<XSSFSheet> it = wb.xssfSheetIterator();
     *  XSSFSheet sh = it.next();
     *  sh.createRow(0);
     *  </code></pre>
     *
     *  // Option C (preferred for new code):
     *  <pre><code>
     *  Iterator<Sheet> it = wb.iterator();
     *  Sheet sh = it.next();
     *  sh.createRow(0);
     *  </code></pre>
     *  
     *  New projects should use the preferred options. Note: XSSFWorkbook.xssfSheetIterator
     *  is deprecated and will be removed in a future version.
     *
     * @return an iterator of the sheets.
     */
    @Deprecated
    public Iterator<XSSFSheet> xssfSheetIterator() {
        return new SheetIterator<XSSFSheet>();
    }

