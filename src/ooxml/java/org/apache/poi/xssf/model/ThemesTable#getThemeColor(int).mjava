    /**
     * Convert a theme "index" (as used by fonts etc) into a color.
     * @param idx A theme "index"
     * @return The mapped XSSFColor, or null if not mapped.
     */
    public XSSFColor getThemeColor(int idx) {
        // Theme color references are NOT positional indices into the color scheme,
        // i.e. these keys are NOT the same as the order in which theme colors appear
        // in theme1.xml. They are keys to a mapped color.
        CTColorScheme colorScheme = theme.getTheme().getThemeElements().getClrScheme();
        CTColor ctColor;
        switch (idx) {
            case THEME_LT1: ctColor = colorScheme.getLt1(); break;
            case THEME_DK1: ctColor = colorScheme.getDk1(); break;
            case THEME_LT2: ctColor = colorScheme.getLt2(); break;
            case THEME_DK2: ctColor = colorScheme.getDk2(); break;
            case THEME_ACCENT1: ctColor = colorScheme.getAccent1(); break;
            case THEME_ACCENT2: ctColor = colorScheme.getAccent2(); break;
            case THEME_ACCENT3: ctColor = colorScheme.getAccent3(); break;
            case THEME_ACCENT4: ctColor = colorScheme.getAccent4(); break;
            case THEME_ACCENT5: ctColor = colorScheme.getAccent5(); break;
            case THEME_ACCENT6: ctColor = colorScheme.getAccent6(); break;
            case THEME_HLINK:   ctColor = colorScheme.getHlink();   break;
            case THEME_FOLHLINK:ctColor = colorScheme.getFolHlink();break;
            default: return null;
        }

        byte[] rgb = null;
        if (ctColor.isSetSrgbClr()) {
            // Color is a regular one
            rgb = ctColor.getSrgbClr().getVal();
        } else if (ctColor.isSetSysClr()) {
            // Color is a tint of white or black
            rgb = ctColor.getSysClr().getLastClr();
        } else {
            return null;
        }
        return new XSSFColor(rgb);        
    }

