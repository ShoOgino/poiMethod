    @Test
    public void testLineStyles() throws IOException {
        XMLSlideShow ppt = new XMLSlideShow();
        XSLFSlide slide = ppt.createSlide();

        XSLFSimpleShape shape = slide.createAutoShape();
        assertEquals(1, slide.getShapes().size());
        // line properties are not set by default
        assertFalse(shape.getSpPr().isSetLn());

        assertEquals(0., shape.getLineWidth(), 0);
        assertEquals(null, shape.getLineColor());
        assertEquals(null, shape.getLineDash());
        assertEquals(null, shape.getLineCap());

        shape.setLineWidth(0);
        shape.setLineColor(null);
        shape.setLineDash(null);
        shape.setLineCap(null);

        // still no line properties
        assertFalse(shape.getSpPr().isSetLn());

        // line width
        shape.setLineWidth(1.0);
        assertEquals(1.0, shape.getLineWidth(), 0);
        assertEquals(Units.EMU_PER_POINT, shape.getSpPr().getLn().getW());
        shape.setLineWidth(5.5);
        assertEquals(5.5, shape.getLineWidth(), 0);
        assertEquals(Units.toEMU(5.5), shape.getSpPr().getLn().getW());
        shape.setLineWidth(0.0);
        // setting line width to zero unsets the W attribute
        assertFalse(shape.getSpPr().getLn().isSetW());

        // line cap
        shape.setLineCap(LineCap.FLAT);
        assertEquals(LineCap.FLAT, shape.getLineCap());
        assertEquals(STLineCap.FLAT, shape.getSpPr().getLn().getCap());
        shape.setLineCap(LineCap.SQUARE);
        assertEquals(LineCap.SQUARE, shape.getLineCap());
        assertEquals(STLineCap.SQ, shape.getSpPr().getLn().getCap());
        shape.setLineCap(LineCap.ROUND);
        assertEquals(LineCap.ROUND, shape.getLineCap());
        assertEquals(STLineCap.RND, shape.getSpPr().getLn().getCap());
        shape.setLineCap(null);
        // setting cap to null unsets the Cap attribute
        assertFalse(shape.getSpPr().getLn().isSetCap());

        // line dash
        shape.setLineDash(LineDash.SOLID);
        assertEquals(LineDash.SOLID, shape.getLineDash());
        assertEquals(STPresetLineDashVal.SOLID, shape.getSpPr().getLn().getPrstDash().getVal());
        shape.setLineDash(LineDash.DASH_DOT);
        assertEquals(LineDash.DASH_DOT, shape.getLineDash());
        assertEquals(STPresetLineDashVal.DASH_DOT, shape.getSpPr().getLn().getPrstDash().getVal());
        shape.setLineDash(LineDash.LG_DASH_DOT);
        assertEquals(LineDash.LG_DASH_DOT, shape.getLineDash());
        assertEquals(STPresetLineDashVal.LG_DASH_DOT, shape.getSpPr().getLn().getPrstDash().getVal());
        shape.setLineDash(null);
        // setting dash width to null unsets the Dash element
        assertFalse(shape.getSpPr().getLn().isSetPrstDash());

        // line color
        assertFalse(shape.getSpPr().getLn().isSetSolidFill());
        shape.setLineColor(Color.RED);
        assertEquals(Color.RED, shape.getLineColor());
        assertTrue(shape.getSpPr().getLn().isSetSolidFill());
        shape.setLineColor(Color.BLUE);
        assertEquals(Color.BLUE, shape.getLineColor());
        assertTrue(shape.getSpPr().getLn().isSetSolidFill());
        shape.setLineColor(null);
        assertEquals(null, shape.getLineColor());
        // setting dash width to null unsets the SolidFill element
        assertFalse(shape.getSpPr().getLn().isSetSolidFill());

        XSLFSimpleShape ln2 = slide.createAutoShape();
        ln2.setLineDash(LineDash.DOT);
        assertEquals(LineDash.DOT, ln2.getLineDash());
        ln2.setLineWidth(0.);
        assertEquals(0., ln2.getLineWidth(), 0);

        XSLFSimpleShape ln3 = slide.createAutoShape();
        ln3.setLineWidth(1.);
        assertEquals(1., ln3.getLineWidth(), 0);
        ln3.setLineDash(null);
        assertEquals(null, ln3.getLineDash());
        ln3.setLineCap(null);
        assertEquals(null, ln3.getLineDash());
        
        ppt.close();
    }

