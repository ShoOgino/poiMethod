    @Test
    public void testCreate() {
        XMLSlideShow ppt = new XMLSlideShow();
        assertEquals(0, ppt.getAllPictures().size());
        byte[] data1 = new byte[100];
        for(int i = 0;i < 100;i++) { data1[i] = (byte)i; }
        int idx1 = ppt.addPicture(data1, XSLFPictureData.PICTURE_TYPE_JPEG);
        assertEquals(0, idx1);
        assertEquals(1, ppt.getAllPictures().size());

        XSLFSlide slide = ppt.createSlide();
        XSLFPictureShape shape1 = slide.createPicture(idx1);
        assertNotNull(shape1.getPictureData());
        assertArrayEquals(data1, shape1.getPictureData().getData());

        byte[] data2 = new byte[200];
        for(int i = 0;i < 200;i++) { data2[i] = (byte)i; }
        int idx2 = ppt.addPicture(data2, XSLFPictureData.PICTURE_TYPE_PNG);
        XSLFPictureShape shape2 = slide.createPicture(idx2);
        assertNotNull(shape2.getPictureData());
        assertEquals(1, idx2);
        assertEquals(2, ppt.getAllPictures().size());
        assertArrayEquals(data2, shape2.getPictureData().getData());

        ppt = XSLFTestDataSamples.writeOutAndReadBack(ppt);
        List<XSLFPictureData> pics = ppt.getAllPictures();
        assertEquals(2, pics.size());
        assertArrayEquals(data1, pics.get(0).getData());
        assertArrayEquals(data2, pics.get(1).getData());

        List<XSLFShape> shapes = ppt.getSlides().get(0).getShapes();
        assertArrayEquals(data1, ((XSLFPictureShape) shapes.get(0)).getPictureData().getData());
        assertArrayEquals(data2, ((XSLFPictureShape) shapes.get(1)).getPictureData().getData());
    }

