    public void testCreate() {
        XMLSlideShow ppt = new XMLSlideShow();
        XSLFSlide slide = ppt.createSlide();

        XSLFTable tbl = slide.createTable();
        assertNotNull(tbl.getCTTable());
        assertNotNull(tbl.getCTTable().getTblGrid());
        assertNotNull(tbl.getCTTable().getTblPr());
        assertTrue(tbl.getXmlObject() instanceof CTGraphicalObjectFrame);
        assertEquals("Table 1", tbl.getShapeName());
        assertEquals(2, tbl.getShapeId());
        assertEquals(0, tbl.getRows().size());
        assertEquals(0, tbl.getCTTable().sizeOfTrArray());
        assertEquals(0, tbl.getCTTable().getTblGrid().sizeOfGridColArray());

        assertEquals(0, tbl.getNumberOfColumns());
        assertEquals(0, tbl.getNumberOfRows());

        XSLFTableRow row0 = tbl.addRow();
        assertNotNull(row0.getXmlObject());
        assertEquals(1, tbl.getNumberOfRows());
        assertSame(row0, tbl.getRows().get(0));
        assertEquals(20.0, row0.getHeight());
        row0.setHeight(30.0);
        assertEquals(30.0, row0.getHeight());

        assertEquals(0, row0.getCells().size());
        XSLFTableCell cell0 = row0.addCell();
        assertNotNull(cell0.getXmlObject());
        // by default table cell has no borders
        assertTrue(cell0.getXmlObject().getTcPr().getLnB().isSetNoFill());
        assertTrue(cell0.getXmlObject().getTcPr().getLnT().isSetNoFill());
        assertTrue(cell0.getXmlObject().getTcPr().getLnL().isSetNoFill());
        assertTrue(cell0.getXmlObject().getTcPr().getLnR().isSetNoFill());

        assertSame(cell0, row0.getCells().get(0));
        assertEquals(1, tbl.getNumberOfColumns());
        assertEquals(100.0, tbl.getColumnWidth(0));
        cell0.addNewTextParagraph().addNewTextRun().setText("POI");
        assertEquals("POI", cell0.getText());

        XSLFTableCell cell1 = row0.addCell();
        assertSame(cell1, row0.getCells().get(1));
        assertEquals(2, tbl.getNumberOfColumns());
        assertEquals(100.0, tbl.getColumnWidth(1));
        cell1.addNewTextParagraph().addNewTextRun().setText("Apache");
        assertEquals("Apache", cell1.getText());

        assertEquals(1.0, cell1.getBorderBottom());
        cell1.setBorderBottom(2.0);
        assertEquals(2.0, cell1.getBorderBottom());
        assertNull(cell1.getBorderBottomColor());
        cell1.setBorderBottomColor(Color.yellow);
        assertEquals(Color.yellow, cell1.getBorderBottomColor());

        assertEquals(1.0, cell1.getBorderTop());
        cell1.setBorderTop(2.0);
        assertEquals(2.0, cell1.getBorderTop());
        assertNull(cell1.getBorderTopColor());
        cell1.setBorderTopColor(Color.yellow);
        assertEquals(Color.yellow, cell1.getBorderTopColor());

        assertEquals(1.0, cell1.getBorderLeft());
        cell1.setBorderLeft(2.0);
        assertEquals(2.0, cell1.getBorderLeft());
        assertNull(cell1.getBorderLeftColor());
        cell1.setBorderLeftColor(Color.yellow);
        assertEquals(Color.yellow, cell1.getBorderLeftColor());

        assertEquals(1.0, cell1.getBorderRight());
        cell1.setBorderRight(2.0);
        assertEquals(2.0, cell1.getBorderRight());
        assertNull(cell1.getBorderRightColor());
        cell1.setBorderRightColor(Color.yellow);
        assertEquals(Color.yellow, cell1.getBorderRightColor());

        assertEquals(VerticalAlignment.TOP, cell1.getVerticalAlignment());
        cell1.setVerticalAlignment(VerticalAlignment.MIDDLE);
        assertEquals(VerticalAlignment.MIDDLE, cell1.getVerticalAlignment());
        cell1.setVerticalAlignment(null);
        assertEquals(VerticalAlignment.TOP, cell1.getVerticalAlignment());
    }

