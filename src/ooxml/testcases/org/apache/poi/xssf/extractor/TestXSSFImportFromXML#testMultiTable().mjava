	@Test	
	public void testMultiTable() throws IOException, XPathExpressionException, SAXException{
		XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook("CustomXMLMappings-complex-type.xlsx");	 
		try {
    		String cellC6 = "c6";
    		String cellC7 = "c7";
    		String cellC8 = "c8";
    		String cellC9 = "c9";
    		
    		String testXML = "<ns1:MapInfo xmlns:ns1=\""+NS_SPREADSHEETML+"\" SelectionNamespaces=\"\">" +
    						 "<ns1:Schema ID=\""+cellC6+"\" SchemaRef=\"a\" />"+ 
    						 "<ns1:Schema ID=\""+cellC7+"\" SchemaRef=\"b\" />"+ 
    						 "<ns1:Schema ID=\""+cellC8+"\" SchemaRef=\"c\" />"+ 
    						 "<ns1:Schema ID=\""+cellC9+"\" SchemaRef=\"d\" />"+ 
    						 "<ns1:Map ID=\"1\" Name=\"\" RootElement=\"\" SchemaID=\"\" ShowImportExportValidationErrors=\"\" AutoFit=\"\" Append=\"\" PreserveSortAFLayout=\"\" PreserveFormat=\"\">"+
    						 "<ns1:DataBinding DataBindingLoadMode=\"\" />"+ 
    						 "</ns1:Map>"+
    						 "<ns1:Map ID=\"2\" Name=\"\" RootElement=\"\" SchemaID=\"\" ShowImportExportValidationErrors=\"\" AutoFit=\"\" Append=\"\" PreserveSortAFLayout=\"\" PreserveFormat=\"\">"+
    						 "<ns1:DataBinding DataBindingLoadMode=\"\" />"+ 
    						 "</ns1:Map>"+
    						 "<ns1:Map ID=\"3\" Name=\"\" RootElement=\"\" SchemaID=\"\" ShowImportExportValidationErrors=\"\" AutoFit=\"\" Append=\"\" PreserveSortAFLayout=\"\" PreserveFormat=\"\">"+
    						 "<ns1:DataBinding DataBindingLoadMode=\"\" />"+ 
    						 "</ns1:Map>"+
    						 "</ns1:MapInfo>\u0000";
    
    		XSSFMap map = wb.getMapInfo().getXSSFMapByName("MapInfo_mapping");
    		assertNotNull(map);
    		XSSFImportFromXML importer = new XSSFImportFromXML(map);
    		 
    		importer.importFromXML(testXML);
    		 
    		//Check for Schema element
    		XSSFSheet sheet=wb.getSheetAt(1);
    		 
    		assertEquals(cellC6,sheet.getRow(5).getCell(2).getStringCellValue());
    		assertEquals(cellC7,sheet.getRow(6).getCell(2).getStringCellValue());
    		assertEquals(cellC8,sheet.getRow(7).getCell(2).getStringCellValue());
    		assertEquals(cellC9,sheet.getRow(8).getCell(2).getStringCellValue());
        } finally {
            wb.close();
        }
	}

