	public void testReadWrite() {
        XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook("sample.xlsx");
        SharedStringsTable sst1 = (SharedStringsTable)wb.getSharedStringSource();

        //serialize, read back and compare with the original
		SharedStringsTable sst2;
		try {
			ByteArrayOutputStream out = new ByteArrayOutputStream();
			sst1.writeTo(out);
			sst2 = new SharedStringsTable(new ByteArrayInputStream(out.toByteArray()));
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
        assertEquals(sst1.getCount(), sst2.getCount());
        assertEquals(sst1.getUniqueCount(), sst2.getUniqueCount());

        List<CTRst> items1 = sst1.getItems();
        List<CTRst> items2 = sst2.getItems();
        assertEquals(items1.size(), items2.size());
        for (int i = 0; i < items1.size(); i++) {
            CTRst st1 = items1.get(i);
            CTRst st2 = items2.get(i);
            assertEquals(st1.toString(), st2.toString());
        }
    }

