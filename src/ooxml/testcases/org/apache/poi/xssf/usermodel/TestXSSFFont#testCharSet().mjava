	@Test
	public void testCharSet() throws IOException {
		CTFont ctFont=CTFont.Factory.newInstance();
		CTIntProperty prop=ctFont.addNewCharset();
		prop.setVal(FontCharset.ANSI.getValue());

		ctFont.setCharsetArray(0,prop);
		XSSFFont xssfFont=new XSSFFont(ctFont);
		assertEquals(Font.ANSI_CHARSET,xssfFont.getCharSet());

		xssfFont.setCharSet(FontCharset.DEFAULT);
		assertEquals(FontCharset.DEFAULT.getValue(),ctFont.getCharsetArray(0).getVal());

		// Try with a few less usual ones:
		// Set with the Charset itself
        xssfFont.setCharSet(FontCharset.RUSSIAN);
        assertEquals(FontCharset.RUSSIAN.getValue(), xssfFont.getCharSet());
        // And set with the Charset index
        xssfFont.setCharSet(FontCharset.ARABIC.getValue());
        assertEquals(FontCharset.ARABIC.getValue(), xssfFont.getCharSet());
        xssfFont.setCharSet((byte)(FontCharset.ARABIC.getValue()));
        assertEquals(FontCharset.ARABIC.getValue(), xssfFont.getCharSet());
        
        // This one isn't allowed
        assertEquals(null, FontCharset.valueOf(9999));
        try {
           xssfFont.setCharSet(9999);
           fail("Shouldn't be able to set an invalid charset");
        } catch(POIXMLException e) {}
      
		
		// Now try with a few sample files
		
		// Normal charset
        XSSFWorkbook wb1 = XSSFTestDataSamples.openSampleWorkbook("Formatting.xlsx");
        assertEquals(0, 
              wb1.getSheetAt(0).getRow(0).getCell(0).getCellStyle().getFont().getCharSet()
        );
        wb1.close();
		
		// GB2312 charact set
        XSSFWorkbook wb2 = XSSFTestDataSamples.openSampleWorkbook("49273.xlsx");
        assertEquals(134, 
              wb2.getSheetAt(0).getRow(0).getCell(0).getCellStyle().getFont().getCharSet()
        );
        wb2.close();
	}

