    public void testNamedRanges() throws Exception {
    	// First up, a new file
        XSSFWorkbook workbook = new XSSFWorkbook();
        assertEquals(0, workbook.getNumberOfNames());
        
        Name nameA = workbook.createName();
        nameA.setReference("A2");
        nameA.setNameName("ForA2");
        
        XSSFName nameB = workbook.createName();
        nameB.setReference("B3");
        nameB.setNameName("ForB3");
        nameB.setComment("B3 Comment");
        
        // Save and re-load
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        workbook.write(baos);
        ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
        workbook = new XSSFWorkbook(Package.open(bais));
        
        assertEquals(2, workbook.getNumberOfNames());
        assertEquals("A2", workbook.getNameAt(0).getReference());
        assertEquals("ForA2", workbook.getNameAt(0).getNameName());
        assertNull(workbook.getNameAt(0).getComment());
        
        assertEquals("B3", workbook.getNameAt(1).getReference());
        assertEquals("ForB3", workbook.getNameAt(1).getNameName());
        assertEquals("B3 Comment", workbook.getNameAt(1).getComment());
        
        assertEquals("ForA2", workbook.getNameName(0));
        assertEquals(1, workbook.getNameIndex("ForB3"));
        assertEquals(-1, workbook.getNameIndex("ForB3!!"));
    	
        
        // Now, an existing file with named ranges
		File xml = new File(
				System.getProperty("HSSF.testdata.path") +
				File.separator + "WithVariousData.xlsx"
		);
		assertTrue(xml.exists());
    	
		workbook = new XSSFWorkbook(xml.toString());
		
        assertEquals(2, workbook.getNumberOfNames());
        assertEquals("Sheet1!$A$2:$A$7", workbook.getNameAt(0).getReference());
        assertEquals("AllANumbers", workbook.getNameAt(0).getNameName());
        assertEquals("All the numbers in A", workbook.getNameAt(0).getComment());
        
        assertEquals("Sheet1!$B$2:$B$7", workbook.getNameAt(1).getReference());
        assertEquals("AllBStrings", workbook.getNameAt(1).getNameName());
        assertEquals("All the strings in B", workbook.getNameAt(1).getComment());
        
        // Tweak, save, and re-check
        workbook.getNameAt(1).setNameName("BStringsFun");
        
        baos = new ByteArrayOutputStream();
        workbook.write(baos);
        bais = new ByteArrayInputStream(baos.toByteArray());
        workbook = new XSSFWorkbook(Package.open(bais));
		
        assertEquals(2, workbook.getNumberOfNames());
        assertEquals("Sheet1!$A$2:$A$7", workbook.getNameAt(0).getReference());
        assertEquals("AllANumbers", workbook.getNameAt(0).getNameName());
        assertEquals("All the numbers in A", workbook.getNameAt(0).getComment());
        
        assertEquals("Sheet1!$B$2:$B$7", workbook.getNameAt(1).getReference());
        assertEquals("BStringsFun", workbook.getNameAt(1).getNameName());
        assertEquals("All the strings in B", workbook.getNameAt(1).getComment());
    }

