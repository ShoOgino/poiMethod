   public void testARGBColour() throws Exception {
      XSSFWorkbook wb = XSSFTestDataSamples.openSampleWorkbook("48779.xlsx");

      // Check the CTColor is as expected
      XSSFColor rgb4 = wb.getCellStyleAt((short)1).getFillForegroundXSSFColor();
      assertEquals(false, rgb4.getCTColor().isSetIndexed());
      assertEquals(0,     rgb4.getCTColor().getIndexed());
      assertEquals(true, rgb4.getCTColor().isSetRgb());
      assertEquals(4, rgb4.getCTColor().getRgb().length);

      // Now check the XSSFColor
      assertEquals(0, rgb4.getIndexed());
      assertEquals(0.0, rgb4.getTint());

      assertEquals("FFFF0000", rgb4.getARGBHex());
      assertEquals(3, rgb4.getRgb().length);
      assertEquals(-1, rgb4.getRgb()[0]);
      assertEquals(0,  rgb4.getRgb()[1]);
      assertEquals(0,  rgb4.getRgb()[2]);

      assertEquals(4, rgb4.getARgb().length);
      assertEquals(-1, rgb4.getARgb()[0]);
      assertEquals(-1, rgb4.getARgb()[1]);
      assertEquals(0,  rgb4.getARgb()[2]);
      assertEquals(0,  rgb4.getARgb()[3]);

      // Tint doesn't have the alpha
      assertEquals(3, rgb4.getRgbWithTint().length);
      assertEquals(-1, rgb4.getRgbWithTint()[0]);
      assertEquals(0,  rgb4.getRgbWithTint()[1]);
      assertEquals(0,  rgb4.getRgbWithTint()[2]);


      // Turn on tinting, and check it behaves
      // TODO These values are suspected to be wrong...
      rgb4.setTint(0.4);
      assertEquals(0.4, rgb4.getTint());

      assertEquals(3, rgb4.getRgbWithTint().length);
      assertEquals(-1, rgb4.getRgbWithTint()[0]);
      assertEquals(102,  rgb4.getRgbWithTint()[1]);
      assertEquals(102,  rgb4.getRgbWithTint()[2]);
   }

