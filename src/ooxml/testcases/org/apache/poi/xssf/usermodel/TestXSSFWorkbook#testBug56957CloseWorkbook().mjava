    @Test
    public void testBug56957CloseWorkbook() throws Exception {
        File file = TempFile.createTempFile("TestBug56957_", ".xlsx");
        final Date dateExp = LocaleUtil.getLocaleCalendar(2014, 10, 9).getTime();

        try {
            // as the file is written to, we make a copy before actually working on it
            FileHelper.copyFile(HSSFTestDataSamples.getSampleFile("56957.xlsx"), file);

            assertTrue(file.exists());

            // read-only mode works!
            Workbook workbook = WorkbookFactory.create(OPCPackage.open(file, PackageAccess.READ));
            Date dateAct = workbook.getSheetAt(0).getRow(0).getCell(0, MissingCellPolicy.CREATE_NULL_AS_BLANK).getDateCellValue();
            assertEquals(dateExp, dateAct);
            workbook.close();
            workbook = null;

            workbook = WorkbookFactory.create(OPCPackage.open(file, PackageAccess.READ));
            dateAct = workbook.getSheetAt(0).getRow(0).getCell(0, MissingCellPolicy.CREATE_NULL_AS_BLANK).getDateCellValue();
            assertEquals(dateExp, dateAct);
            workbook.close();
            workbook = null;

            // now check read/write mode
            workbook = WorkbookFactory.create(OPCPackage.open(file, PackageAccess.READ_WRITE));
            dateAct = workbook.getSheetAt(0).getRow(0).getCell(0, MissingCellPolicy.CREATE_NULL_AS_BLANK).getDateCellValue();
            assertEquals(dateExp, dateAct);
            workbook.close();
            workbook = null;

            workbook = WorkbookFactory.create(OPCPackage.open(file, PackageAccess.READ_WRITE));
            dateAct = workbook.getSheetAt(0).getRow(0).getCell(0, MissingCellPolicy.CREATE_NULL_AS_BLANK).getDateCellValue();
            assertEquals(dateExp, dateAct);
            workbook.close();
            workbook = null;
        } finally {
            assertTrue(file.exists());
            assertTrue(file.delete());
        }
    }

