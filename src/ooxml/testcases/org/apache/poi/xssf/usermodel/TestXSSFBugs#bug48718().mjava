    /**
     * With HSSF, if you create a font, don't change it, and
     *  create a 2nd, you really do get two fonts that you 
     *  can alter as and when you want.
     * With XSSF, that wasn't the case, but this verfies
     *  that it now is again
     */
    @Test
    public void bug48718() throws Exception {
        // Verify the HSSF behaviour
        // Then ensure the same for XSSF
        Workbook[] wbs = new Workbook[] {
                new HSSFWorkbook(),
                new XSSFWorkbook()
        };
        int[] initialFonts = new int[] { 4, 1 };
        for(int i=0; i<wbs.length; i++) {
            Workbook wb = wbs[i];
            int startingFonts = initialFonts[i];

            assertEquals(startingFonts, wb.getNumberOfFonts());

            // Get a font, and slightly change it
            Font a = wb.createFont();
            assertEquals(startingFonts+1, wb.getNumberOfFonts());
            a.setFontHeightInPoints((short)23);
            assertEquals(startingFonts+1, wb.getNumberOfFonts());

            // Get two more, unchanged
            /*Font b =*/ wb.createFont();
            assertEquals(startingFonts+2, wb.getNumberOfFonts());
            /*Font c =*/ wb.createFont();
            assertEquals(startingFonts+3, wb.getNumberOfFonts());
        }
    }

