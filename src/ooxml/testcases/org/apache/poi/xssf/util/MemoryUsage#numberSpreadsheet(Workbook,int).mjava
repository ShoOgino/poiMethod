    /**
     * Generate a spreadsheet who's all cell values are numbers.
     * The data is generated until OutOfMemoryError. 
     * <p>
     * as compared to {@link #mixedSpreadsheet(org.apache.poi.ss.usermodel.Workbook, int)},
     * this method does not set string values and, hence, does not involve the Shared Strings Table.
     * </p>
     *
     * @param wb        the workbook to write to
     * @param numCols   the number of columns in a row
     */
    public static void numberSpreadsheet(Workbook wb, int numCols){

        System.out.println("Testing " + wb.getClass().getName());
        printMemoryUsage("before");
        int i=0, cnt=0;
        try {
            Sheet sh = wb.createSheet();
            for(i=0; ; i++){
                Row row = sh.createRow(i);
                for(int j=0; j < numCols; j++){
                    Cell cell = row.createCell(j);
                    cell.setCellValue(j);
                    cnt++;
                }
            }
        } catch (OutOfMemoryError er){
            System.out.println("Failed at row=" + i + ", objects : " + cnt);
        } catch (final Exception e) {
            System.out.println("Unable to reach an OutOfMemoryError");
            System.out.println(e.getClass().getName() + ": " + e.getMessage());
        }
        printMemoryUsage("after");
    }

