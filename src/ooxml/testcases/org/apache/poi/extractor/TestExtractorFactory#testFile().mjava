    @Test
    public void testFile() throws Exception {
        // Excel
        POITextExtractor xlsExtractor = ExtractorFactory.createExtractor(xls);
        assertNotNull("Had empty extractor for " + xls, xlsExtractor);
        assertTrue("Expected instanceof ExcelExtractor, but had: " + xlsExtractor.getClass(), 
                xlsExtractor
                instanceof ExcelExtractor
        );
        assertTrue(
                xlsExtractor.getText().length() > 200
        );
        xlsExtractor.close();

        POITextExtractor extractor = ExtractorFactory.createExtractor(xlsx);
        assertTrue(
                extractor
                instanceof XSSFExcelExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(xlsx);
        assertTrue(
                extractor.getText().length() > 200
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(xltx);
        assertTrue(
                extractor
                instanceof XSSFExcelExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(xltx);
        assertTrue(
                extractor.getText().contains("test")
        );
        extractor.close();

        // TODO Support OOXML-Strict, see bug #57699
        try {
            extractor = ExtractorFactory.createExtractor(xlsxStrict);
            fail("OOXML-Strict isn't yet supported");
        } catch (POIXMLException e) {
            // Expected, for now
        }
//        extractor = ExtractorFactory.createExtractor(xlsxStrict);
//        assertTrue(
//                extractor
//                instanceof XSSFExcelExtractor
//        );
//        extractor.close();
//
//        extractor = ExtractorFactory.createExtractor(xlsxStrict);
//        assertTrue(
//                extractor.getText().contains("test")
//        );
//        extractor.close();


        // Word
        extractor = ExtractorFactory.createExtractor(doc);
        assertTrue(
                extractor
                instanceof WordExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(doc6);
        assertTrue(
                extractor
                instanceof Word6Extractor
        );
        assertTrue(
                extractor.getText().length() > 20
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(doc95);
        assertTrue(
                extractor
                instanceof Word6Extractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(docx);
        assertTrue(
                extractor instanceof XWPFWordExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(docx);
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(dotx);
        assertTrue(
                extractor instanceof XWPFWordExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(dotx);
        assertTrue(
                extractor.getText().contains("Test")
        );
        extractor.close();

        // PowerPoint (PPT)
        extractor = ExtractorFactory.createExtractor(ppt);
        assertTrue(
                extractor
                instanceof PowerPointExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        // PowerPoint (PPTX)
        extractor = ExtractorFactory.createExtractor(pptx);
        assertTrue(
                extractor
                instanceof XSLFPowerPointExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        // Visio - binary
        extractor = ExtractorFactory.createExtractor(vsd);
        assertTrue(
                extractor
                instanceof VisioTextExtractor
        );
        assertTrue(
                extractor.getText().length() > 50
        );
        extractor.close();

        // Visio - vsdx
        extractor = ExtractorFactory.createExtractor(vsdx);
        assertTrue(
                extractor
                instanceof XDGFVisioExtractor
        );
        assertTrue(
                extractor.getText().length() > 20
        );
        extractor.close();

        // Publisher
        extractor = ExtractorFactory.createExtractor(pub);
        assertTrue(
                extractor
                instanceof PublisherTextExtractor
        );
        assertTrue(
                extractor.getText().length() > 50
        );
        extractor.close();

        // Outlook msg
        extractor = ExtractorFactory.createExtractor(msg);
        assertTrue(
                extractor
                instanceof OutlookTextExtactor
        );
        assertTrue(
                extractor.getText().length() > 50
        );
        extractor.close();

        // Text
        try {
            ExtractorFactory.createExtractor(txt);
            fail();
        } catch(IllegalArgumentException e) {
            // Good
        }
    }

