    public void testFile() throws Exception {
        // Excel
        POITextExtractor xlsExtractor = ExtractorFactory.createExtractor(xls);
        assertNotNull("Had empty extractor for " + xls, xlsExtractor);
        assertTrue("Expected instanceof ExcelExtractor, but had: " + xlsExtractor.getClass(), 
                xlsExtractor
                instanceof ExcelExtractor
        );
        assertTrue(
                xlsExtractor.getText().length() > 200
        );
        xlsExtractor.close();

        POITextExtractor extractor = ExtractorFactory.createExtractor(xlsx);
        assertTrue(
                extractor
                instanceof XSSFExcelExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(xlsx);
        assertTrue(
                extractor.getText().length() > 200
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(xltx);
        assertTrue(
                extractor
                instanceof XSSFExcelExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(xltx);
        assertTrue(
                extractor.getText().contains("test")
        );
        extractor.close();


        // Word
        assertTrue(
                ExtractorFactory.createExtractor(doc)
                instanceof WordExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(doc).getText().length() > 120
        );

        assertTrue(
                ExtractorFactory.createExtractor(doc6)
                instanceof Word6Extractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(doc6).getText().length() > 20
        );

        assertTrue(
                ExtractorFactory.createExtractor(doc95)
                instanceof Word6Extractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(doc95).getText().length() > 120
        );

        extractor = ExtractorFactory.createExtractor(docx);
        assertTrue(
                extractor instanceof XWPFWordExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(docx);
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(dotx);
        assertTrue(
                extractor instanceof XWPFWordExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(dotx);
        assertTrue(
                extractor.getText().contains("Test")
        );
        extractor.close();

        // PowerPoint
        assertTrue(
                ExtractorFactory.createExtractor(ppt)
                instanceof PowerPointExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(ppt).getText().length() > 120
        );

        extractor = ExtractorFactory.createExtractor(pptx);
        assertTrue(
                extractor
                instanceof XSLFPowerPointExtractor
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(pptx);
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        // Visio - binary
        assertTrue(
                ExtractorFactory.createExtractor(vsd)
                instanceof VisioTextExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(vsd).getText().length() > 50
        );
        // Visio - vsdx
        try {
            ExtractorFactory.createExtractor(vsdx);
            fail();
        } catch(IllegalArgumentException e) {
            // Good
        }

        // Publisher
        assertTrue(
                ExtractorFactory.createExtractor(pub)
                instanceof PublisherTextExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(pub).getText().length() > 50
        );

        // Outlook msg
        assertTrue(
                ExtractorFactory.createExtractor(msg)
                instanceof OutlookTextExtactor
        );
        assertTrue(
                ExtractorFactory.createExtractor(msg).getText().length() > 50
        );

        // Text
        try {
            ExtractorFactory.createExtractor(txt);
            fail();
        } catch(IllegalArgumentException e) {
            // Good
        }
    }

