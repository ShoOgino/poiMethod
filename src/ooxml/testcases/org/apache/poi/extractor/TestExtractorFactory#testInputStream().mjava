    @Test
    public void testInputStream() throws Exception {
        // Excel
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(xls))
                instanceof ExcelExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(xls)).getText().length() > 200
        );

        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(xlsx))
                instanceof XSSFExcelExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(xlsx)).getText().length() > 200
        );
        // TODO Support OOXML-Strict, see bug #57699
//        assertTrue(
//                ExtractorFactory.createExtractor(new FileInputStream(xlsxStrict))
//                instanceof XSSFExcelExtractor
//        );
//        assertTrue(
//                ExtractorFactory.createExtractor(new FileInputStream(xlsxStrict)).getText().length() > 200
//        );

        // Word
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(doc))
                instanceof WordExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(doc)).getText().length() > 120
        );

        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(doc6))
                instanceof Word6Extractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(doc6)).getText().length() > 20
        );

        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(doc95))
                instanceof Word6Extractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(doc95)).getText().length() > 120
        );

        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(docx))
                instanceof XWPFWordExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(docx)).getText().length() > 120
        );

        // PowerPoint
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(ppt))
                instanceof PowerPointExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(ppt)).getText().length() > 120
        );

        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(pptx))
                instanceof XSLFPowerPointExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(pptx)).getText().length() > 120
        );

        // Visio
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(vsd))
                instanceof VisioTextExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(vsd)).getText().length() > 50
        );
        // Visio - vsdx
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(vsdx))
                instanceof XDGFVisioExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(vsdx)).getText().length() > 20
        );

        
        // Publisher
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(pub))
                instanceof PublisherTextExtractor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(pub)).getText().length() > 50
        );

        // Outlook msg
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(msg))
                instanceof OutlookTextExtactor
        );
        assertTrue(
                ExtractorFactory.createExtractor(new FileInputStream(msg)).getText().length() > 50
        );

        // Text
        try {
            FileInputStream stream = new FileInputStream(txt);
            try {
                ExtractorFactory.createExtractor(stream);
                fail();
            } finally {
                stream.close();
            }
        } catch(IllegalArgumentException e) {
            // Good
        }
    }

