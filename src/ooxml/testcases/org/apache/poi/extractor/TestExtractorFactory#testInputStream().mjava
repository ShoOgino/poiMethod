    @Test
    public void testInputStream() throws Exception {
        // Excel
        POITextExtractor extractor = ExtractorFactory.createExtractor(new FileInputStream(xls));
        assertTrue(
                extractor
                instanceof ExcelExtractor
        );
        assertTrue(
                extractor.getText().length() > 200
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(new FileInputStream(xlsx));
        assertTrue(
                extractor
                instanceof XSSFExcelExtractor
        );
        assertTrue(
                extractor.getText().length() > 200
        );
        // TODO Support OOXML-Strict, see bug #57699
//        assertTrue(
//                ExtractorFactory.createExtractor(new FileInputStream(xlsxStrict))
//                instanceof XSSFExcelExtractor
//        );
//        assertTrue(
//                ExtractorFactory.createExtractor(new FileInputStream(xlsxStrict)).getText().length() > 200
//        );
        extractor.close();

        // Word
        extractor = ExtractorFactory.createExtractor(new FileInputStream(doc));
        assertTrue(
                extractor
                instanceof WordExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(new FileInputStream(doc6));
        assertTrue(
                extractor
                instanceof Word6Extractor
        );
        assertTrue(
                extractor.getText().length() > 20
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(new FileInputStream(doc95));
        assertTrue(
                extractor
                instanceof Word6Extractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(new FileInputStream(docx));
        assertTrue(
                extractor
                instanceof XWPFWordExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        // PowerPoint
        extractor = ExtractorFactory.createExtractor(new FileInputStream(ppt));
        assertTrue(
                extractor
                instanceof PowerPointExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        extractor = ExtractorFactory.createExtractor(new FileInputStream(pptx));
        assertTrue(
                extractor
                instanceof XSLFPowerPointExtractor
        );
        assertTrue(
                extractor.getText().length() > 120
        );
        extractor.close();

        // Visio
        extractor = ExtractorFactory.createExtractor(new FileInputStream(vsd));
        assertTrue(
                extractor
                instanceof VisioTextExtractor
        );
        assertTrue(
                extractor.getText().length() > 50
        );
        extractor.close();

        // Visio - vsdx
        extractor = ExtractorFactory.createExtractor(new FileInputStream(vsdx));
        assertTrue(
                extractor
                instanceof XDGFVisioExtractor
        );
        assertTrue(
                extractor.getText().length() > 20
        );
        extractor.close();
        
        // Publisher
        extractor = ExtractorFactory.createExtractor(new FileInputStream(pub));
        assertTrue(
                extractor
                instanceof PublisherTextExtractor
        );
        assertTrue(
                extractor.getText().length() > 50
        );
        extractor.close();

        // Outlook msg
        extractor = ExtractorFactory.createExtractor(new FileInputStream(msg));
        assertTrue(
                extractor
                instanceof OutlookTextExtactor
        );
        assertTrue(
                extractor.getText().length() > 50
        );
        extractor.close();

        // Text
        try {
            FileInputStream stream = new FileInputStream(txt);
            try {
                ExtractorFactory.createExtractor(stream);
                fail();
            } finally {
                stream.close();
            }
        } catch(IllegalArgumentException e) {
            // Good
        }
    }

