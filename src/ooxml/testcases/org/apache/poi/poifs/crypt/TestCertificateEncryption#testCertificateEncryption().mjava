    @Test
    public void testCertificateEncryption() throws Exception {
        POIFSFileSystem fs = new POIFSFileSystem();
        EncryptionInfo info = new EncryptionInfo(EncryptionMode.agile, CipherAlgorithm.aes128, HashAlgorithm.sha1, -1, -1, ChainingMode.cbc);
        AgileEncryptionVerifier aev = (AgileEncryptionVerifier)info.getVerifier();
        CertData certData = loadKeystore();
        aev.addCertificate(certData.x509);
        
        Encryptor enc = info.getEncryptor();
        enc.confirmPassword("foobaa");
        
        File file = POIDataSamples.getDocumentInstance().getFile("VariousPictures.docx");
        InputStream fis = new FileInputStream(file);
        byte byteExpected[] = IOUtils.toByteArray(fis);
        fis.close();
        
        OutputStream os = enc.getDataStream(fs);
        IOUtils.copy(new ByteArrayInputStream(byteExpected), os);
        os.close();
        
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        fs.writeFilesystem(bos);
        bos.close();
        
        fs = new POIFSFileSystem(new ByteArrayInputStream(bos.toByteArray()));
        info = new EncryptionInfo(fs);
        AgileDecryptor agDec = (AgileDecryptor)info.getDecryptor();
        boolean passed = agDec.verifyPassword(certData.keypair, certData.x509);
        assertTrue("certificate verification failed", passed);
        
        fis = agDec.getDataStream(fs);
        byte byteActual[] = IOUtils.toByteArray(fis);
        fis.close();
        
        assertThat(byteExpected, equalTo(byteActual));
    }

