    /**
     * Verify we give helpful exceptions (or as best we can) when
     *  supplied with non-OOXML file types (eg OLE2, ODF)
     */
    @Test
    public void NonOOXMLFileTypes() throws Exception {
        // Spreadsheet has a good mix of alternate file types
        POIDataSamples files = POIDataSamples.getSpreadSheetInstance();
        
        // OLE2 - Stream
        try {
			InputStream stream = files.openResourceAsStream("SampleSS.xls");
			try {
				OPCPackage.open(stream);
			} finally {
				stream.close();
			}
            fail("Shouldn't be able to open OLE2");
        } catch (OLE2NotOfficeXmlFileException e) {
            assertTrue(e.getMessage().contains("The supplied data appears to be in the OLE2 Format"));
            assertTrue(e.getMessage().contains("You are calling the part of POI that deals with OOXML"));
        }
        // OLE2 - File
        try {
            OPCPackage.open(files.getFile("SampleSS.xls"));
            fail("Shouldn't be able to open OLE2");
        } catch (OLE2NotOfficeXmlFileException e) {
            assertTrue(e.getMessage().contains("The supplied data appears to be in the OLE2 Format"));
            assertTrue(e.getMessage().contains("You are calling the part of POI that deals with OOXML"));
        }
        
        // Raw XML - Stream
        try {
			InputStream stream = files.openResourceAsStream("SampleSS.xml");
			try {
				OPCPackage.open(stream);
			} finally {
				stream.close();
			}
            fail("Shouldn't be able to open XML");
        } catch (NotOfficeXmlFileException e) {
            assertTrue(e.getMessage().contains("The supplied data appears to be a raw XML file"));
            assertTrue(e.getMessage().contains("Formats such as Office 2003 XML"));
        }
        // Raw XML - File
        try {
            OPCPackage.open(files.getFile("SampleSS.xml"));
            fail("Shouldn't be able to open XML");
        } catch (NotOfficeXmlFileException e) {
            assertTrue(e.getMessage().contains("The supplied data appears to be a raw XML file"));
            assertTrue(e.getMessage().contains("Formats such as Office 2003 XML"));
        }
        
        // ODF / ODS - Stream
        try {
			InputStream stream = files.openResourceAsStream("SampleSS.ods");
			try {
				OPCPackage.open(stream);
			} finally {
				stream.close();
			}
            fail("Shouldn't be able to open ODS");
        } catch (ODFNotOfficeXmlFileException e) {
            assertTrue(e.toString().contains("The supplied data appears to be in ODF"));
            assertTrue(e.toString().contains("Formats like these (eg ODS"));
        }
        // ODF / ODS - File
        try {
            OPCPackage.open(files.getFile("SampleSS.ods"));
            fail("Shouldn't be able to open ODS");
        } catch (ODFNotOfficeXmlFileException e) {
            assertTrue(e.toString().contains("The supplied data appears to be in ODF"));
            assertTrue(e.toString().contains("Formats like these (eg ODS"));
        }
        
        // Plain Text - Stream
        try {
			InputStream stream = files.openResourceAsStream("SampleSS.txt");
			try {
				OPCPackage.open(stream);
			} finally {
				stream.close();
			}
            fail("Shouldn't be able to open Plain Text");
        } catch (NotOfficeXmlFileException e) {
            assertTrue(e.getMessage().contains("No valid entries or contents found"));
            assertTrue(e.getMessage().contains("not a valid OOXML"));
        }
        // Plain Text - File
        try {
            OPCPackage.open(files.getFile("SampleSS.txt"));
            fail("Shouldn't be able to open Plain Text");
        } catch (UnsupportedFileFormatException e) {
            // Unhelpful low-level error, sorry
        }
    }

