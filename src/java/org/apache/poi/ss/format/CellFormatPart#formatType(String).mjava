    /**
     * Returns the type of format.
     *
     * @param fdesc The format specification
     *
     * @return The type of format.
     */
    private CellFormatType formatType(String fdesc) {
        fdesc = fdesc.trim();
        if (fdesc.equals("") || fdesc.equalsIgnoreCase("General"))
            return CellFormatType.GENERAL;

        Matcher m = SPECIFICATION_PAT.matcher(fdesc);
        boolean couldBeDate = false;
        boolean seenZero = false;
        while (m.find()) {
            String repl = m.group(0);
            
            if (repl.length() > 0) {
                char c1 = repl.charAt(0);
                char c2 = 0;
                if (repl.length() > 1)
                    c2 = Character.toLowerCase(repl.charAt(1));
                
                switch (c1) {
                case '@':
                    return CellFormatType.TEXT;
                case 'd':
                case 'D':
                case 'y':
                case 'Y':
                    return CellFormatType.DATE;
                case 'h':
                case 'H':
                case 'm':
                case 'M':
                case 's':
                case 'S':
                    // These can be part of date, or elapsed
                    couldBeDate = true;
                    break;
                case '0':
                    // This can be part of date, elapsed, or number
                    seenZero = true;
                    break;
                case '[':
                    if (c2 == 'h' || c2 == 'm' || c2 == 's') {
                        return CellFormatType.ELAPSED;
                    }
                    if (c2 == '$') {
                        // Localised currency
                        return CellFormatType.NUMBER;
                    }
                    // Something else inside [] which isn't supported!
                    throw new IllegalArgumentException("Unsupported [] format block '" +
                                                       repl + "' in '" + fdesc + "'");
                case '#':
                case '?':
                    return CellFormatType.NUMBER;
                }
            }
        }

        // Nothing definitive was found, so we figure out it deductively
        if (couldBeDate)
            return CellFormatType.DATE;
        if (seenZero)
            return CellFormatType.NUMBER;
        return CellFormatType.TEXT;
    }

