    /**
     * Check if the given formula should be evaluated in array mode.
     *
     * <p>
     *     Normally, array formulas are recognized from their definition:
     *     pressing Ctrl+Shift+Enter in Excel marks the input as an array entered formula.
     *</p>
     * <p>
     *     However, in some cases Excel evaluates  tokens in array mode depending on the context.
     *     The <code>INDEX( area, row_num, [column_num])</code> function is an example:
     *
     *     If the array argument includes more than one row and row_num is omitted or set to 0,
     *     the Excel INDEX function returns an array of the entire column. Similarly, if array
     *     includes more than one column and the column_num argument is omitted or set to 0,
     *     the INDEX formula returns the entire row
     * </p>
     *
     * @param ptgs  parsed formula to analyze
     * @return whether the formula should be evaluated in array mode
     */
    private boolean isInArrayContext(Ptg[] ptgs){
        boolean arrayMode = false;
        if(ptgs != null) for(int j = ptgs.length - 1; j >= 0; j--){
            if(ptgs[j] instanceof FuncVarPtg){
                FuncVarPtg f = (FuncVarPtg)ptgs[j];
                if(f.getName().equals("INDEX") && f.getNumberOfOperands() <= 3){
                    // check 2nd and 3rd arguments.
                    arrayMode = (ptgs[j - 1] instanceof IntPtg && ((IntPtg)ptgs[j - 1]).getValue() == 0)
                            || (ptgs[j - 2] instanceof IntPtg && ((IntPtg)ptgs[j - 2]).getValue() == 0);
                    if(arrayMode) break;
                }
            }
        }
        return arrayMode;
    }

