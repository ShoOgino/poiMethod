    @Override
    public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {
        if (args.length != 2) {
            return ErrorEval.VALUE_INVALID;
        }

        try {
            double startDateAsNumber = NumericFunction.singleOperandEvaluate(args[0], ec.getRowIndex(), ec.getColumnIndex());
            int months = (int) NumericFunction.singleOperandEvaluate(args[1], ec.getRowIndex(), ec.getColumnIndex());

            // Excel treats date 0 as 1900-01-00; EOMONTH results in 1900-01-31
            if (startDateAsNumber >= 0.0 && startDateAsNumber < 1.0) {
                startDateAsNumber = 1.0;
            }

            Date startDate = DateUtil.getJavaDate(startDateAsNumber, false);

            Calendar cal = new GregorianCalendar(DEFAULT_TIMEZONE, Locale.ROOT);
            cal.setTime(startDate);
            cal.set(cal.get(Calendar.YEAR), cal.get(Calendar.MONTH), cal.get(Calendar.DAY_OF_MONTH), 0, 0, 0);
            cal.set(Calendar.MILLISECOND, 0);

            cal.add(Calendar.MONTH, months + 1);
            cal.set(Calendar.DAY_OF_MONTH, 1);
            cal.add(Calendar.DAY_OF_MONTH, -1);

            return new NumberEval(DateUtil.getExcelDate(cal.getTime()));
        } catch (EvaluationException e) {
            return e.getErrorEval();
        }
    }

