    /**
     * @param cell
     * @param region for adjusting relative formulas
     * @return
     */
    private boolean checkValue(Cell cell, CellRangeAddress region) {
        if (cell == null || DataValidationEvaluator.isType(cell, CellType.BLANK)
           || DataValidationEvaluator.isType(cell,CellType.ERROR) 
           || (DataValidationEvaluator.isType(cell,CellType.STRING) 
                   && (cell.getStringCellValue() == null || cell.getStringCellValue().isEmpty())
               )
           ) return false;
        
        ValueEval eval = unwrapEval(workbookEvaluator.evaluate(rule.getFormula1(), ConditionalFormattingEvaluator.getRef(cell), region));
        
        String f2 = rule.getFormula2();
        ValueEval eval2 = null;
        if (f2 != null && f2.length() > 0) {
            eval2 = unwrapEval(workbookEvaluator.evaluate(f2, ConditionalFormattingEvaluator.getRef(cell), region));
        }
        
        // we assume the cell has been evaluated, and the current formula value stored
        if (DataValidationEvaluator.isType(cell, CellType.BOOLEAN)) {
            if (eval instanceof BoolEval && (eval2 == null || eval2 instanceof BoolEval) ) {
                return operator.isValid(cell.getBooleanCellValue(), ((BoolEval) eval).getBooleanValue(), eval2 == null ? null : ((BoolEval) eval2).getBooleanValue());
            }
            return false; // wrong types
        }
        if (DataValidationEvaluator.isType(cell, CellType.NUMERIC)) {
            if (eval instanceof NumberEval && (eval2 == null || eval2 instanceof NumberEval) ) {
                return operator.isValid(cell.getNumericCellValue(), ((NumberEval) eval).getNumberValue(), eval2 == null ? null : ((NumberEval) eval2).getNumberValue());
            }
            return false; // wrong types
        }
        if (DataValidationEvaluator.isType(cell, CellType.STRING)) {
            if (eval instanceof StringEval && (eval2 == null || eval2 instanceof StringEval) ) {
                return operator.isValid(cell.getStringCellValue(), ((StringEval) eval).getStringValue(), eval2 == null ? null : ((StringEval) eval2).getStringValue());
            }
            return false; // wrong types
        }
        
        // should not get here, but in case...
        return false;
    }

