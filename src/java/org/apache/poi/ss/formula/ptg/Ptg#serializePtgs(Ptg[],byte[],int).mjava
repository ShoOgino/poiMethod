	/**
	 * Writes the ptgs to the data buffer, starting at the specified offset.
	 *
	 * <br/>
	 * The 2 byte encode length field is <b>not</b> written by this method.
	 * @return number of bytes written
	 */
	public static int serializePtgs(Ptg[] ptgs, byte[] array, int offset) {
		int nTokens = ptgs.length;

		LittleEndianByteArrayOutputStream out = new LittleEndianByteArrayOutputStream(array, offset);

		List<Ptg> arrayPtgs = null;

		for (int k = 0; k < nTokens; k++) {
			Ptg ptg = ptgs[k];

			ptg.write(out);
			if (ptg instanceof ArrayPtg) {
				if (arrayPtgs == null) {
					arrayPtgs = new ArrayList<Ptg>(5);
				}
				arrayPtgs.add(ptg);
			}
		}
		if (arrayPtgs != null) {
			for (int i=0;i<arrayPtgs.size();i++) {
				ArrayPtg p = (ArrayPtg)arrayPtgs.get(i);
				p.writeTokenValueBytes(out);
			}
		}
		return out.getWriteIndex() - offset;
	}

