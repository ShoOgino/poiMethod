	private static Map<OperationPtg, OperationEval> initialiseInstancesMap2() {
		Map<OperationPtg, OperationEval> m = new HashMap<OperationPtg, OperationEval>(32);

		put(m, 2, EqualPtg.instance, RelationalOperationEval.EqualEval);
		put(m, 2, GreaterEqualPtg.instance, RelationalOperationEval.GreaterEqualEval);
		put(m, 2, GreaterThanPtg.instance, RelationalOperationEval.GreaterThanEval);
		put(m, 2, LessEqualPtg.instance, RelationalOperationEval.LessEqualEval);
		put(m, 2, LessThanPtg.instance, RelationalOperationEval.LessThanEval);
		put(m, 2, NotEqualPtg.instance, RelationalOperationEval.NotEqualEval);

		put(m, 2, ConcatPtg.instance, ConcatEval.instance);
		put(m, 2, AddPtg.instance, TwoOperandNumericOperation.AddEval);
		put(m, 2, DividePtg.instance, TwoOperandNumericOperation.DivideEval);
		put(m, 2, MultiplyPtg.instance, TwoOperandNumericOperation.MultiplyEval);
		put(m, 1, PercentPtg.instance, PercentEval.instance);
		put(m, 2, PowerPtg.instance, TwoOperandNumericOperation.PowerEval);
		put(m, 2, SubtractPtg.instance, TwoOperandNumericOperation.SubtractEval);
		put(m, 1, UnaryMinusPtg.instance, UnaryMinusEval.instance);
		put(m, 1, UnaryPlusPtg.instance, UnaryPlusEval.instance);
		put(m, 2, RangePtg.instance, RangeEval.instance);
		put(m, 2, IntersectionPtg.instance, IntersectionEval.instance);
		return m;
	}

