	private static Map<Class<? extends Ptg>, OperationEval> initialiseInstancesMap() {
		Map<Class<? extends Ptg>, OperationEval> m = new HashMap<Class<? extends Ptg>, OperationEval>(32);

		put(m, 2, EqualPtg.class, RelationalOperationEval.EqualEval);
		put(m, 2, GreaterEqualPtg.class, RelationalOperationEval.GreaterEqualEval);
		put(m, 2, GreaterThanPtg.class, RelationalOperationEval.GreaterThanEval);
		put(m, 2, LessEqualPtg.class, RelationalOperationEval.LessEqualEval);
		put(m, 2, LessThanPtg.class, RelationalOperationEval.LessThanEval);
		put(m, 2, NotEqualPtg.class, RelationalOperationEval.NotEqualEval);

		put(m, 2, ConcatPtg.class, ConcatEval.instance);
		put(m, 2, AddPtg.class, TwoOperandNumericOperation.AddEval);
		put(m, 2, DividePtg.class, TwoOperandNumericOperation.DivideEval);
		put(m, 2, MultiplyPtg.class, TwoOperandNumericOperation.MultiplyEval);
		put(m, 1, PercentPtg.class, PercentEval.instance);
		put(m, 2, PowerPtg.class, TwoOperandNumericOperation.PowerEval);
		put(m, 2, SubtractPtg.class, TwoOperandNumericOperation.SubtractEval);
		put(m, 1, UnaryMinusPtg.class, UnaryMinusEval.instance);
		put(m, 1, UnaryPlusPtg.class, UnaryPlusEval.instance);
		put(m, 2, RangePtg.class, RangeEval.instance);
		return m;
	}

