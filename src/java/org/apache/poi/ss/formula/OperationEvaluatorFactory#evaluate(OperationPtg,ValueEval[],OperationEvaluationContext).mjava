	/**
	 * returns the OperationEval concrete impl instance corresponding
	 * to the supplied operationPtg
	 */
	public static ValueEval evaluate(OperationPtg ptg, ValueEval[] args,
			OperationEvaluationContext ec) {
		if(ptg == null) {
			throw new IllegalArgumentException("ptg must not be null");
		}
		Function result = _instancesByPtgClass.get(ptg);
		FreeRefFunction udfFunc = null;
		if (result == null) {
			if (ptg instanceof AbstractFunctionPtg) {
				AbstractFunctionPtg fptg = (AbstractFunctionPtg)ptg;
				int functionIndex = fptg.getFunctionIndex();
				switch (functionIndex) {
					case FunctionMetadataRegistry.FUNCTION_INDEX_INDIRECT:
						udfFunc = Indirect.instance;
						break;
					case FunctionMetadataRegistry.FUNCTION_INDEX_EXTERNAL:
						udfFunc = UserDefinedFunction.instance;
						break;
					default:
						result = FunctionEval.getBasicFunction(functionIndex);
						break;
				}
			}
		}
		if (result != null) {
			EvaluationSheet evalSheet = ec.getWorkbook().getSheet(ec.getSheetIndex());
			EvaluationCell evalCell = evalSheet.getCell(ec.getRowIndex(), ec.getColumnIndex());

		    if (evalCell != null && (evalCell.isPartOfArrayFormulaGroup() || ec.isArraymode()) && result instanceof ArrayFunction)
		        return ((ArrayFunction) result).evaluateArray(args, ec.getRowIndex(), ec.getColumnIndex());
		                
			return  result.evaluate(args, ec.getRowIndex(), ec.getColumnIndex());
		} else if (udfFunc != null){
			return  udfFunc.evaluate(args, ec);
		}

		throw new RuntimeException("Unexpected operation ptg class (" + ptg.getClass().getName() + ")");
	}

