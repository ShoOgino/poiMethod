    /**
     * Builds sheet from parent workbook and 2D array with cell
     * values. Creates rows anyway (even if row contains only null
     * cells), creates cells only if corresponding property is true.
     * The conversion is performed in the following way:
     *
     * <ul>
     * <li>Numbers become numeric cells.</li>
     * <li><code>java.util.Date</code> or <code>java.util.Calendar</code>
     *     instances become date cells.</li>
     * <li>String with leading '=' char become formulas (leading '='
     *     trancated).</li>
     * <li>Other objects become strings via <code>Object.toString()</code>
     *     method.</li>
     * </ul>
     *
     * @return newly created sheet
     */
    public Sheet build() {
	Sheet sheet = workbook.createSheet();
	Row currentRow = null;
	Cell currentCell = null;

	for (int rowIndex = 0; rowIndex < cells.length; ++rowIndex) {
	    Object[] rowArray = cells[rowIndex];
	    currentRow = sheet.createRow(rowIndex);

	    for (int cellIndex = 0; cellIndex < rowArray.length; ++cellIndex) {
		Object cellValue = rowArray[cellIndex];
		if (cellValue != null || shouldCreateEmptyCells) {
		    currentCell = currentRow.createCell(cellIndex);
		    setCellValue(currentCell, cellValue);
		}
	    }
	}
	return sheet;
    }

