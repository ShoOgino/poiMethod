	/**
	 * @return <code>true</code> if carry (out of the MS digit) occurred
	 */
	private static boolean performRound(StringBuffer sb, int firstSigFigIx, int nSigFigs) {
		int nextDigitIx = firstSigFigIx + nSigFigs;
		if(nextDigitIx == sb.length()) {
			return false; // nothing to do - digit to be rounded is at the end of the buffer
		}
		if(nextDigitIx > sb.length()) {
			throw new RuntimeException("Buffer too small to fit all significant digits");
		}
		boolean hadCarryOutOfFirstDigit;
		if(sb.charAt(nextDigitIx) < '5') {
			// change to digit
			hadCarryOutOfFirstDigit = false;
		} else {
			hadCarryOutOfFirstDigit = roundAndCarry(sb, nextDigitIx);
		}
		// clear out the rest of the digits after the rounded digit
		// (at least the nearby digits)
		int endIx = Math.min(nextDigitIx + MAX_EXTRA_ZEROS, sb.length());
		for(int i = nextDigitIx; i<endIx; i++) {
			sb.setCharAt(i, '0');
		}
		return hadCarryOutOfFirstDigit;
	}

