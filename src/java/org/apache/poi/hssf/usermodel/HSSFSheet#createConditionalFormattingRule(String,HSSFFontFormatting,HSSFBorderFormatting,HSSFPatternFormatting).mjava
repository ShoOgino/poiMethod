     /**
      * A factory method allowing to create a conditional formatting rule with a formula 
      * and formatting rules such as font format, border format and pattern format. <br>
      * 
      * The formatting rules are applied by Excel when the value of the formula not equal to 0. 
      * 
      * @param comparisonOperation - one of the following values: <p>
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_BETWEEN}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_NOT_BETWEEN}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_EQUAL}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_NOT_EQUAL}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_GT}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_LT}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_GE}</li> 
      * 		<li>{@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_LE}</li>
      * </p> 
      * @param formula1 - formula for the valued, compared with the cell
      * @param formula2 - second formula (only used with 
      * {@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_BETWEEN}) and
      * {@link HSSFConditionalFormattingRule#COMPARISON_OPERATOR_NOT_BETWEEN} operations)   
      * @param fontFmt - font formatting rules
      * @param bordFmt - border formatting rules
      * @param patternFmt - pattern formatting rules
      * @return
      * 
      */
     public HSSFConditionalFormattingRule createConditionalFormattingRule(
     		String formula, 
     		HSSFFontFormatting fontFmt,
 			HSSFBorderFormatting bordFmt, 
 			HSSFPatternFormatting patternFmt)
     {
     	HSSFConditionalFormattingRule cf = new HSSFConditionalFormattingRule(workbook);
 		cf.setFontFormatting(fontFmt);
 		cf.setBorderFormatting(bordFmt);
 		cf.setPatternFormatting(patternFmt);
 		cf.setFormulaCondition(formula);
     	return cf;
     }

