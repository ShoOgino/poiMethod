    /**
     * Returns the top-level drawing patriach, if there is
     *  one.
     * This will hold any graphics or charts for the sheet.
     * WARNING - calling this will trigger a parsing of the
     *  associated escher records. Any that aren't supported
     *  (such as charts and complex drawing types) will almost
     *  certainly be lost or corrupted when written out. Only
     *  use this with simple drawings, otherwise call
     *  {@link HSSFSheet#createDrawingPatriarch()} and
     *  start from scratch!
     */
    public HSSFPatriarch getDrawingPatriarch() {
    	book.findDrawingGroup();
    	
    	// If there's now no drawing manager, then there's
    	//  no drawing escher records on the workbook
    	if(book.getDrawingManager() == null) {
    		return null;
    	}
    	
    	int found = sheet.aggregateDrawingRecords(
    			book.getDrawingManager(), false
    	);
    	if(found == -1) {
    		// Workbook has drawing stuff, but this sheet doesn't
    		return null;
    	}
    	
    	// Grab our aggregate record, and wire it up
        EscherAggregate agg = (EscherAggregate) sheet.findFirstRecordBySid(EscherAggregate.sid);
        HSSFPatriarch patriarch = new HSSFPatriarch(this, agg);
        agg.setPatriarch(patriarch);
        
        // Have it process the records into high level objects
        //  as best it can do (this step may eat anything
        //  that isn't supported, you were warned...)
        agg.convertRecordsToUserModel();
        
        // Return what we could cope with
        return patriarch;
    }

