	private static void add(Map m, Class ptgClass, Class evalClass) {
		// perform some validation now, to keep later exception handlers simple
		if(!Ptg.class.isAssignableFrom(ptgClass)) {
			throw new IllegalArgumentException("Expected Ptg subclass");
		}
		
		if(!OperationEval.class.isAssignableFrom(evalClass)) {
			throw new IllegalArgumentException("Expected OperationEval subclass");
		}
		if (!Modifier.isPublic(evalClass.getModifiers())) {
			throw new RuntimeException("Eval class must be public");
		}
		if (Modifier.isAbstract(evalClass.getModifiers())) {
			throw new RuntimeException("Eval class must not be abstract");
		}
		
		Constructor constructor;
		try {
			constructor = evalClass.getDeclaredConstructor(OPERATION_CONSTRUCTOR_CLASS_ARRAY);
		} catch (NoSuchMethodException e) {
			throw new RuntimeException("Missing constructor");
		}
		if (!Modifier.isPublic(constructor.getModifiers())) {
			throw new RuntimeException("Eval constructor must be public");
		}
		m.put(ptgClass, constructor);
	}

