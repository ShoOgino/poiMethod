    /**
     * set a string value for the cell. Please note that if you are using
     * full 16 bit unicode you should call <code>setEncoding()</code> first.
     *
     * @param value  value to set the cell to.  For formulas we'll set the formula
     * string, for String cells we'll set its value.  For other types we will
     * change the cell to a string cell and set its value.
     * If value is null then we will change the cell to a Blank cell.
     */
    public void setCellValue(HSSFRichTextString value) {
        int row=record.getRow();
        short col=record.getColumn();
        short styleIndex=record.getXFIndex();
        if (value == null) {
            setCellType(CELL_TYPE_BLANK, false, row, col, styleIndex);
            return;
        }
        if (cellType == CELL_TYPE_FORMULA) {
            // Set the 'pre-evaluated result' for the formula 
            // note - formulas do not preserve text formatting.
            FormulaRecordAggregate fr = (FormulaRecordAggregate) record;
            // must make new sr because fr.getStringRecord() may be null
            StringRecord sr = new StringRecord(); 
            sr.setString(value.getString()); // looses format
            fr.setStringRecord(sr);
            return;
        }

        if (cellType != CELL_TYPE_STRING) {
            setCellType(CELL_TYPE_STRING, false, row, col, styleIndex);
        }
        int index = 0;

        UnicodeString str = value.getUnicodeString();
        index = book.addSSTString(str);
        (( LabelSSTRecord ) record).setSSTIndex(index);
        stringValue = value;
        stringValue.setWorkbookReferences(book, (( LabelSSTRecord ) record));
        stringValue.setUnicodeString(book.getSSTString(index));
    }

