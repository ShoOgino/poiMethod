    //@Override // TODO Not yet on POIDocument
    /**
     * Write out this workbook to the currently open {@link File} via the
     *  writeable {@link POIFSFileSystem} it was opened as. 
     * <p>This will fail (with an {@link IllegalStateException} if the
     *  Workbook was opened read-only, opened from an {@link InputStream}
     *   instead of a File, or if this is not the root document. For those cases, 
     *   you must use {@link #write(OutputStream)} to write to a brand new stream.
     */
    public void write() throws IOException {
        // TODO Push much of this logic down to POIDocument, as will be common for most formats
        if (directory == null) {
            throw new IllegalStateException("Newly created Workbook, cannot save in-place");
        }
        if (directory.getParent() != null) {
            throw new IllegalStateException("This is not the root document, cannot save in-place");
        }
        if (directory.getFileSystem() == null ||
            !directory.getFileSystem().isInPlaceWriteable()) {
            throw new IllegalStateException("Opened read-only or via an InputStream, a Writeable File");
        }
        
        // Update the Workbook stream in the file
        DocumentNode workbookNode = (DocumentNode)directory.getEntry(
                getWorkbookDirEntryName(directory));
        NPOIFSDocument workbookDoc = new NPOIFSDocument(workbookNode);
        workbookDoc.replaceContents(new ByteArrayInputStream(getBytes()));
        
        // Sync with the File on disk
        directory.getFileSystem().writeFilesystem();
    }

