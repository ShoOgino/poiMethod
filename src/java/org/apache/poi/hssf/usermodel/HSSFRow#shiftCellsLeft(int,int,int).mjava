    /**
     * Shifts column range [firstShiftColumnIndex-lastShiftColumnIndex] step places to the left.
     * @param firstShiftColumnIndex the column to start shifting
     * @param lastShiftColumnIndex the column to end shifting
     * @param step length of the shifting step
     */
    @Override
    public void shiftCellsLeft(int firstShiftColumnIndex, int lastShiftColumnIndex, int step) {
        if(step < 0)
            throw new IllegalArgumentException("Shifting step may not be negative ");
        if(firstShiftColumnIndex > lastShiftColumnIndex)
            throw new IllegalArgumentException(String.format(LocaleUtil.getUserLocale(),
                    "Incorrect shifting range : %d-%d", firstShiftColumnIndex, lastShiftColumnIndex));
        if(firstShiftColumnIndex - step < 0) 
            throw new IllegalStateException("Column index less than zero : " + (Integer.valueOf(firstShiftColumnIndex + step)).toString());
        for (int columnIndex = firstShiftColumnIndex; columnIndex <= lastShiftColumnIndex; columnIndex++){ 
            HSSFCell cell = getCell(columnIndex);
            if(cell != null){
                cells[columnIndex-step] = null;
                moveCell(cell, (short)(columnIndex-step));
            }
            else cells[columnIndex-step] = null;
        }
        for (int columnIndex = lastShiftColumnIndex-step+1; columnIndex <= lastShiftColumnIndex; columnIndex++)
            cells[columnIndex] = null;
    }

