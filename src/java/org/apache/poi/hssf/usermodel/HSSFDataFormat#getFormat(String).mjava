	/**
	 * Get the format index that matches the given format
	 *  string, creating a new format entry if required.
	 * Aliases text to the proper format as required.
	 * @param pFormat string matching a built in format
	 * @return index of format.
	 */
	public short getFormat(String pFormat) {

		String format;
		if (pFormat.toUpperCase().equals("TEXT")) {
			format = "@";
		} else {
			format = pFormat;
		}

		if (!_movedBuiltins) {
			for (int i=0; i<_builtinFormats.length; i++) {
				if (_formats.size() < i + 1) {
					_formats.setSize(i + 1);
				}
				_formats.set(i, _builtinFormats[i]);
			}
			_movedBuiltins = true;
		}
		ListIterator<String> i;
		i = _formats.listIterator();
		int ind;
		while (i.hasNext()) {
			ind = i.nextIndex();
			if (format.equals(i.next())) {
				return (short) ind;
			}
		}

		ind = _workbook.getFormat(format, true);
		if (_formats.size() <= ind)
			_formats.setSize(ind + 1);
		_formats.set(ind, format);

		return (short) ind;
	}

