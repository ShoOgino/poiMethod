	/**
	 * <p>
	 * Returns the formatted value of a cell as a <tt>String</tt> regardless
	 * of the cell type. If the Excel format pattern cannot be parsed then the
	 * cell value will be formatted using a default format. 
	 * </p>
	 * <p>When passed a null or blank cell, this method will return an empty
	 * String (""). Formula cells will be evaluated using the given
	 * {@link HSSFFormulaEvaluator} if the evaluator is non-null. If the
	 * evaluator is null, then the formula String will be returned. The caller
	 * is responsible for setting the currentRow on the evaluator, otherwise an
	 * IllegalArgumentException may be thrown.
	 *</p>
	 * 
	 * @param cell The cell
	 * @param evaluator The HSSFFormulaEvaluator (can be null)
	 * @return a string value of the cell
	 * @throws IllegalArgumentException if cell type is <code>
	 * HSSFCell.CELL_TYPE_FORMULA</code> <b>and</b> evaluator is not null
	 * <b>and</b> the evlaluator's currentRow has not been set.
	 */
	public String formatCellValue(HSSFCell cell, 
			HSSFFormulaEvaluator evaluator) throws IllegalArgumentException {

		String value = "";
		if (cell == null) {
			return value;
		}
		
		int cellType = cell.getCellType();
		if (evaluator != null && cellType == HSSFCell.CELL_TYPE_FORMULA) {
			try {
				cellType = evaluator.evaluateFormulaCell(cell);
			} catch (Throwable t) {
				throw new IllegalArgumentException("Did you forget to set the current" +
						" row on the HSSFFormulaEvaluator?", t);
			}
		}		
		switch (cellType)
        {
            case HSSFCell.CELL_TYPE_FORMULA :
            	// should only occur if evaluator is null
            	value = cell.getCellFormula();
                break;

            case HSSFCell.CELL_TYPE_NUMERIC :
            	
            	if (HSSFDateUtil.isCellDateFormatted(cell)) {
            		value = getFormattedDateString(cell);
            	} else {
            		value = getFormattedNumberString(cell);
            	}
                break;

            case HSSFCell.CELL_TYPE_STRING :
                value = cell.getRichStringCellValue().getString();
                break;
                
            case HSSFCell.CELL_TYPE_BOOLEAN :
            	value = String.valueOf(cell.getBooleanCellValue());
        }
		return value;
	}

