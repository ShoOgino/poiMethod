    /**
     * Serializes all records in the sheet into one big byte array.  Use this to write
     * the sheet out.
     *
     * @param offset to begin write at
     * @param data   array containing the binary representation of the records in this sheet
     *
     */

    public int serialize(int offset, byte [] data)
    {
        if (log.check( POILogger.DEBUG ))
            log.log(POILogger.DEBUG, "Sheet.serialize using offsets");

        int pos       = offset;
        boolean haveSerializedIndex = false;

        for (int k = 0; k < records.size(); k++)
        {
            Record record = (( Record ) records.get(k));

            // Don't write out UncalcedRecord entries, as
            //  we handle those specially just below
            if (record instanceof UncalcedRecord) {
                continue;
            }

            // Once the rows have been found in the list of records, start
            //  writing out the blocked row information. This includes the DBCell references
            if (record instanceof RowRecordsAggregate) {
              pos += ((RowRecordsAggregate)record).serialize(pos, data, cells);
            } else if (record instanceof ValueRecordsAggregate) {
              //Do nothing here. The records were serialized during the RowRecordAggregate block serialization
            } else {
              pos += record.serialize(pos, data );
            }

            // If the BOF record was just serialized then add the IndexRecord
            if (record.getSid() == BOFRecord.sid) {
              if (!haveSerializedIndex) {
                haveSerializedIndex = true;
                // Add an optional UncalcedRecord. However, we should add
                //  it in only the once, after the sheet's own BOFRecord.
                // If there are diagrams, they have their own BOFRecords,
                //  and one shouldn't go in after that!
                if (_isUncalced) {
                    UncalcedRecord rec = new UncalcedRecord();
                    pos += rec.serialize(pos, data);
                }
                //Can there be more than one BOF for a sheet? If not then we can
                //remove this guard. So be safe it is left here.
                if (rows != null) {
                  pos += serializeIndexRecord(k, pos, data);
                }
              }
            }
        }
        if (log.check( POILogger.DEBUG )) {
            log.log(POILogger.DEBUG, "Sheet.serialize returning ");
        }
        return pos-offset;
    }

