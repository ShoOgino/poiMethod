    public int getSize()
    {
        int retval = 0;

        for ( int k = 0; k < records.size(); k++) {
            Record record = (Record) records.get(k);
            if (record instanceof UncalcedRecord) {
                // skip the UncalcedRecord if present, it's only encoded if the isUncalced flag is set
                continue;
            }
            retval += record.getRecordSize();
        }
        if (rows != null) {
            // Add space for the IndexRecord and DBCell records
            final int nBlocks = rows.getRowBlockCount();
            int nRows = 0;
            if (cells != null) {
                for (Iterator itr = rows.getIterator(); itr.hasNext();) {
                    RowRecord row = (RowRecord)itr.next();
                    if (cells.rowHasCells(row.getRowNumber())) {
                        nRows++;
                    }
                }
            }
            retval += IndexRecord.getRecordSizeForBlockCount(nBlocks);
            retval += DBCellRecord.calculateSizeOfRecords(nBlocks, nRows);
        }
        // Add space for UncalcedRecord
        if (_isUncalced) {
            retval += UncalcedRecord.getStaticRecordSize();
        }
        return retval;
    }

