    public int getSize()
    {
        int retval = 0;

        for ( int k = 0; k < records.size(); k++ )
        {
            retval += ( (Record) records.get( k ) ).getRecordSize();
        }
        //Add space for the IndexRecord
        if (rows != null) {
            final int blocks = rows.getRowBlockCount();
            retval += IndexRecord.getRecordSizeForBlockCount(blocks);

            //Add space for the DBCell records
            //Once DBCell per block.
            //8 bytes per DBCell (non variable section)
            //2 bytes per row reference
            retval += (8 * blocks);
            for (Iterator itr = rows.getIterator(); itr.hasNext();) {
                RowRecord row = (RowRecord)itr.next();
                if (cells != null && cells.rowHasCells(row.getRowNumber()))
                    retval += 2;
            }
        }
        // Add space for UncalcedRecord
        if (uncalced) {
            retval += UncalcedRecord.getStaticRecordSize();
        }

        return retval;
    }

