   /** Parse and Translate a Math Factor  */
    private void Factor() {
    	if (look == '-')
    	{
    		Match('-');
    		Factor();
    		tokens.add(new UnaryMinusPtg());
    	}
        else if (look == '+') {
            Match('+');
            Factor();
            tokens.add(new UnaryPlusPtg());
        }
        else if (look == '(' ) {
            Match('(');
            Expression();
            Match(')');
            tokens.add(new ParenthesisPtg());
        } else if (IsAlpha(look) || look == '\''){
            Ident();
        } else if(look == '"') {
           StringLiteral();
        } else if (look == ')' || look == ',') {
        	tokens.add(new MissingArgPtg());
        } else {
            String number2 = null;
            String exponent = null;
            String number1 = GetNum();
            
            if (look == '.') {
                GetChar();
                number2 = GetNum();
            }
            
            if (look == 'E') {
                GetChar();
                
                String sign = "";
                if (look == '+') {
                    GetChar();
                } else if (look == '-') {
                    GetChar();
                    sign = "-";
                }
                
                String number = GetNum();
                if (number == null) {
                    Expected("Integer");
                }
                exponent = sign + number;
            }
            
            if (number1 == null && number2 == null) {
                Expected("Integer");
            }
            
            tokens.add(getNumberPtgFromString(number1, number2, exponent));
        }
    }

