    /** Parse and Translate a String Identifier */
    private Ptg parseIdent() {
        String name;
        name = GetName();
        if (look == '('){
            //This is a function
            return function(name);
        }

        if (look == ':' || look == '.') { // this is a AreaReference
            GetChar();

            while (look == '.') { // formulas can have . or .. or ... instead of :
                GetChar();
            }

            String first = name;
            String second = GetName();
            return new AreaPtg(first+":"+second);
        }

        if (look == '!') {
            Match('!');
            String sheetName = name;
            String first = GetName();
            short externIdx = book.checkExternSheet(book.getSheetIndex(sheetName));
            if (look == ':') {
                Match(':');
                String second=GetName();
                if (look == '!') {
                    //The sheet name was included in both of the areas. Only really
                    //need it once
                    Match('!');
                    String third=GetName();

                    if (!sheetName.equals(second))
                        throw new RuntimeException("Unhandled double sheet reference.");

                    return new Area3DPtg(first+":"+third,externIdx);
                }
                return new Area3DPtg(first+":"+second,externIdx);
            }
            return new Ref3DPtg(first,externIdx);
        }
        if (name.equalsIgnoreCase("TRUE") || name.equalsIgnoreCase("FALSE")) {
            return new BoolPtg(name.toUpperCase());
        }

        // This can be either a cell ref or a named range
        // Try to spot which it is
        boolean cellRef = CELL_REFERENCE_PATTERN.matcher(name).matches();
 
        if (cellRef) {
            return new ReferencePtg(name);
        }

        for(int i = 0; i < book.getNumNames(); i++) {
            // named range name matching is case insensitive
            if(book.getNameRecord(i).getNameText().equalsIgnoreCase(name)) {
                return new NamePtg(name, book);
            }
        }
        throw new FormulaParseException("Found reference to named range \"" 
                    + name + "\", but that named range wasn't defined!");
    }

