	/**
	 * Also collects any loose MergeCellRecords and puts them in the supplied
	 * mergedCellsTable
	 */
	public RowBlocksReader(RecordStream rs) {
		List plainRecords = new ArrayList();
		List shFrmRecords = new ArrayList();
		List arrayRecords = new ArrayList();
		List tableRecords = new ArrayList();
		List mergeCellRecords = new ArrayList();

		while(!RecordOrderer.isEndOfRowBlock(rs.peekNextSid())) {
			// End of row/cell records for the current sheet
			// Note - It is important that this code does not inadvertently add any sheet 
			// records from a subsequent sheet.  For example, if SharedFormulaRecords 
			// are taken from the wrong sheet, this could cause bug 44449.
			if (!rs.hasNext()) {
				throw new RuntimeException("Failed to find end of row/cell records");
			
			}
			Record rec = rs.getNext();
			List dest;
			switch (rec.getSid()) {
				case MergeCellsRecord.sid:    dest = mergeCellRecords; break;
				case SharedFormulaRecord.sid: dest = shFrmRecords;     break;
				case ArrayRecord.sid:         dest = arrayRecords;     break;
				case TableRecord.sid:         dest = tableRecords;     break;
				default:                      dest = plainRecords;
			}
			dest.add(rec);
		}
		SharedFormulaRecord[] sharedFormulaRecs = new SharedFormulaRecord[shFrmRecords.size()];
		ArrayRecord[] arrayRecs = new ArrayRecord[arrayRecords.size()];
		TableRecord[] tableRecs = new TableRecord[tableRecords.size()];
		shFrmRecords.toArray(sharedFormulaRecs);
		arrayRecords.toArray(arrayRecs);
		tableRecords.toArray(tableRecs);
		
		_plainRecords = plainRecords;
		_sfm = SharedValueManager.create(sharedFormulaRecs, arrayRecs, tableRecs);
		_mergedCellsRecords = new MergeCellsRecord[mergeCellRecords.size()];
		mergeCellRecords.toArray(_mergedCellsRecords);
	}

