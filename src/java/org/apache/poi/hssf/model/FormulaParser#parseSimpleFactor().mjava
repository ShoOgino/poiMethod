    /**
     * factors (without ^ or % )
     */
    private Ptg parseSimpleFactor() {
        SkipWhite();
        switch(look) {
            case '#':
                return parseErrorLiteral();
            case '-':
                Match('-');
                powerFactor();
                return new UnaryMinusPtg();
            case '+':
                Match('+');
                powerFactor();
                return new UnaryPlusPtg();
            case '(':
                Match('(');
                comparisonExpression();
                Match(')');
                return new ParenthesisPtg();
            case '"':
                return parseStringLiteral();
        }
        if (IsAlpha(look) || look == '\''){
            return parseIdent();
        }
        // else - assume number
        return parseNumber();
    }

