	private static Function findFunction(int functionCode) throws EvaluationException {
		switch (functionCode) {
			case 1: return AggregateFunction.AVERAGE;
			case 2: return new Count();
			case 3: return new Counta();
			case 4: return AggregateFunction.MAX;
			case 5: return AggregateFunction.MIN;
			case 6: return AggregateFunction.PRODUCT;
			case 7: return AggregateFunction.STDEV;
			case 8: throw new NotImplementedException("STDEVP");
			case 9: return AggregateFunction.SUM;
			case 10: throw new NotImplementedException("VAR");
			case 11: throw new NotImplementedException("VARP");
		}
		if (functionCode > 100 && functionCode < 112) {
			throw new NotImplementedException("SUBTOTAL - with 'exclude hidden values' option");
		}
		throw EvaluationException.invalidValue();
	}

