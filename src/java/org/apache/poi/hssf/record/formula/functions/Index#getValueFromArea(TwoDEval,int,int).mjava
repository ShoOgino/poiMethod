	private static ValueEval getValueFromArea(TwoDEval ae, int pRowIx, int pColumnIx)
			throws EvaluationException {
		assert pRowIx >= 0;
		assert pColumnIx >= 0;
	
		int width = ae.getWidth();
		int height = ae.getHeight();
		
		int relFirstRowIx;
		int relLastRowIx;

		if ((pRowIx == 0)) {
			relFirstRowIx = 0;
			relLastRowIx = height-1;
		} else {
			// Slightly irregular logic for bounds checking errors
			if (pRowIx > height) {
				// high bounds check fail gives #REF! if arg was explicitly passed
				throw new EvaluationException(ErrorEval.REF_INVALID);
			}
			int rowIx = pRowIx-1;
			relFirstRowIx = rowIx;
			relLastRowIx = rowIx;
		}

		int relFirstColIx;
		int relLastColIx;
		if ((pColumnIx == 0)) {
			relFirstColIx = 0;
			relLastColIx = width-1;
		} else {
			// Slightly irregular logic for bounds checking errors
			if (pColumnIx > width) {
				// high bounds check fail gives #REF! if arg was explicitly passed
				throw new EvaluationException(ErrorEval.REF_INVALID);
			}
			int columnIx = pColumnIx-1;
			relFirstColIx = columnIx;
			relLastColIx = columnIx;
		}

		AreaEval x = ((AreaEval) ae);
		return x.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);
	}

