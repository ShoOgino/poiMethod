	private static Ptg createClassifiedPtg(byte id, RecordInputStream in) {
		
		int baseId = id & 0x1F | 0x20;
		
        switch (baseId) {
             case FuncPtg.sid:     return new FuncPtg(in);     // 0x21, 0x41, 0x61
             case FuncVarPtg.sid:  return new FuncVarPtg(in);  // 0x22, 0x42, 0x62
             case NamePtg.sid:     return new NamePtg(in);     // 0x23, 0x43, 0x63

             case MemAreaPtg.sid:  return new MemAreaPtg(in);  // 0x26, 0x46, 0x66
             case MemErrPtg.sid:   return new MemErrPtg(in);   // 0x27, 0x47, 0x67
             case MemFuncPtg.sid:  return new MemFuncPtg(in);  // 0x29, 0x49, 0x69
             case RefErrorPtg.sid: return  new RefErrorPtg(in);// 0x2a, 0x4a, 0x6a
             case AreaErrPtg.sid:  return new AreaErrPtg(in);  // 0x2b, 0x4b, 0x6b

             case NameXPtg.sid:    return new NameXPtg(in);    // 0x39, 0x49, 0x79
             case Ref3DPtg.sid:    return  new Ref3DPtg(in);   // 0x3a, 0x5a, 0x7a
             case Area3DPtg.sid:   return new Area3DPtg(in);   // 0x3b, 0x5b, 0x7b
             case DeletedRef3DPtg.sid:  return new DeletedRef3DPtg(in);   // 0x3c, 0x5c, 0x7c
             case DeletedArea3DPtg.sid: return  new DeletedArea3DPtg(in); // 0x3d, 0x5d, 0x7d
        }
        
        
        switch (id) {
        // TODO - why are specific subclasses needed for these Ptgs?
            case ArrayPtg.sid:     return new ArrayPtg(in);    // 0x20
            case ArrayPtgV.sid:    return new ArrayPtgV(in);   // 0x40
            case ArrayPtgA.sid:    return new ArrayPtgA(in);   // 0x60

            case ReferencePtg.sid: return new ReferencePtg(in);// 0x24
            case RefAPtg.sid:      return new RefAPtg(in);     // 0x64
            case RefVPtg.sid:      return new RefVPtg(in);     // 0x44

            case RefNAPtg.sid:     return new RefNAPtg(in);    // 0x6C
            case RefNPtg.sid:      return new RefNPtg(in);     // 0x2C
            case RefNVPtg.sid:     return new RefNVPtg(in);    // 0x4C

            case AreaPtg.sid:      return new AreaPtg(in);     // 0x25
            case AreaVPtg.sid:      return new AreaVPtg(in);   // 0x45
            case AreaAPtg.sid:      return new AreaAPtg(in);   // 0x65

            case AreaNAPtg.sid:    return new AreaNAPtg(in);   // 0x6D
            case AreaNPtg.sid:     return new AreaNPtg(in);    // 0x2D
            case AreaNVPtg.sid:    return new AreaNVPtg(in);   // 0x4D
        
        }
        throw new UnsupportedOperationException(" Unknown Ptg in Formula: 0x"+
                   Integer.toHexString(id) + " (" + ( int ) id + ")");
	}

