	protected ValueEval evaluateFunc(ValueEval[] args, int srcCellRow, short srcCellCol)
		throws EvaluationException {
		if (args.length != 4) {
			return ErrorEval.VALUE_INVALID;
		}

		String oldStr = evaluateStringArg(args[0], srcCellRow, srcCellCol);
		int startNum = evaluateIntArg(args[1], srcCellRow, srcCellCol);
		int numChars = evaluateIntArg(args[2], srcCellRow, srcCellCol);
		String newStr = evaluateStringArg(args[3], srcCellRow, srcCellCol);

		if (startNum < 1 || numChars < 0) {
			return ErrorEval.VALUE_INVALID;
		}
		StringBuffer strBuff = new StringBuffer(oldStr);
		// remove any characters that should be replaced
		if (startNum <= oldStr.length() && numChars != 0) {
			strBuff.delete(startNum - 1, startNum - 1 + numChars);
		}
		// now insert (or append) newStr
		if (startNum > strBuff.length()) {
			strBuff.append(newStr);
		} else {
			strBuff.insert(startNum - 1, newStr);
		}
		return new StringEval(strBuff.toString());
	}

