	/**
	 * @return a 2-D array of the specified height and width corresponding to the evaluated cell 
	 *  values of the specified areaEval 
	 * @throws EvalEx if any ErrorEval value was encountered while evaluating the area
	 */
	private static double[][] evaluateArea(AreaEval areaEval, int height, int width) throws EvalEx {
		int fr =areaEval.getFirstRow();
		int fc =areaEval.getFirstColumn();
		
		// check that height and width match
		if(areaEval.getLastRow() - fr + 1 != height) {
			throw new EvalEx(ErrorEval.VALUE_INVALID);
		}
		if(areaEval.getLastColumn() - fc + 1 != width) {
			throw new EvalEx(ErrorEval.VALUE_INVALID);
		}
		ValueEval[] values = areaEval.getValues();
		double[][] result = new double[height][width];
		for(int r=0; r<height; r++) {
			for(int c=0; c<width; c++) {
				ValueEval ve = values[r*width + c];
				result[r][c] = getProductTerm(ve, false);
			}
		}
		return result;
	}

