    public final Eval evaluate(Eval[] args, int srcCellRow, short srcCellCol) {
    	if(args.length != 2) {
    		return ErrorEval.VALUE_INVALID;
    	}
    	
        double[][] values;
		try {
			values = getValues(args[0], args[1]);
		} catch (EvaluationException e) {
			return e.getErrorEval();
		}
        if (values==null 
                || values[X] == null || values[Y] == null
                || values[X].length == 0 || values[Y].length == 0
                || values[X].length != values[Y].length) {
            return ErrorEval.VALUE_INVALID;
        }
        
        double d = evaluate(values[X], values[Y]);
        if (Double.isNaN(d) || Double.isInfinite(d)) {
			return ErrorEval.NUM_ERROR;
		}
		return new NumberEval(d);
    }    

