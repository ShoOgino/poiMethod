    //{--------------------------------------------------------------}
    //{ Parse and Translate an Assignment Statement }
    /**
procedure Assignment;
var Name: string[8];
begin
   Name := GetName;
   Match('=');
   Expression;
   EmitLn('LEA ' + Name + '(PC),A0');
   EmitLn('MOVE D0,(A0)')
end;
     **/
    
    //{--------------------------------------------------------------}
    //{ Initialize }
    
    private void  Init() {
        GetChar();
        SkipWhite();
    }

