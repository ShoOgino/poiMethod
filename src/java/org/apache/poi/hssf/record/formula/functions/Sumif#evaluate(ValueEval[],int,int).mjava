	public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {
		if (args.length < 2) {
			return ErrorEval.VALUE_INVALID;
		}

		AreaEval aeRange;
		AreaEval aeSum;
		try {
			aeRange = convertRangeArg(args[0]);

			switch (args.length) {
				case 2:
					aeSum = aeRange;
					break;
				case 3:
					aeSum = createSumRange(args[2], aeRange);
					break;
				default:
					return ErrorEval.VALUE_INVALID;
			}
		} catch (EvaluationException e) {
			return e.getErrorEval();
		}
		I_MatchPredicate mp = Countif.createCriteriaPredicate(args[1], srcRowIndex, srcColumnIndex);
		double result = sumMatchingCells(aeRange, mp, aeSum);
		return new NumberEval(result);
	}

