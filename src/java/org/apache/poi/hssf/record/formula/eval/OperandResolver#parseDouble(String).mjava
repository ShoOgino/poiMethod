	/**
	 * Converts a string to a double using standard rules that Excel would use.<br/>
	 * Tolerates currency prefixes, commas, leading and trailing spaces.<p/>
	 *
	 *  Some examples:<br/>
	 *  " 123 " -&gt; 123.0<br/>
	 *  ".123" -&gt; 0.123<br/>
	 *  These not supported yet:<br/>
	 *  " $ 1,000.00 " -&gt; 1000.0<br/>
	 *  "$1.25E4" -&gt; 12500.0<br/>
	 *  "5**2" -&gt; 500<br/>
	 *  "250%" -&gt; 2.5<br/>
	 *
	 * @return <code>null</code> if the specified text cannot be parsed as a number
	 */
	public static Double parseDouble(String pText) {
		String text = pText.trim();
		if(text.length() < 1) {
			return null;
		}
		boolean isPositive = true;
		if(text.charAt(0) == '-') {
			isPositive = false;
			text= text.substring(1).trim();
		}

		if(!Character.isDigit(text.charAt(0))) {
			// avoid using NumberFormatException to tell when string is not a number
			return null;
		}
		// TODO - support notation like '1E3' (==1000)

		double val;
		try {
			val = Double.parseDouble(text);
		} catch (NumberFormatException e) {
			return null;
		}
		return new Double(isPositive ? +val : -val);
	}

