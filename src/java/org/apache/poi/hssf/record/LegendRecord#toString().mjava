    public String toString()
    {
        StringBuffer buffer = new StringBuffer();

        buffer.append("[Legend]\n");

        buffer.append("    .xPosition            = ")
            .append("0x")
            .append(HexDump.toHex((int)getXPosition()))
            .append(" (").append(getXPosition()).append(" )\n");

        buffer.append("    .yPosition            = ")
            .append("0x")
            .append(HexDump.toHex((int)getYPosition()))
            .append(" (").append(getYPosition()).append(" )\n");

        buffer.append("    .xSize                = ")
            .append("0x")
            .append(HexDump.toHex((int)getXSize()))
            .append(" (").append(getXSize()).append(" )\n");

        buffer.append("    .ySize                = ")
            .append("0x")
            .append(HexDump.toHex((int)getYSize()))
            .append(" (").append(getYSize()).append(" )\n");

        buffer.append("    .type                 = ")
            .append("0x")
            .append(HexDump.toHex((byte)getType()))
            .append(" (").append(getType()).append(" )\n");

        buffer.append("    .spacing              = ")
            .append("0x")
            .append(HexDump.toHex((byte)getSpacing()))
            .append(" (").append(getSpacing()).append(" )\n");

        buffer.append("    .options              = ")
            .append("0x")
            .append(HexDump.toHex((short)getOptions()))
            .append(" (").append(getOptions()).append(" )\n");
        buffer.append("         .autoPosition             = ").append(isAutoPosition        ()).append('\n');
        buffer.append("         .autoSeries               = ").append(isAutoSeries          ()).append('\n');
        buffer.append("         .autoPosX                 = ").append(isAutoPosX            ()).append('\n');
        buffer.append("         .autoPosY                 = ").append(isAutoPosY            ()).append('\n');
        buffer.append("         .vert                     = ").append(isVert                ()).append('\n');
        buffer.append("         .containsDataTable        = ").append(isContainsDataTable   ()).append('\n');

        buffer.append("[/Legend]\n");
        return buffer.toString();
    }

