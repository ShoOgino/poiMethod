    /**
     * called by the class that is responsible for writing this sucker.
     * Subclasses should implement this so that their data is passed back in a
     * byte array.
     *
     * @param offset to begin writing at
     * @param data byte array containing instance data
     * @return number of bytes written
     */
    public int serialize( int offset, byte[] data ) {
   	// TODO - junit tests
        int dataSize = getDataSize();

        LittleEndian.putShort( data, 0 + offset, sid );
		LittleEndian.putShort( data, 2 + offset, (short) dataSize );
        LittleEndian.putShort( data, 4 + offset, field_1_option_flag );
        LittleEndian.putShort( data, 6 + offset, field_2_index );
        LittleEndian.putShort( data, 8 + offset, field_3_not_used );
        short nameLen = (short) field_4_name.length();
		LittleEndian.putShort( data, 10 + offset, nameLen );
        StringUtil.putCompressedUnicode( field_4_name, data, 10 + offset );
        short defLen = (short) getNameDefinitionSize();
        LittleEndian.putShort( data, 12 + nameLen + offset, defLen );
		Ptg.serializePtgStack(field_5_name_definition, data, 12 + nameLen + offset );
		return dataSize + 4;
    }

