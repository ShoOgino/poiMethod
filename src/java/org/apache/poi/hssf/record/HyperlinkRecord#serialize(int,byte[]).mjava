    public int serialize(int offset, byte[] data)
    {
        int pos = offset;
        LittleEndian.putShort(data, pos, sid); pos += 2;
        LittleEndian.putShort(data, pos, ( short )(getRecordSize()-4)); pos += 2;
        LittleEndian.putUShort(data, pos, rwFirst); pos += 2;
        LittleEndian.putUShort(data, pos, rwLast); pos += 2;
        LittleEndian.putShort(data, pos, colFirst); pos += 2;
        LittleEndian.putShort(data, pos, colLast); pos += 2;

        System.arraycopy(guid, 0, data, pos, guid.length); pos += guid.length;

        LittleEndian.putInt(data, pos, label_opts); pos += 4;
        LittleEndian.putInt(data, pos, link_opts); pos += 4;

        if ((link_opts & HLINK_LABEL) != 0){
            LittleEndian.putInt(data, pos, label.length()); pos += 4;
            StringUtil.putUnicodeLE(label, data, pos);  pos += label.length()*2;
        }
        if ((link_opts & HLINK_URL) != 0){
            System.arraycopy(moniker, 0, data, pos, moniker.length); pos += moniker.length;
            if(Arrays.equals(URL_MONIKER, moniker)){
                LittleEndian.putInt(data, pos, address.length()*2 + tail.length); pos += 4;
                StringUtil.putUnicodeLE(address, data, pos);  pos += address.length()*2;
                if(tail.length > 0){
                    System.arraycopy(tail, 0, data, pos, tail.length); pos += tail.length;
                }
            } else if (Arrays.equals(FILE_MONIKER, moniker)){
                LittleEndian.putShort(data, pos, file_opts); pos += 2;
                LittleEndian.putInt(data, pos, address.length()); pos += 4;
                byte[] bytes = address.getBytes();
                System.arraycopy(bytes, 0, data, pos, bytes.length); pos += bytes.length;
                if(tail.length > 0){
                    System.arraycopy(tail, 0, data, pos, tail.length); pos += tail.length;
                }
            }
        } else if((link_opts & HLINK_PLACE) != 0){
            LittleEndian.putInt(data, pos, address.length()); pos += 4;
            StringUtil.putUnicodeLE(address, data, pos);  pos += address.length()*2;
        }
    	return getRecordSize();
    }

