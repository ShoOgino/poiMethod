    public int construct(int offset, List records)
    {
        int k = 0;

        FormulaRecordAggregate lastFormulaAggregate = null;
        SharedFormulaRecord lastSharedFormula = null;

        for (k = offset; k < records.size(); k++)
        {
            Record rec = ( Record ) records.get(k);

            if (rec instanceof StringRecord == false && !rec.isInValueSection() && !(rec instanceof UnknownRecord))
            {
                break;
            }
            if (rec instanceof FormulaRecord)
            {
              FormulaRecord formula = (FormulaRecord)rec;
              if (formula.isSharedFormula()) {
                if ((lastSharedFormula != null) && (lastSharedFormula.isFormulaInShared(formula))) {
                  //Convert this Formula Record from a shared formula to a real formula
                  lastSharedFormula.convertSharedFormulaRecord(formula);
                } else {
                  Record nextRecord = (Record) records.get(k + 1);
                  if (nextRecord instanceof SharedFormulaRecord) {
                    k++;
                    lastSharedFormula = (SharedFormulaRecord) nextRecord;

                    //Convert this Formula Record from a shared formula to a real formula
                    lastSharedFormula.convertSharedFormulaRecord(formula);
                  }
                  else
                    throw new RuntimeException(
                        "Shared formula bit set but next record is not a Shared Formula??");
                }
              }
            	
                lastFormulaAggregate = new FormulaRecordAggregate((FormulaRecord)rec, null);
                insertCell( lastFormulaAggregate );
            }
            else if (rec instanceof StringRecord)
            {
                lastFormulaAggregate.setStringRecord((StringRecord)rec);
            }
            //else if (rec instanceof SharedFormulaRecord)
            //{
            //	//these follow the first formula in a group
            //	lastFormulaAggregate.setSharedFormulaRecord((SharedFormulaRecord)rec);
            //}
            else if (rec.isValue())
            {
                insertCell(( CellValueRecordInterface ) rec);
            }
        }
        return k;
    }

