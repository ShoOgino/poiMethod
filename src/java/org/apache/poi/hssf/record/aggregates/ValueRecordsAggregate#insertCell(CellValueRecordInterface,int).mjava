    private void insertCell(CellValueRecordInterface cell, int type)
    {
        int rownum = cell.getRow();
        int colnum = cell.getColumn();

//        DoubleList  nmRow = (DoubleList)numericcells.get(rownum);

        switch (type) {
            case HSSFCell.CELL_TYPE_NUMERIC:
                NumberRecord nrecord = (NumberRecord)cell;
//                adjustDoubleList(nmRow, colnum+1);
                numericcells.set(colnum, rownum, nrecord.getValue());
                physCells++;
                break;
            case HSSFCell.CELL_TYPE_STRING:
                LabelSSTRecord srecord = (LabelSSTRecord)cell;
//                adjustDoubleList(nmRow, colnum+1);
                numericcells.set(colnum, rownum, srecord.getSSTIndex());
//                nmRow.set(colnum,srecord.getSSTIndex());
                physCells++;
                break;
            case HSSFCell.CELL_TYPE_FORMULA:
                FormulaRecordAggregate frarecord = (FormulaRecordAggregate)cell;
                formulaptgs.set( colnum, rownum, frarecord);
                physCells++;
                break;
                /*
//                List ptRow = (List)formulaptgs.get(rownum);
//                List stRow = (List)stringvals.get(rownum);
                FormulaRecordAggregate frarecord = (FormulaRecordAggregate)cell;
//                adjustDoubleList(nmRow, colnum+1);
//                adjustObjectList(ptRow, colnum+1);
//                adjustStringList(stRow, colnum+1);
                numericcells.set(colnum, rownum, frarecord.getFormulaRecord().getValue());
                formulaptgs.set( colnum, rownum, frarecord.getFormulaRecord().getParsedExpression() );
                StringRecord str = frarecord.getStringRecord();
                if ( str != null )
                    stringvals.set( colnum, rownum, str.getString() );
                else
                    stringvals.set( colnum, rownum, null );
                physCells++;
                break;
                */
            case HSSFCell.CELL_TYPE_BLANK:
                //BlankRecord brecord = (BlankRecord)cell;
                physCells++;
                break;

            default:
                throw new RuntimeException("UnImplemented Celltype "+cell.toString());
        }
    }

