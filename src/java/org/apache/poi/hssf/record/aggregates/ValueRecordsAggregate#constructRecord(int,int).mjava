    CellValueRecordInterface constructRecord(int row, int col) {

        if (celltype.get( col, row) == 0)
            throw new ArrayIndexOutOfBoundsException("No cell at position col" + col + ", row " + row + ".");
//        if (celltype.size() < row || ((IntList)celltype.get(row)).size() < col) {
//            throw new ArrayIndexOutOfBoundsException("constructRecord called with row = "+row+
//                      "and col ="+col+" but there are only "+celltype.size()+" rows and "+
//                      ((IntList)celltype.get(row)).size()+" cols!!");
//        }

        CellValueRecordInterface retval;
        int type = celltype.get( col, row );

        switch (type) {
            case HSSFCell.CELL_TYPE_NUMERIC:
                NumberRecord nrecord = new NumberRecord();
                nrecord.setColumn((short)col);
                nrecord.setRow(row);
                nrecord.setValue( numericcells.get( col, row));
                nrecord.setXFIndex((short)xfs.get( col, row ));
//                nrecord.setXFIndex((short)((IntList)xfs.get(row)).get(col));
                retval = nrecord;
                break;
            case HSSFCell.CELL_TYPE_STRING:
                LabelSSTRecord srecord = new LabelSSTRecord();
                srecord.setColumn((short)col);
                srecord.setRow(row);
                srecord.setSSTIndex((int) numericcells.get( col, row));
                srecord.setXFIndex((short)xfs.get( col, row ));
                retval=srecord;
                break;
            case HSSFCell.CELL_TYPE_BLANK:
                BlankRecord brecord = new BlankRecord();
                brecord.setColumn((short)col);
                brecord.setRow(row);
                brecord.setXFIndex((short)xfs.get( col, row ));
                retval=brecord;
                break;
            case HSSFCell.CELL_TYPE_FORMULA:
                /*
                FormulaRecord fr = new FormulaRecord();
                fr.setColumn((short)col);
                fr.setOptions((short)2);

                fr.setRow(row);
                fr.setXFIndex((short)xfs.get( col, row ));
                StringRecord        st = null;
                String strval = (String)stringvals.get( col, row );
                List expressionlist =  (List) formulaptgs.get( col, row);
                fr.setParsedExpression(expressionlist);
                fr.setExpressionLength(calculatePtgSize(expressionlist));
                if (strval != null) {
                  st = new StringRecord();
                   st.setString(strval);
                }
                FormulaRecordAggregate frarecord = new FormulaRecordAggregate(fr,st);

                retval= frarecord;
                break;
                */
                retval = (CellValueRecordInterface) formulaptgs.get( col, row );
                break;
            default:
                throw new RuntimeException("UnImplemented Celltype "+type);
        }

        return retval;
    }

