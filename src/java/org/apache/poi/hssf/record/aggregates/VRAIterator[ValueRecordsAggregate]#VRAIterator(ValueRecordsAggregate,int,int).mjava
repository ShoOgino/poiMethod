    public VRAIterator(ValueRecordsAggregate vra, int startRow, int endRow) {
        this.vra = vra;
        this.row = startRow;
        this.rowlimit = endRow;
        this.popindex = vra.populatedRows.indexOf(row);
        if (this.popindex == -1) {
            if (vra.populatedRows.size() == 0)
                hasNext = false;
            else
            {
                int lastRow = vra.populatedRows.get(vra.populatedRows.size()-1);
                if (lastRow == -1)
                {
                    hasNext = false;
                }
                else
                {
                    for (int i = row; i <= lastRow; i++)
                    {
                        this.popindex = vra.populatedRows.indexOf(i);
                        if (popindex != -1)
                            break;
                    }
                }
                if (popindex == -1)
                    hasNext = false;
                else
                {
                    next = findNextCell(null);
                    hasNext = (next != null);
                }
            }
        } else if (vra.getPhysicalNumberOfCells() > 0) {
            next = findNextCell(null);
            hasNext = (next != null);
        }
    }

