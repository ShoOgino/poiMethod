    private CellValueRecordInterface findNextCell(CellValueRecordInterface current) {
        IntList ctRow = null;
        int rowNum = -1;
        int colNum = -1;
        int newCol = -1;
        boolean wasntFirst = false;

        if (current != null) {
            wasntFirst = true;
            rowNum = current.getRow();
            colNum = current.getColumn();
            ctRow = ((IntList)vra.celltype.get(rowNum));
        }

        //if popindex = row iwth no cells, fast forward till we get to one with size > 0
        while ((ctRow == null || ctRow.size() == 0) && vra.populatedRows.size() > popindex) {
            if (wasntFirst == true) {
                throw new RuntimeException("CANT HAPPEN WASNTFIRST BUT WE'RE FASTFORWARDING!");
            }
            rowNum = vra.populatedRows.get(popindex);
            ctRow = (IntList)vra.celltype.get(rowNum);
            if (ctRow.size() == 0) {
                if ((rowlimit == -1)||(rowNum<=rowlimit)) {
                    popindex++;
                } else {
                    this.hasNext = false;
                }
            }
        }

        if (rowNum == -1) {
            return null;
        }

        while (newCol == -1) {
            newCol = findNextPopulatedCell(rowNum,colNum);
            colNum = newCol;
            if (colNum == -1) {                          //end of row, forward one row
                popindex++;
                if (popindex < vra.populatedRows.size() && ((rowlimit == -1)||(rowNum<=rowlimit))) {
                    rowNum = vra.populatedRows.get(popindex);
                    //Return null if the row is out of range
                    if ((rowlimit != -1) &&( rowNum > rowlimit))
                      return null;
                } else {
                    return null;
                }
            }
        }

        return vra.constructRecord(rowNum,colNum);
    }

