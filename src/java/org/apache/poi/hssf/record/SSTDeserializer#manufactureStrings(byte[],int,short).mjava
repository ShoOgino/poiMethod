    /**
     * This is the starting point where strings are constructed.  Note that
     * strings may span across multiple continuations. Read the SST record
     * carefully before beginning to hack.
     */
    public void manufactureStrings( final byte[] data, final int initialOffset, short dataSize )
    {
        initVars();

        int offset = initialOffset;
        while ( ( offset - initialOffset ) < dataSize )
        {
            int remaining = dataSize - offset + initialOffset;

            if ( ( remaining > 0 ) && ( remaining < LittleEndianConsts.SHORT_SIZE ) )
            {
                throw new RecordFormatException( "Cannot get length of the last string in SSTRecord" );
            }
            if ( remaining == LittleEndianConsts.SHORT_SIZE )
            {
                setContinuationExpectedChars( LittleEndian.getUShort( data, offset ) );
                unfinishedString = "";
                break;
            }
            charCount = LittleEndian.getUShort( data, offset );
            readStringHeader( data, offset );
            boolean stringContinuesOverContinuation = remaining < totalStringSize();
            if ( stringContinuesOverContinuation )
            {
                int remainingBytes = ( initialOffset + dataSize ) - offset - stringHeaderOverhead();
                setContinuationExpectedChars( charCount - calculateCharCount( remainingBytes ) );
                charCount -= getContinuationExpectedChars();
            }
            else
            {
                setContinuationExpectedChars( 0 );
            }
            processString( data, offset, charCount );
            offset += totalStringSize();
            if ( getContinuationExpectedChars() != 0 )
            {
                break;
            }
        }
    }

