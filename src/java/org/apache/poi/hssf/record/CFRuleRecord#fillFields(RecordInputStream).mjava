	protected void fillFields(RecordInputStream in) {
		try {
			field_1_condition_type = in.readByte();
			field_2_comparison_operator = in.readByte();
			field_3_formula1_len = in.readShort();
			field_4_formula2_len = in.readShort();
			field_5_options = in.readInt();
			field_6_not_used = in.readShort();

			if (containsFontFormattingBlock()) {
				fontFormatting = new FontFormatting(in);
			}

			if (containsBorderFormattingBlock()) {
				borderFormatting = new BorderFormatting(in);
			}

			if (containsPatternFormattingBlock()) {
				patternFormatting = new PatternFormatting(in);
			}

			if (field_3_formula1_len > 0) {
				Stack ptgs = Ptg.createParsedExpressionTokens(field_3_formula1_len, in);
				// Now convert any fields as required
				ptgs = SharedFormulaRecord.convertSharedFormulas(ptgs, 0, 0);
				field_17_formula1 = toArray(ptgs);
			}
			if (field_4_formula2_len > 0) {
				Stack ptgs = Ptg.createParsedExpressionTokens(field_4_formula2_len, in);

				// Now convert any fields as required
				ptgs = SharedFormulaRecord.convertSharedFormulas(ptgs, 0, 0);
				field_18_formula2 = toArray(ptgs);
			}
		} catch (java.lang.UnsupportedOperationException uoe) {
			throw new RecordFormatException(uoe);
		}

	}

