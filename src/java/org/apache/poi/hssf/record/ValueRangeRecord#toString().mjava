    public String toString()
    {
        StringBuffer buffer = new StringBuffer();

        buffer.append("[ValueRange]\n");

        buffer.append("    .minimumAxisValue     = ")
            .append(" (").append(getMinimumAxisValue()).append(" )\n");

        buffer.append("    .maximumAxisValue     = ")
            .append(" (").append(getMaximumAxisValue()).append(" )\n");

        buffer.append("    .majorIncrement       = ")
            .append(" (").append(getMajorIncrement()).append(" )\n");

        buffer.append("    .minorIncrement       = ")
            .append(" (").append(getMinorIncrement()).append(" )\n");

        buffer.append("    .categoryAxisCross    = ")
            .append(" (").append(getCategoryAxisCross()).append(" )\n");

        buffer.append("    .options              = ")
            .append("0x")
            .append(HexDump.toHex((short)getOptions()))
            .append(" (").append(getOptions()).append(" )\n");
        buffer.append("         .automaticMinimum         = ").append(isAutomaticMinimum    ()).append('\n');
        buffer.append("         .automaticMaximum         = ").append(isAutomaticMaximum    ()).append('\n');
        buffer.append("         .automaticMajor           = ").append(isAutomaticMajor      ()).append('\n');
        buffer.append("         .automaticMinor           = ").append(isAutomaticMinor      ()).append('\n');
        buffer.append("         .automaticCategoryCrossing     = ").append(isAutomaticCategoryCrossing()).append('\n');
        buffer.append("         .logarithmicScale         = ").append(isLogarithmicScale    ()).append('\n');
        buffer.append("         .valuesInReverse          = ").append(isValuesInReverse     ()).append('\n');
        buffer.append("         .crossCategoryAxisAtMaximum     = ").append(isCrossCategoryAxisAtMaximum()).append('\n');
        buffer.append("         .reserved                 = ").append(isReserved            ()).append('\n');

        buffer.append("[/ValueRange]\n");
        return buffer.toString();
    }

