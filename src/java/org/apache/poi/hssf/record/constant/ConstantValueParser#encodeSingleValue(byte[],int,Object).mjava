	private static int encodeSingleValue(byte[] data, int offset, Object value) {
		if (value == EMPTY_REPRESENTATION) {
			LittleEndian.putByte(data, offset, TYPE_EMPTY);
			LittleEndian.putLong(data, offset+1, 0L);
			return 9;
		}
		if (value instanceof Boolean) {
			Boolean bVal = ((Boolean)value);
			LittleEndian.putByte(data, offset, TYPE_BOOLEAN);
			long longVal = bVal.booleanValue() ? 1L : 0L;
			LittleEndian.putLong(data, offset+1, longVal);
			return 9;
		}
		if (value instanceof Double) {
			Double dVal = (Double) value;
			LittleEndian.putByte(data, offset, TYPE_NUMBER);
			LittleEndian.putDouble(data, offset+1, dVal.doubleValue());
			return 9;
		}
		if (value instanceof UnicodeString) {
			UnicodeString usVal = (UnicodeString) value;
			LittleEndian.putByte(data, offset, TYPE_STRING);
			UnicodeRecordStats urs = new UnicodeRecordStats();
			usVal.serialize(urs, offset +1, data);
			return 1 + urs.recordSize;
		}
		if (value instanceof ErrorConstant) {
			ErrorConstant ecVal = (ErrorConstant) value;
			LittleEndian.putByte(data, offset, TYPE_ERROR_CODE);
			LittleEndian.putUShort(data, offset+1, ecVal.getErrorCode());
			LittleEndian.putUShort(data, offset+3, 0);
			LittleEndian.putInt(data, offset+5, 0);
			return 9;
		}

		throw new IllegalStateException("Unexpected value type (" + value.getClass().getName() + "'");
	}

