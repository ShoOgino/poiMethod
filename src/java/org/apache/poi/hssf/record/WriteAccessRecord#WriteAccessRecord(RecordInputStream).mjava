	public WriteAccessRecord(RecordInputStream in) {
		if (in.remaining() > DATA_SIZE) {
			throw new RecordFormatException("Expected data size (" + DATA_SIZE + ") but got ("
					+ in.remaining() + ")");
		}
		// The string is always 112 characters (padded with spaces), therefore
		// this record can not be continued.

		int nChars = in.readUShort();
		int is16BitFlag = in.readUByte();
		int expectedPadSize = DATA_SIZE - 3;
		if ((is16BitFlag & 0x01) == 0x00) {
			field_1_username = StringUtil.readCompressedUnicode(in, nChars);
			expectedPadSize -= nChars;
		} else {
			field_1_username = StringUtil.readUnicodeLE(in, nChars);
			expectedPadSize -= nChars * 2;
		}
		padding = new byte[expectedPadSize];
		int padSize = in.remaining();
		in.readFully(padding, 0, padSize);
		if (padSize < expectedPadSize) {
			// this occurs in a couple of test examples: "42564.xls",
			// "bug_42794.xls"
			Arrays.fill(padding, padSize, expectedPadSize, PAD_CHAR);
		}
	}

