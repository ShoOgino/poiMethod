	public String toString() {

		StringBuffer sb = new StringBuffer();
		sb.append("[FORMULA]\n");
		sb.append("  .row	   = ").append(HexDump.shortToHex(getRow())).append("\n");
		sb.append("  .column	= ").append(HexDump.shortToHex(getColumn())).append("\n");
		sb.append("  .xf		= ").append(HexDump.shortToHex(getXFIndex())).append("\n");
		sb.append("  .value	 = ");
		if (specialCachedValue == null) {
			sb.append(field_4_value).append("\n");
		} else {
			sb.append(specialCachedValue.formatDebugString()).append("\n");
		}
		sb.append("  .options   = ").append(HexDump.shortToHex(getOptions())).append("\n");
		sb.append("    .alwaysCalc= ").append(isAlwaysCalc()).append("\n");
		sb.append("    .calcOnLoad= ").append(isCalcOnLoad()).append("\n");
		sb.append("    .shared    = ").append(isSharedFormula()).append("\n");
		sb.append("  .zero      = ").append(HexDump.intToHex(field_6_zero)).append("\n");

		Ptg[] ptgs = field_8_parsed_expr.getTokens();
		for (int k = 0; k < ptgs.length; k++ ) {
			sb.append("    Ptg[").append(k).append("]=");
			Ptg ptg = ptgs[k];
			sb.append(ptg.toString()).append(ptg.getRVAType()).append("\n");
		}
		sb.append("[/FORMULA]\n");
		return sb.toString();
	}

