    public void write(GenericRecord record) {
        final String tabs = tabs();
        Enum type = record.getGenericRecordType();
        String recordName = (type != null) ? type.name() : record.getClass().getSimpleName();
        fw.append(tabs);
        fw.append("{");
        if (withComments) {
            fw.append("   /* ");
            fw.append(recordName);
            if (childIndex > 0) {
                fw.append(" - index: ");
                fw.print(childIndex);
            }
            fw.append(" */");
        }
        fw.println();

        Map<String, Supplier<?>> prop = record.getGenericProperties();
        if (prop != null) {
            final int oldChildIndex = childIndex;
            childIndex = 0;
            prop.forEach(this::writeProp);
            childIndex = oldChildIndex;
        }

        fw.println();
        List<? extends GenericRecord> list = record.getGenericChildren();
        if (list != null && !list.isEmpty()) {
            indent++;
            fw.append(tabs());
            if (prop != null && !prop.isEmpty()) {
                fw.append(", ");
            }
            fw.append("children: [");
            final int oldChildIndex = childIndex;
            childIndex = 0;
            list.forEach(l -> { writeValue(l); childIndex++; });
            childIndex = oldChildIndex;
            fw.println();
            fw.append(tabs());
            fw.append("]");
            fw.println();
            indent--;
        }

        fw.append(tabs);
        fw.append("}");
    }

