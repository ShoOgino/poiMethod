    private void write(GenericRecord record, final String name) {
        final String tabs = tabs();
        Enum type = record.getGenericRecordType();
        String recordName = (type != null) ? type.name() : record.getClass().getSimpleName();
        fw.append(tabs);
        fw.append("<"+name+" type=\"");
        fw.append(recordName);
        fw.append("\"");
        if (childIndex > 0) {
            fw.append(" index=\"");
            fw.print(childIndex);
            fw.append("\"");
        }

        boolean hasChildren = false;

        Map<String, Supplier<?>> prop = record.getGenericProperties();
        if (prop != null) {
            final int oldChildIndex = childIndex;
            childIndex = 0;
            attributePhase = true;
            List<Map.Entry<String,Supplier<?>>> complex = prop.entrySet().stream().flatMap(this::writeProp).collect(Collectors.toList());
            attributePhase = false;
            if (!complex.isEmpty()) {
                hasChildren = true;
                fw.println(">");
                indent++;
                complex.forEach(this::writeProp);
                indent--;
            }
            childIndex = oldChildIndex;
        } else {
            fw.print(">");
        }

        attributePhase = false;

        List<? extends GenericRecord> list = record.getGenericChildren();
        if (list != null && !list.isEmpty()) {
            hasChildren = true;
            indent++;
            fw.println();
            fw.append(tabs());
            fw.println("<children>");
            indent++;
            final int oldChildIndex = childIndex;
            childIndex = 0;
            list.forEach(l -> { writeValue("record", l); childIndex++; });
            childIndex = oldChildIndex;
            fw.println();
            indent--;
            fw.append(tabs());
            fw.println("</children>");
            indent--;
        }

        if (hasChildren) {
            fw.append(tabs);
            fw.println("</" + name + ">");
        } else {
            fw.println("/>");
        }
    }

