    /**
     * Log a message
     *
     * @param level One of DEBUG, INFO, WARN, ERROR, FATAL
     * @param obj1 The object to log.  This is converted to a string.
     * @param exception An exception to be logged
     */
    @Override
    public void _log(final int level, final Object obj1, final Throwable exception) {
        // FIXME: What happens if level is in between two levels (an even number)?
        // Should this be `if (level >= FATAL) ...`?
        switch (level) {
            case FATAL:
                if (log.isFatalEnabled()) {
                    if (obj1 != null) {
                        log.fatal(obj1, exception);
                    } else {
                        log.fatal(exception);
                    }
                }
                break;
            case ERROR:
                if (log.isErrorEnabled()) {
                    if (obj1 != null) {
                        log.error(obj1, exception);
                    } else {
                        log.error(exception);
                    }
                }
                break;
            case WARN:
                if (log.isWarnEnabled()) {
                    if (obj1 != null) {
                        log.warn(obj1, exception);
                    } else {
                        log.warn(exception);
                    }
                }
                break;
            case INFO:
                if (log.isInfoEnabled()) {
                    if (obj1 != null) {
                        log.info(obj1, exception);
                    } else {
                        log.info(exception);
                    }
                }
                break;
            case DEBUG:
                if (log.isDebugEnabled()) {
                    if (obj1 != null) {
                        log.debug(obj1, exception);
                    } else {
                        log.debug(exception);
                    }
                }
                break;
            default:
                if (log.isTraceEnabled()) {
                    if (obj1 != null) {
                        log.trace(obj1, exception);
                    } else {
                        log.trace(exception);
                    }
                }
                break;
        }
    }

