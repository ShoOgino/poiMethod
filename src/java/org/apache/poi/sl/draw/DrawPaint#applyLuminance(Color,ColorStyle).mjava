    /**
     * Apply lumMod / lumOff adjustments
     *
     * @param c the color to modify
     * @param lumMod luminance modulation in the range [0..100000]
     * @param lumOff luminance offset in the range [0..100000]
     * @return  modified color
     * 
     * @see <a href="https://msdn.microsoft.com/en-us/library/dd560821%28v=office.12%29.aspx">Using Office Open XML to Customize Document Formatting in the 2007 Office System</a>
     */
    protected static Color applyLuminance(Color c, ColorStyle fc) {
        int lumMod = fc.getLumMod();
        if (lumMod == -1) lumMod = 100000;

        int lumOff = fc.getLumOff();
        if (lumOff == -1) lumOff = 0;
        
        if (lumMod == 100000 && lumOff == 0) return c;

        // The lumMod value is the percent luminance. A lumMod value of "60000",
        // is 60% of the luminance of the original color.
        // When the color is a shade of the original theme color, the lumMod
        // attribute is the only one of the tags shown here that appears.
        // The <a:lumOff> tag appears after the <a:lumMod> tag when the color is a
        // tint of the original. The lumOff value always equals 1-lumMod, which is used in the tint calculation
        //
        // Despite having different ways to display the tint and shade percentages,
        // all of the programs use the same method to calculate the resulting color.
        // Convert the original RGB value to HSL ... and then adjust the luminance (L)
        // with one of the following equations before converting the HSL value back to RGB.
        // (The % tint in the following equations refers to the tint, themetint, themeshade,
        // or lumMod values, as applicable.)
        //
        // For a shade, the equation is luminance * %tint.
        //
        // For a tint, the equation is luminance * %tint + (1-%tint).
        // (Note that 1-%tint is equal to the lumOff value in DrawingML.)
        
        double fLumOff = lumOff / 100000d;
        double fLumMod = lumMod / 100000d;
        
        double hsl[] = RGB2HSL(c);
        hsl[2] = hsl[2]*fLumMod+fLumOff;

        Color c2 = HSL2RGB(hsl[0], hsl[1], hsl[2], c.getAlpha()/255d);
        return c2;
    }

