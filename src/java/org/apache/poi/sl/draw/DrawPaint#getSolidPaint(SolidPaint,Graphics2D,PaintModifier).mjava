    @SuppressWarnings({"WeakerAccess", "unused"})
    protected Paint getSolidPaint(SolidPaint fill, Graphics2D graphics, final PaintModifier modifier) {
        final ColorStyle orig = fill.getSolidColor();
        ColorStyle cs = new AbstractColorStyle() {
            @Override
            public Color getColor() {
                return orig.getColor();
            }

            @Override
            public int getAlpha() {
                return orig.getAlpha();
            }

            @Override
            public int getHueOff() {
                return orig.getHueOff();
            }

            @Override
            public int getHueMod() {
                return orig.getHueMod();
            }

            @Override
            public int getSatOff() {
                return orig.getSatOff();
            }

            @Override
            public int getSatMod() {
                return orig.getSatMod();
            }

            @Override
            public int getLumOff() {
                return orig.getLumOff();
            }

            @Override
            public int getLumMod() {
                return orig.getLumMod();
            }

            @Override
            public int getShade() {
                int shade = orig.getShade();
                switch (modifier) {
                    case DARKEN:
                        return Math.min(100000, Math.max(0,shade)+40000);
                    case DARKEN_LESS:
                        return Math.min(100000, Math.max(0,shade)+20000);
                    default:
                        return shade;
                }
            }

            @Override
            public int getTint() {
                int tint = orig.getTint();
                switch (modifier) {
                    case LIGHTEN:
                        return Math.min(100000, Math.max(0,tint)+40000);
                    case LIGHTEN_LESS:
                        return Math.min(100000, Math.max(0,tint)+20000);
                    default:
                        return tint;
                }
            }
        };

        return applyColorTransform(cs);
    }

