    @Override
    public void drawContent(Graphics2D graphics) {
        fixFonts(graphics);
        
        TextShape<?,?> s = getShape();
        
        Rectangle2D anchor = DrawShape.getAnchor(graphics, s);
        Insets2D insets = s.getInsets();
        double x = anchor.getX() + insets.left;
        double y = anchor.getY();

        // remember the initial transform
        AffineTransform tx = graphics.getTransform();

        // Transform of text in flipped shapes is special.
        // At this point the flip and rotation transform is already applied
        // (see DrawShape#applyTransform ), but we need to restore it to avoid painting "upside down".
        // See Bugzilla 54210.

        boolean vertFlip = s.getFlipVertical();
        boolean horzFlip = s.getFlipHorizontal();
        ShapeContainer<?,?> sc = s.getParent();
        while (sc instanceof PlaceableShape) {
            PlaceableShape<?,?> ps = (PlaceableShape<?,?>)sc;
            vertFlip ^= ps.getFlipVertical();
            horzFlip ^= ps.getFlipHorizontal();
            sc = ps.getParent();
        }
        
        // Horizontal flipping applies only to shape outline and not to the text in the shape.
        // Applying flip second time restores the original not-flipped transform
        if (horzFlip ^ vertFlip) {
            graphics.translate(anchor.getX() + anchor.getWidth(), anchor.getY());
            graphics.scale(-1, 1);
            graphics.translate(-anchor.getX(), -anchor.getY());
        }
        
        Double textRot = s.getTextRotation();
        if (textRot != null) {
            graphics.translate(anchor.getCenterX(), anchor.getCenterY());
            graphics.rotate(Math.toRadians(textRot));
            graphics.translate(-anchor.getCenterX(), -anchor.getCenterY());
        }

        // first dry-run to calculate the total height of the text
        double textHeight = s.getTextHeight();

        switch (s.getVerticalAlignment()){
            default:
            case TOP:
                y += insets.top;
                break;
            case BOTTOM:
                y += anchor.getHeight() - textHeight - insets.bottom;
                break;
            case MIDDLE:
                double delta = anchor.getHeight() - textHeight - insets.top - insets.bottom;
                y += insets.top + delta/2;
                break;
        }

        drawParagraphs(graphics, x, y);

        // restore the transform
        graphics.setTransform(tx);
    }

