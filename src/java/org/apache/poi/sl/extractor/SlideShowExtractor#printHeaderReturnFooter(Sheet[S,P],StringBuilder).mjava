    private String printHeaderReturnFooter(final Sheet<S,P> sheet, final StringBuilder sb) {
        final Sheet<S, P> m = (sheet instanceof Slide) ? sheet.getMasterSheet() : sheet;
        final StringBuilder footer = new StringBuilder("\n");
        addSheetPlaceholderDatails(sheet, Placeholder.HEADER, sb);
        addSheetPlaceholderDatails(sheet, Placeholder.FOOTER, footer);

        if (masterByDefault) {
            // write header texts and determine footer text
            for (Shape<S, P> s : m) {
                if (!(s instanceof TextShape)) {
                    continue;
                }
                final TextShape<S, P> ts = (TextShape<S, P>) s;
                final PlaceholderDetails pd = ts.getPlaceholderDetails();
                if (pd == null || !pd.isVisible()) {
                    continue;
                }
                switch (pd.getPlaceholder()) {
                    case HEADER:
                        sb.append(ts.getText());
                        sb.append('\n');
                        break;
                    case SLIDE_NUMBER:
                        if (sheet instanceof Slide) {
                            footer.append(ts.getText().replace("‹#›", Integer.toString(((Slide<S, P>) sheet).getSlideNumber() + 1)));
                            footer.append('\n');
                        }
                        break;
                    case FOOTER:
                        footer.append(ts.getText());
                        footer.append('\n');
                        break;
                    case DATETIME:
                        // currently not supported
                    default:
                        break;
                }
            }
        }

        return (footer.length() > 1) ? footer.toString() : "";
    }

