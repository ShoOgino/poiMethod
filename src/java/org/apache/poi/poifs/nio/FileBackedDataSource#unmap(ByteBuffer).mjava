   // need to use reflection to avoid depending on the sun.nio internal API
   // unfortunately this might break silently with newer/other Java implementations, 
   // but we at least have unit-tests which will indicate this when run on Windows
    private static void unmap(ByteBuffer bb) {
        Class<?> fcClass = bb.getClass();
        try {
            // invoke bb.cleaner().clean(), but do not depend on sun.nio
            // interfaces
            Method cleanerMethod = fcClass.getDeclaredMethod("cleaner");
            cleanerMethod.setAccessible(true);
            Object cleaner = cleanerMethod.invoke(bb);
            Method cleanMethod = cleaner.getClass().getDeclaredMethod("clean");
            cleanMethod.invoke(cleaner);
        } catch (NoSuchMethodException e) {
            // e.printStackTrace();
        } catch (SecurityException e) {
            // e.printStackTrace();
        } catch (IllegalAccessException e) {
            // e.printStackTrace();
        } catch (IllegalArgumentException e) {
            // e.printStackTrace();
        } catch (InvocationTargetException e) {
            // e.printStackTrace();
        }
    }

