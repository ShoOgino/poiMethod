   /**
    * Constructor for a new Document
    *
    * @param name the name of the POIFSDocument
    * @param stream the InputStream we read data from
    */
   public NPOIFSDocument(String name, NPOIFSFileSystem filesystem, InputStream stream) 
      throws IOException 
   {
      this._filesystem = filesystem;

      final int bigBlockSize = POIFSConstants.BIG_BLOCK_MINIMUM_DOCUMENT_SIZE;
      BufferedInputStream bis = new BufferedInputStream(stream, bigBlockSize+1);
      bis.mark(bigBlockSize);

      // Do we need to store as a mini stream or a full one?
      if(bis.skip(bigBlockSize) < bigBlockSize) {
         _stream = new NPOIFSStream(filesystem.getMiniStore());
         _block_size = _filesystem.getMiniStore().getBlockStoreBlockSize();
      } else {
         _stream = new NPOIFSStream(filesystem);
         _block_size = _filesystem.getBlockStoreBlockSize();
      }

      // start from the beginning 
      bis.reset();
      
      // Store it
      OutputStream os = _stream.getOutputStream();
      byte buf[] = new byte[1024];
      int length = 0;
      
      for (int readBytes; (readBytes = bis.read(buf)) != -1; length += readBytes) {
          os.write(buf, 0, readBytes);
      }

      // And build the property for it
      this._property = new DocumentProperty(name, length);
      _property.setStartBlock(_stream.getStartBlock());     
   }

