    private NPOIFSFileSystem(FileChannel channel, boolean readOnly, boolean closeChannelOnError)
         throws IOException
    {
       this(false);

       try {
          // Get the header
          ByteBuffer headerBuffer = ByteBuffer.allocate(POIFSConstants.SMALLER_BIG_BLOCK_SIZE);
          IOUtils.readFully(channel, headerBuffer);
          
          // Have the header processed
          _header = new HeaderBlock(headerBuffer);
          
          // Now process the various entries
          _data = new FileBackedDataSource(channel, readOnly);
          readCoreContents();
       } catch(IOException e) {
          if(closeChannelOnError) {
             channel.close();
          }
          throw e;
       } catch(RuntimeException e) {
          // Comes from Iterators etc.
          // TODO Decide if we can handle these better whilst
          //  still sticking to the iterator contract
          if(closeChannelOnError) {
             channel.close();
          }
          throw e;
       }
    }

