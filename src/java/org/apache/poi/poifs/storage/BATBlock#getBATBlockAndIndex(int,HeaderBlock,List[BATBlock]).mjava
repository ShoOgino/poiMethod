    /**
     * Returns the BATBlock that handles the specified offset,
     *  and the relative index within it.
     * The List of BATBlocks must be in sequential order
     */
    public static BATBlockAndIndex getBATBlockAndIndex(final int offset, 
                final HeaderBlock header, final List<BATBlock> bats) {
       POIFSBigBlockSize bigBlockSize = header.getBigBlockSize();
       
       // Are we in the BAT or XBAT range
       int batRangeEndsAt = bigBlockSize.getBATEntriesPerBlock() *
                            header.getBATCount();
       
       if(offset < batRangeEndsAt) {
          int whichBAT = (int)Math.floor(offset / bigBlockSize.getBATEntriesPerBlock());
          int index = offset % bigBlockSize.getBATEntriesPerBlock();
          return new BATBlockAndIndex( index, bats.get(whichBAT) );
       }
       
       // XBATs hold slightly less
       int relOffset = offset - batRangeEndsAt;
       int whichXBAT = (int)Math.floor(relOffset / bigBlockSize.getXBATEntriesPerBlock());
       int index = relOffset % bigBlockSize.getXBATEntriesPerBlock();
       return new BATBlockAndIndex(
             index,
             bats.get(header.getBATCount() + whichXBAT)
       );
    }

