    private Cipher getCipher(SecretKey key, byte[] vec)
        throws GeneralSecurityException {
        
        String name = null;
        String chain = null;

    	EncryptionVerifier verifier = _info.getVerifier();
        
        switch (verifier.getAlgorithm()) {
          case EncryptionHeader.ALGORITHM_AES_128:
          case EncryptionHeader.ALGORITHM_AES_192:
          case EncryptionHeader.ALGORITHM_AES_256:
             name = "AES";
             break;
          default:
             throw new EncryptedDocumentException("Unsupported algorithm");
        }

        // Ensure the JCE policies files allow for this sized key
        if (Cipher.getMaxAllowedKeyLength(name) < _info.getHeader().getKeySize()) {
            throw new EncryptedDocumentException("Export Restrictions in place - please install JCE Unlimited Strength Jurisdiction Policy files");
        }
        
        switch (verifier.getCipherMode()) {
          case EncryptionHeader.MODE_CBC: 
              chain = "CBC"; 
              break;
          case EncryptionHeader.MODE_CFB:
              chain = "CFB";
              break;
          default: 
              throw new EncryptedDocumentException("Unsupported chain mode");
        }
        
        Cipher cipher = Cipher.getInstance(name + "/" + chain + "/NoPadding");
        IvParameterSpec iv = new IvParameterSpec(vec);
        cipher.init(Cipher.DECRYPT_MODE, key, iv);
        return cipher;
    }

