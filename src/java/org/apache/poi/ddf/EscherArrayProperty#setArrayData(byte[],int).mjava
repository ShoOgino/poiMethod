    /**
     * We have this method because the way in which arrays in escher works
     * is screwed for seemly arbitary reasons.  While most properties are
     * fairly consistent and have a predictable array size, escher arrays
     * have special cases.
     *
     * @param data      The data array containing the escher array information
     * @param offset    The offset into the array to start reading from.
     * @return  the number of bytes used by this complex property.
     */
    public int setArrayData( byte[] data, int offset )
    {
        short numElements = LittleEndian.getShort(data, offset);
        short numReserved = LittleEndian.getShort(data, offset + 2);
        short sizeOfElements = LittleEndian.getShort(data, offset + 4);

        int arraySize = getActualSizeOfElements(sizeOfElements) * numElements;
        if (arraySize == complexData.length)
            complexData = new byte[arraySize + 6];  // Calculation missing the header for some reason
        System.arraycopy(data, offset, complexData, 0, complexData.length );
        return complexData.length;
    }

