	private static Map<Short, EscherPropertyMetaData> initProps() {
		Map<Short, EscherPropertyMetaData> m = new HashMap<Short, EscherPropertyMetaData>();
		addProp(m, TRANSFORM__ROTATION, "transform.rotation");
		addProp(m, PROTECTION__LOCKROTATION, "protection.lockrotation");
		addProp(m, PROTECTION__LOCKASPECTRATIO, "protection.lockaspectratio");
		addProp(m, PROTECTION__LOCKPOSITION, "protection.lockposition");
		addProp(m, PROTECTION__LOCKAGAINSTSELECT, "protection.lockagainstselect");
		addProp(m, PROTECTION__LOCKCROPPING, "protection.lockcropping");
		addProp(m, PROTECTION__LOCKVERTICES, "protection.lockvertices");
		addProp(m, PROTECTION__LOCKTEXT, "protection.locktext");
		addProp(m, PROTECTION__LOCKADJUSTHANDLES, "protection.lockadjusthandles");
		addProp(m, PROTECTION__LOCKAGAINSTGROUPING, "protection.lockagainstgrouping", EscherPropertyMetaData.TYPE_BOOLEAN);
		addProp(m, TEXT__TEXTID, "text.textid");
		addProp(m, TEXT__TEXTLEFT, "text.textleft");
		addProp(m, TEXT__TEXTTOP, "text.texttop");
		addProp(m, TEXT__TEXTRIGHT, "text.textright");
		addProp(m, TEXT__TEXTBOTTOM, "text.textbottom");
		addProp(m, TEXT__WRAPTEXT, "text.wraptext");
		addProp(m, TEXT__SCALETEXT, "text.scaletext");
		addProp(m, TEXT__ANCHORTEXT, "text.anchortext");
		addProp(m, TEXT__TEXTFLOW, "text.textflow");
		addProp(m, TEXT__FONTROTATION, "text.fontrotation");
		addProp(m, TEXT__IDOFNEXTSHAPE, "text.idofnextshape");
		addProp(m, TEXT__BIDIR, "text.bidir");
		addProp(m, TEXT__SINGLECLICKSELECTS, "text.singleclickselects");
		addProp(m, TEXT__USEHOSTMARGINS, "text.usehostmargins");
		addProp(m, TEXT__ROTATETEXTWITHSHAPE, "text.rotatetextwithshape");
		addProp(m, TEXT__SIZESHAPETOFITTEXT, "text.sizeshapetofittext");
		addProp(m, TEXT__SIZE_TEXT_TO_FIT_SHAPE, "text.sizetexttofitshape", EscherPropertyMetaData.TYPE_BOOLEAN);
		addProp(m, GEOTEXT__UNICODE, "geotext.unicode");
		addProp(m, GEOTEXT__RTFTEXT, "geotext.rtftext");
		addProp(m, GEOTEXT__ALIGNMENTONCURVE, "geotext.alignmentoncurve");
		addProp(m, GEOTEXT__DEFAULTPOINTSIZE, "geotext.defaultpointsize");
		addProp(m, GEOTEXT__TEXTSPACING, "geotext.textspacing");
		addProp(m, GEOTEXT__FONTFAMILYNAME, "geotext.fontfamilyname");
		addProp(m, GEOTEXT__REVERSEROWORDER, "geotext.reverseroworder");
		addProp(m, GEOTEXT__HASTEXTEFFECT, "geotext.hastexteffect");
		addProp(m, GEOTEXT__ROTATECHARACTERS, "geotext.rotatecharacters");
		addProp(m, GEOTEXT__KERNCHARACTERS, "geotext.kerncharacters");
		addProp(m, GEOTEXT__TIGHTORTRACK, "geotext.tightortrack");
		addProp(m, GEOTEXT__STRETCHTOFITSHAPE, "geotext.stretchtofitshape");
		addProp(m, GEOTEXT__CHARBOUNDINGBOX, "geotext.charboundingbox");
		addProp(m, GEOTEXT__SCALETEXTONPATH, "geotext.scaletextonpath");
		addProp(m, GEOTEXT__STRETCHCHARHEIGHT, "geotext.stretchcharheight");
		addProp(m, GEOTEXT__NOMEASUREALONGPATH, "geotext.nomeasurealongpath");
		addProp(m, GEOTEXT__BOLDFONT, "geotext.boldfont");
		addProp(m, GEOTEXT__ITALICFONT, "geotext.italicfont");
		addProp(m, GEOTEXT__UNDERLINEFONT, "geotext.underlinefont");
		addProp(m, GEOTEXT__SHADOWFONT, "geotext.shadowfont");
		addProp(m, GEOTEXT__SMALLCAPSFONT, "geotext.smallcapsfont");
		addProp(m, GEOTEXT__STRIKETHROUGHFONT, "geotext.strikethroughfont");
		addProp(m, BLIP__CROPFROMTOP, "blip.cropfromtop");
		addProp(m, BLIP__CROPFROMBOTTOM, "blip.cropfrombottom");
		addProp(m, BLIP__CROPFROMLEFT, "blip.cropfromleft");
		addProp(m, BLIP__CROPFROMRIGHT, "blip.cropfromright");
		addProp(m, BLIP__BLIPTODISPLAY, "blip.bliptodisplay");
		addProp(m, BLIP__BLIPFILENAME, "blip.blipfilename");
		addProp(m, BLIP__BLIPFLAGS, "blip.blipflags");
		addProp(m, BLIP__TRANSPARENTCOLOR, "blip.transparentcolor");
		addProp(m, BLIP__CONTRASTSETTING, "blip.contrastsetting");
		addProp(m, BLIP__BRIGHTNESSSETTING, "blip.brightnesssetting");
		addProp(m, BLIP__GAMMA, "blip.gamma");
		addProp(m, BLIP__PICTUREID, "blip.pictureid");
		addProp(m, BLIP__DOUBLEMOD, "blip.doublemod");
		addProp(m, BLIP__PICTUREFILLMOD, "blip.picturefillmod");
		addProp(m, BLIP__PICTURELINE, "blip.pictureline");
		addProp(m, BLIP__PRINTBLIP, "blip.printblip");
		addProp(m, BLIP__PRINTBLIPFILENAME, "blip.printblipfilename");
		addProp(m, BLIP__PRINTFLAGS, "blip.printflags");
		addProp(m, BLIP__NOHITTESTPICTURE, "blip.nohittestpicture");
		addProp(m, BLIP__PICTUREGRAY, "blip.picturegray");
		addProp(m, BLIP__PICTUREBILEVEL, "blip.picturebilevel");
		addProp(m, BLIP__PICTUREACTIVE, "blip.pictureactive");
		addProp(m, GEOMETRY__LEFT, "geometry.left");
		addProp(m, GEOMETRY__TOP, "geometry.top");
		addProp(m, GEOMETRY__RIGHT, "geometry.right");
		addProp(m, GEOMETRY__BOTTOM, "geometry.bottom");
		addProp(m, GEOMETRY__SHAPEPATH, "geometry.shapepath", EscherPropertyMetaData.TYPE_SHAPEPATH);
		addProp(m, GEOMETRY__VERTICES, "geometry.vertices", EscherPropertyMetaData.TYPE_ARRAY);
		addProp(m, GEOMETRY__SEGMENTINFO, "geometry.segmentinfo", EscherPropertyMetaData.TYPE_ARRAY);
		addProp(m, GEOMETRY__ADJUSTVALUE, "geometry.adjustvalue");
		addProp(m, GEOMETRY__ADJUST2VALUE, "geometry.adjust2value");
		addProp(m, GEOMETRY__ADJUST3VALUE, "geometry.adjust3value");
		addProp(m, GEOMETRY__ADJUST4VALUE, "geometry.adjust4value");
		addProp(m, GEOMETRY__ADJUST5VALUE, "geometry.adjust5value");
		addProp(m, GEOMETRY__ADJUST6VALUE, "geometry.adjust6value");
		addProp(m, GEOMETRY__ADJUST7VALUE, "geometry.adjust7value");
		addProp(m, GEOMETRY__ADJUST8VALUE, "geometry.adjust8value");
		addProp(m, GEOMETRY__ADJUST9VALUE, "geometry.adjust9value");
		addProp(m, GEOMETRY__ADJUST10VALUE, "geometry.adjust10value");
		addProp(m, GEOMETRY__SHADOWok, "geometry.shadowOK");
		addProp(m, GEOMETRY__3DOK, "geometry.3dok");
		addProp(m, GEOMETRY__LINEOK, "geometry.lineok");
		addProp(m, GEOMETRY__GEOTEXTOK, "geometry.geotextok");
		addProp(m, GEOMETRY__FILLSHADESHAPEOK, "geometry.fillshadeshapeok");
		addProp(m, GEOMETRY__FILLOK, "geometry.fillok", EscherPropertyMetaData.TYPE_BOOLEAN);
		addProp(m, FILL__FILLTYPE, "fill.filltype");
		addProp(m, FILL__FILLCOLOR, "fill.fillcolor", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, FILL__FILLOPACITY, "fill.fillopacity");
		addProp(m, FILL__FILLBACKCOLOR, "fill.fillbackcolor", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, FILL__BACKOPACITY, "fill.backopacity");
		addProp(m, FILL__CRMOD, "fill.crmod");
		addProp(m, FILL__PATTERNTEXTURE, "fill.patterntexture");
		addProp(m, FILL__BLIPFILENAME, "fill.blipfilename");
		addProp(m, FILL__BLIPFLAGS, "fill.blipflags");
		addProp(m, FILL__WIDTH, "fill.width");
		addProp(m, FILL__HEIGHT, "fill.height");
		addProp(m, FILL__ANGLE, "fill.angle");
		addProp(m, FILL__FOCUS, "fill.focus");
		addProp(m, FILL__TOLEFT, "fill.toleft");
		addProp(m, FILL__TOTOP, "fill.totop");
		addProp(m, FILL__TORIGHT, "fill.toright");
		addProp(m, FILL__TOBOTTOM, "fill.tobottom");
		addProp(m, FILL__RECTLEFT, "fill.rectleft");
		addProp(m, FILL__RECTTOP, "fill.recttop");
		addProp(m, FILL__RECTRIGHT, "fill.rectright");
		addProp(m, FILL__RECTBOTTOM, "fill.rectbottom");
		addProp(m, FILL__DZTYPE, "fill.dztype");
		addProp(m, FILL__SHADEPRESET, "fill.shadepreset");
		addProp(m, FILL__SHADECOLORS, "fill.shadecolors", EscherPropertyMetaData.TYPE_ARRAY);
		addProp(m, FILL__ORIGINX, "fill.originx");
		addProp(m, FILL__ORIGINY, "fill.originy");
		addProp(m, FILL__SHAPEORIGINX, "fill.shapeoriginx");
		addProp(m, FILL__SHAPEORIGINY, "fill.shapeoriginy");
		addProp(m, FILL__SHADETYPE, "fill.shadetype");
		addProp(m, FILL__FILLED, "fill.filled");
		addProp(m, FILL__HITTESTFILL, "fill.hittestfill");
		addProp(m, FILL__SHAPE, "fill.shape");
		addProp(m, FILL__USERECT, "fill.userect");
		addProp(m, FILL__NOFILLHITTEST, "fill.nofillhittest", EscherPropertyMetaData.TYPE_BOOLEAN);
		addProp(m, LINESTYLE__COLOR, "linestyle.color", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, LINESTYLE__OPACITY, "linestyle.opacity");
		addProp(m, LINESTYLE__BACKCOLOR, "linestyle.backcolor", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, LINESTYLE__CRMOD, "linestyle.crmod");
		addProp(m, LINESTYLE__LINETYPE, "linestyle.linetype");
		addProp(m, LINESTYLE__FILLBLIP, "linestyle.fillblip");
		addProp(m, LINESTYLE__FILLBLIPNAME, "linestyle.fillblipname");
		addProp(m, LINESTYLE__FILLBLIPFLAGS, "linestyle.fillblipflags");
		addProp(m, LINESTYLE__FILLWIDTH, "linestyle.fillwidth");
		addProp(m, LINESTYLE__FILLHEIGHT, "linestyle.fillheight");
		addProp(m, LINESTYLE__FILLDZTYPE, "linestyle.filldztype");
		addProp(m, LINESTYLE__LINEWIDTH, "linestyle.linewidth");
		addProp(m, LINESTYLE__LINEMITERLIMIT, "linestyle.linemiterlimit");
		addProp(m, LINESTYLE__LINESTYLE, "linestyle.linestyle");
		addProp(m, LINESTYLE__LINEDASHING, "linestyle.linedashing");
		addProp(m, LINESTYLE__LINEDASHSTYLE, "linestyle.linedashstyle", EscherPropertyMetaData.TYPE_ARRAY);
		addProp(m, LINESTYLE__LINESTARTARROWHEAD, "linestyle.linestartarrowhead");
		addProp(m, LINESTYLE__LINEENDARROWHEAD, "linestyle.lineendarrowhead");
		addProp(m, LINESTYLE__LINESTARTARROWWIDTH, "linestyle.linestartarrowwidth");
		addProp(m, LINESTYLE__LINEESTARTARROWLENGTH, "linestyle.lineestartarrowlength");
		addProp(m, LINESTYLE__LINEENDARROWWIDTH, "linestyle.lineendarrowwidth");
		addProp(m, LINESTYLE__LINEENDARROWLENGTH, "linestyle.lineendarrowlength");
		addProp(m, LINESTYLE__LINEJOINSTYLE, "linestyle.linejoinstyle");
		addProp(m, LINESTYLE__LINEENDCAPSTYLE, "linestyle.lineendcapstyle");
		addProp(m, LINESTYLE__ARROWHEADSOK, "linestyle.arrowheadsok");
		addProp(m, LINESTYLE__ANYLINE, "linestyle.anyline");
		addProp(m, LINESTYLE__HITLINETEST, "linestyle.hitlinetest");
		addProp(m, LINESTYLE__LINEFILLSHAPE, "linestyle.linefillshape");
		addProp(m, LINESTYLE__NOLINEDRAWDASH, "linestyle.nolinedrawdash", EscherPropertyMetaData.TYPE_BOOLEAN);
		addProp(m, SHADOWSTYLE__TYPE, "shadowstyle.type");
		addProp(m, SHADOWSTYLE__COLOR, "shadowstyle.color", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, SHADOWSTYLE__HIGHLIGHT, "shadowstyle.highlight");
		addProp(m, SHADOWSTYLE__CRMOD, "shadowstyle.crmod");
		addProp(m, SHADOWSTYLE__OPACITY, "shadowstyle.opacity");
		addProp(m, SHADOWSTYLE__OFFSETX, "shadowstyle.offsetx");
		addProp(m, SHADOWSTYLE__OFFSETY, "shadowstyle.offsety");
		addProp(m, SHADOWSTYLE__SECONDOFFSETX, "shadowstyle.secondoffsetx");
		addProp(m, SHADOWSTYLE__SECONDOFFSETY, "shadowstyle.secondoffsety");
		addProp(m, SHADOWSTYLE__SCALEXTOX, "shadowstyle.scalextox");
		addProp(m, SHADOWSTYLE__SCALEYTOX, "shadowstyle.scaleytox");
		addProp(m, SHADOWSTYLE__SCALEXTOY, "shadowstyle.scalextoy");
		addProp(m, SHADOWSTYLE__SCALEYTOY, "shadowstyle.scaleytoy");
		addProp(m, SHADOWSTYLE__PERSPECTIVEX, "shadowstyle.perspectivex");
		addProp(m, SHADOWSTYLE__PERSPECTIVEY, "shadowstyle.perspectivey");
		addProp(m, SHADOWSTYLE__WEIGHT, "shadowstyle.weight");
		addProp(m, SHADOWSTYLE__ORIGINX, "shadowstyle.originx");
		addProp(m, SHADOWSTYLE__ORIGINY, "shadowstyle.originy");
		addProp(m, SHADOWSTYLE__SHADOW, "shadowstyle.shadow");
		addProp(m, SHADOWSTYLE__SHADOWOBSURED, "shadowstyle.shadowobscured");
		addProp(m, PERSPECTIVE__TYPE, "perspective.type");
		addProp(m, PERSPECTIVE__OFFSETX, "perspective.offsetx");
		addProp(m, PERSPECTIVE__OFFSETY, "perspective.offsety");
		addProp(m, PERSPECTIVE__SCALEXTOX, "perspective.scalextox");
		addProp(m, PERSPECTIVE__SCALEYTOX, "perspective.scaleytox");
		addProp(m, PERSPECTIVE__SCALEXTOY, "perspective.scalextoy");
		addProp(m, PERSPECTIVE__SCALEYTOY, "perspective.scaleytoy");
		addProp(m, PERSPECTIVE__PERSPECTIVEX, "perspective.perspectivex");
		addProp(m, PERSPECTIVE__PERSPECTIVEY, "perspective.perspectivey");
		addProp(m, PERSPECTIVE__WEIGHT, "perspective.weight");
		addProp(m, PERSPECTIVE__ORIGINX, "perspective.originx");
		addProp(m, PERSPECTIVE__ORIGINY, "perspective.originy");
		addProp(m, PERSPECTIVE__PERSPECTIVEON, "perspective.perspectiveon");
		addProp(m, THREED__SPECULARAMOUNT, "3d.specularamount");
		addProp(m, THREED__DIFFUSEAMOUNT, "3d.diffuseamount");
		addProp(m, THREED__SHININESS, "3d.shininess");
		addProp(m, THREED__EDGETHICKNESS, "3d.edgethickness");
		addProp(m, THREED__EXTRUDEFORWARD, "3d.extrudeforward");
		addProp(m, THREED__EXTRUDEBACKWARD, "3d.extrudebackward");
		addProp(m, THREED__EXTRUDEPLANE, "3d.extrudeplane");
		addProp(m, THREED__EXTRUSIONCOLOR, "3d.extrusioncolor", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, THREED__CRMOD, "3d.crmod");
		addProp(m, THREED__3DEFFECT, "3d.3deffect");
		addProp(m, THREED__METALLIC, "3d.metallic");
		addProp(m, THREED__USEEXTRUSIONCOLOR, "3d.useextrusioncolor", EscherPropertyMetaData.TYPE_RGB);
		addProp(m, THREED__LIGHTFACE, "3d.lightface");
		addProp(m, THREEDSTYLE__YROTATIONANGLE, "3dstyle.yrotationangle");
		addProp(m, THREEDSTYLE__XROTATIONANGLE, "3dstyle.xrotationangle");
		addProp(m, THREEDSTYLE__ROTATIONAXISX, "3dstyle.rotationaxisx");
		addProp(m, THREEDSTYLE__ROTATIONAXISY, "3dstyle.rotationaxisy");
		addProp(m, THREEDSTYLE__ROTATIONAXISZ, "3dstyle.rotationaxisz");
		addProp(m, THREEDSTYLE__ROTATIONANGLE, "3dstyle.rotationangle");
		addProp(m, THREEDSTYLE__ROTATIONCENTERX, "3dstyle.rotationcenterx");
		addProp(m, THREEDSTYLE__ROTATIONCENTERY, "3dstyle.rotationcentery");
		addProp(m, THREEDSTYLE__ROTATIONCENTERZ, "3dstyle.rotationcenterz");
		addProp(m, THREEDSTYLE__RENDERMODE, "3dstyle.rendermode");
		addProp(m, THREEDSTYLE__TOLERANCE, "3dstyle.tolerance");
		addProp(m, THREEDSTYLE__XVIEWPOINT, "3dstyle.xviewpoint");
		addProp(m, THREEDSTYLE__YVIEWPOINT, "3dstyle.yviewpoint");
		addProp(m, THREEDSTYLE__ZVIEWPOINT, "3dstyle.zviewpoint");
		addProp(m, THREEDSTYLE__ORIGINX, "3dstyle.originx");
		addProp(m, THREEDSTYLE__ORIGINY, "3dstyle.originy");
		addProp(m, THREEDSTYLE__SKEWANGLE, "3dstyle.skewangle");
		addProp(m, THREEDSTYLE__SKEWAMOUNT, "3dstyle.skewamount");
		addProp(m, THREEDSTYLE__AMBIENTINTENSITY, "3dstyle.ambientintensity");
		addProp(m, THREEDSTYLE__KEYX, "3dstyle.keyx");
		addProp(m, THREEDSTYLE__KEYY, "3dstyle.keyy");
		addProp(m, THREEDSTYLE__KEYZ, "3dstyle.keyz");
		addProp(m, THREEDSTYLE__KEYINTENSITY, "3dstyle.keyintensity");
		addProp(m, THREEDSTYLE__FILLX, "3dstyle.fillx");
		addProp(m, THREEDSTYLE__FILLY, "3dstyle.filly");
		addProp(m, THREEDSTYLE__FILLZ, "3dstyle.fillz");
		addProp(m, THREEDSTYLE__FILLINTENSITY, "3dstyle.fillintensity");
		addProp(m, THREEDSTYLE__CONSTRAINROTATION, "3dstyle.constrainrotation");
		addProp(m, THREEDSTYLE__ROTATIONCENTERAUTO, "3dstyle.rotationcenterauto");
		addProp(m, THREEDSTYLE__PARALLEL, "3dstyle.parallel");
		addProp(m, THREEDSTYLE__KEYHARSH, "3dstyle.keyharsh");
		addProp(m, THREEDSTYLE__FILLHARSH, "3dstyle.fillharsh");
		addProp(m, SHAPE__MASTER, "shape.master");
		addProp(m, SHAPE__CONNECTORSTYLE, "shape.connectorstyle");
		addProp(m, SHAPE__BLACKANDWHITESETTINGS, "shape.blackandwhitesettings");
		addProp(m, SHAPE__WMODEPUREBW, "shape.wmodepurebw");
		addProp(m, SHAPE__WMODEBW, "shape.wmodebw");
		addProp(m, SHAPE__OLEICON, "shape.oleicon");
		addProp(m, SHAPE__PREFERRELATIVERESIZE, "shape.preferrelativeresize");
		addProp(m, SHAPE__LOCKSHAPETYPE, "shape.lockshapetype");
		addProp(m, SHAPE__DELETEATTACHEDOBJECT, "shape.deleteattachedobject");
		addProp(m, SHAPE__BACKGROUNDSHAPE, "shape.backgroundshape");
		addProp(m, CALLOUT__CALLOUTTYPE, "callout.callouttype");
		addProp(m, CALLOUT__XYCALLOUTGAP, "callout.xycalloutgap");
		addProp(m, CALLOUT__CALLOUTANGLE, "callout.calloutangle");
		addProp(m, CALLOUT__CALLOUTDROPTYPE, "callout.calloutdroptype");
		addProp(m, CALLOUT__CALLOUTDROPSPECIFIED, "callout.calloutdropspecified");
		addProp(m, CALLOUT__CALLOUTLENGTHSPECIFIED, "callout.calloutlengthspecified");
		addProp(m, CALLOUT__ISCALLOUT, "callout.iscallout");
		addProp(m, CALLOUT__CALLOUTACCENTBAR, "callout.calloutaccentbar");
		addProp(m, CALLOUT__CALLOUTTEXTBORDER, "callout.callouttextborder");
		addProp(m, CALLOUT__CALLOUTMINUSX, "callout.calloutminusx");
		addProp(m, CALLOUT__CALLOUTMINUSY, "callout.calloutminusy");
		addProp(m, CALLOUT__DROPAUTO, "callout.dropauto");
		addProp(m, CALLOUT__LENGTHSPECIFIED, "callout.lengthspecified");
		addProp(m, GROUPSHAPE__SHAPENAME, "groupshape.shapename");
		addProp(m, GROUPSHAPE__DESCRIPTION, "groupshape.description");
		addProp(m, GROUPSHAPE__HYPERLINK, "groupshape.hyperlink");
		addProp(m, GROUPSHAPE__WRAPPOLYGONVERTICES, "groupshape.wrappolygonvertices", EscherPropertyMetaData.TYPE_ARRAY);
		addProp(m, GROUPSHAPE__WRAPDISTLEFT, "groupshape.wrapdistleft");
		addProp(m, GROUPSHAPE__WRAPDISTTOP, "groupshape.wrapdisttop");
		addProp(m, GROUPSHAPE__WRAPDISTRIGHT, "groupshape.wrapdistright");
		addProp(m, GROUPSHAPE__WRAPDISTBOTTOM, "groupshape.wrapdistbottom");
		addProp(m, GROUPSHAPE__REGROUPID, "groupshape.regroupid");
        addProp( m, GROUPSHAPE__UNUSED906, "unused906" ); // 0x038A;
        addProp( m, GROUPSHAPE__TOOLTIP, "groupshape.wzTooltip" ); // 0x038D;
        addProp( m, GROUPSHAPE__SCRIPT, "groupshape.wzScript" ); // 0x038E;
        addProp( m, GROUPSHAPE__POSH, "groupshape.posh" ); // 0x038F;
        addProp( m, GROUPSHAPE__POSRELH, "groupshape.posrelh" ); // 0x0390;
        addProp( m, GROUPSHAPE__POSV, "groupshape.posv" ); // 0x0391;
        addProp( m, GROUPSHAPE__POSRELV, "groupshape.posrelv" ); // 0x0392;
        addProp( m, GROUPSHAPE__HR_PCT, "groupshape.pctHR" ); // 0x0393;
        addProp( m, GROUPSHAPE__HR_ALIGN, "groupshape.alignHR" ); // 0x0394;
        addProp( m, GROUPSHAPE__HR_HEIGHT, "groupshape.dxHeightHR" ); // 0x0395;
        addProp( m, GROUPSHAPE__HR_WIDTH, "groupshape.dxWidthHR" ); // 0x0396;
        addProp( m, GROUPSHAPE__SCRIPTEXT, "groupshape.wzScriptExtAttr" ); // 0x0397;
        addProp( m, GROUPSHAPE__SCRIPTLANG, "groupshape.scriptLang" ); // 0x0398;
        addProp( m, GROUPSHAPE__BORDERTOPCOLOR, "groupshape.borderTopColor" ); // 0x039B;
        addProp( m, GROUPSHAPE__BORDERLEFTCOLOR, "groupshape.borderLeftColor" ); // 0x039C;
        addProp( m, GROUPSHAPE__BORDERBOTTOMCOLOR, "groupshape.borderBottomColor" ); // 0x039D;
        addProp( m, GROUPSHAPE__BORDERRIGHTCOLOR, "groupshape.borderRightColor" ); // 0x039E;
        addProp( m, GROUPSHAPE__TABLEPROPERTIES, "groupshape.tableProperties" ); // 0x039F;
        addProp( m, GROUPSHAPE__TABLEROWPROPERTIES, "groupshape.tableRowProperties" ); // 0x03A0;
        addProp( m, GROUPSHAPE__WEBBOT, "groupshape.wzWebBot" ); // 0x03A5;
        addProp( m, GROUPSHAPE__METROBLOB, "groupshape.metroBlob" ); // 0x03A9;
        addProp( m, GROUPSHAPE__ZORDER, "groupshape.dhgt" ); // 0x03AA;
        addProp( m, GROUPSHAPE__FLAGS, "groupshape.GroupShapeBooleanProperties" ); // 0x03BF;

		addProp(m, GROUPSHAPE__EDITEDWRAP, "groupshape.editedwrap");
		addProp(m, GROUPSHAPE__BEHINDDOCUMENT, "groupshape.behinddocument");
		addProp(m, GROUPSHAPE__ONDBLCLICKNOTIFY, "groupshape.ondblclicknotify");
		addProp(m, GROUPSHAPE__ISBUTTON, "groupshape.isbutton");
		addProp(m, GROUPSHAPE__1DADJUSTMENT, "groupshape.1dadjustment");
		addProp(m, GROUPSHAPE__HIDDEN, "groupshape.hidden");
		addProp(m, GROUPSHAPE__PRINT, "groupshape.print", EscherPropertyMetaData.TYPE_BOOLEAN);
		return m;
	}

