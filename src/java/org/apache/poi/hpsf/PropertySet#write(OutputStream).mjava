    /**
     * Writes the property set to an output stream.
     *
     * @param out the output stream to write the section to
     * @exception IOException if an error when writing to the output stream
     * occurs
     * @exception WritingNotSupportedException if HPSF does not yet support
     * writing a property's variant type.
     */
    public void write(final OutputStream out)
    throws WritingNotSupportedException, IOException {
        /* Write the number of sections in this property set stream. */
        final int nrSections = getSectionCount();

        /* Write the property set's header. */
        LittleEndian.putShort(out, (short) getByteOrder());
        LittleEndian.putShort(out, (short) getFormat());
        LittleEndian.putInt(getOSVersion(), out);
        putClassId(out, getClassID());
        LittleEndian.putInt(nrSections, out);
        int offset = OFFSET_HEADER;

        /* Write the section list, i.e. the references to the sections. Each
         * entry in the section list consist of the section's class ID and the
         * section's offset relative to the beginning of the stream. */
        offset += nrSections * (ClassID.LENGTH + LittleEndianConsts.INT_SIZE);
        final int sectionsBegin = offset;
        for (final Section section : getSections()) {
            final ClassID formatID = section.getFormatID();
            if (formatID == null) {
                throw new NoFormatIDException();
            }
            putClassId(out, formatID);
            LittleEndian.putUInt(offset, out);
            try {
                offset += section.getSize();
            } catch (HPSFRuntimeException ex) {
                final Throwable cause = ex.getReason();
                if (cause instanceof UnsupportedEncodingException) {
                    throw new IllegalPropertySetDataException(cause);
                }
                throw ex;
            }
        }

        /* Write the sections themselves. */
        offset = sectionsBegin;
        for (final Section section : getSections()) {
            offset += section.write(out);
        }
        
        /* Indicate that we're done */
        out.close();
    }

