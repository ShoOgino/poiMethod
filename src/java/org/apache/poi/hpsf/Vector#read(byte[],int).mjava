    int read( byte[] data, int startOffset )
    {
        int offset = startOffset;

        final long longLength = LittleEndian.getUInt( data, offset );
        offset += LittleEndian.INT_SIZE;

        if ( longLength > Integer.MAX_VALUE )
            throw new UnsupportedOperationException( "Vector is too long -- "
                    + longLength );
        final int length = (int) longLength;

        _values = new TypedPropertyValue[length];

        if ( _type == Variant.VT_VARIANT )
        {
            for ( int i = 0; i < length; i++ )
            {
                TypedPropertyValue value = new TypedPropertyValue();
                offset += value.read( data, offset );
                _values[i] = value;
            }
        }
        else
        {
            for ( int i = 0; i < length; i++ )
            {
                TypedPropertyValue value = new TypedPropertyValue( _type, null );
                offset += value.readValuePadded( data, offset );
                _values[i] = value;
            }
        }
        return offset - startOffset;
    }

