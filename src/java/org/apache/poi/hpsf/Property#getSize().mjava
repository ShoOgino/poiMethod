    /**
     * <p>Returns the property's size in bytes. This is always a multiple of
     * 4.</p>
     *
     * @return the property's size in bytes
     */
    protected int getSize()
    {
        int length = LittleEndian.INT_SIZE;
        final int PADDING = 4; /* Pad to multiples of 4. */
        if (type > Integer.MAX_VALUE)
            throw new HPSFRuntimeException
                ("Variant type " + type + " is greater than " +
                Integer.MAX_VALUE + ".");
        switch ((int) type)
        {
            case Variant.VT_LPSTR:
            {
                int l = ((String) value).length() + 1;
                int r = l % PADDING;
                if (r > 0)
                    l += PADDING - r;
                length += l;
                break;
            }
            case Variant.VT_EMPTY:
                break;
            default:
                throw new HPSFRuntimeException
                    ("Writing is not yet implemented for variant type " +
                     type + ". Please report this problem to the POI team!");
        }
        return length;
    }

