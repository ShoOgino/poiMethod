    UnicodeString(byte[] data, int offset) {
        int length = LittleEndian.getInt( data, offset );
        int dataOffset = offset + LittleEndian.INT_SIZE;
        
        if (! validLength(length, data, dataOffset)) {
            // If the length looks wrong, this might be because the offset is sometimes expected 
            // to be on a 4 byte boundary. Try checking with that if so, rather than blowing up with
            // and  ArrayIndexOutOfBoundsException below
            boolean valid = false;
            int past4byte = offset % 4;
            if (past4byte != 0) {
                offset = offset + past4byte;
                length = LittleEndian.getInt( data, offset );
                dataOffset = offset + LittleEndian.INT_SIZE;
                
                valid = validLength(length, data, dataOffset);
            }
            
            if (!valid) {
                throw new IllegalPropertySetDataException(
                        "UnicodeString started at offset #" + offset +
                        " is not NULL-terminated" );
            }
        }

        if ( length == 0 )
        {
            _value = new byte[0];
            return;
        }

        _value = LittleEndian.getByteArray( data, dataOffset, length * 2 );
    }

