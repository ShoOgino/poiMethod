    public static void main( String[] args ) throws Exception
    {
        if ( args.length == 0 )
        {
            System.err.println( "Use:" );
            System.err
                    .println( "\tHWPFLister <filename>\n"
                            + "\t\t[--textPieces] [--textPiecesText]\n"
                            + "\t\t[--textRuns] [--textRunsSprms]\n"
                            + "\t\t[--papx] [--papxProperties]\n"
                            + "\t\t[--paragraphs] [--paragraphsSprms] [--paragraphsText]\n"
                            + "\t\t[--writereadback]\n" );
            System.exit( 1 );
        }

        boolean outputTextPieces = false;
        boolean outputTextPiecesText = false;

        boolean outputTextRuns = false;
        boolean outputTextRunsSprms = false;

        boolean outputParagraphs = false;
        boolean outputParagraphsSprms = false;
        boolean outputParagraphsText = false;

        boolean outputPapx = false;
        boolean outputPapxProperties = false;

        boolean writereadback = false;

        for ( String arg : Arrays.asList( args ).subList( 1, args.length ) )
        {
            if ( "--textPieces".equals( arg ) )
                outputTextPieces = true;
            if ( "--textPiecesText".equals( arg ) )
                outputTextPiecesText = true;

            if ( "--textRuns".equals( arg ) )
                outputTextRuns = true;
            if ( "--textRunsSprms".equals( arg ) )
                outputTextRunsSprms = true;

            if ( "--paragraphs".equals( arg ) )
                outputParagraphs = true;
            if ( "--paragraphsSprms".equals( arg ) )
                outputParagraphsSprms = true;
            if ( "--paragraphsText".equals( arg ) )
                outputParagraphsText = true;

            if ( "--papx".equals( arg ) )
                outputPapx = true;
            if ( "--papxProperties".equals( arg ) )
                outputPapxProperties = true;

            if ( "--writereadback".equals( arg ) )
                writereadback = true;
        }

        HWPFDocumentCore doc = loadDoc( new File( args[0] ) );
        if ( writereadback )
            doc = writeOutAndReadBack( doc );

        HWPFLister lister = new HWPFLister( doc );
        lister.dumpFIB();

        if ( outputTextPieces )
        {
            System.out.println( "== Text pieces ==" );
            lister.dumpTextPieces( outputTextPiecesText );
        }

        if ( outputTextRuns )
        {
            System.out.println( "== Text runs ==" );
            lister.dumpChpx( outputTextRunsSprms );
        }

        if ( outputParagraphs )
        {
            System.out.println( "== Text paragraphs ==" );
            lister.dumpParagraphs( true );

            System.out.println( "== DOM paragraphs ==" );
            lister.dumpParagraphsDom( outputParagraphsSprms, outputPapx,
                    outputParagraphsText );
        }

        if ( !outputParagraphs && outputPapx )
        {
            System.out.println( "== PAPX ==" );
            lister.dumpPapx( outputPapxProperties );
        }
    }

