    /**
     * Takes an InputStream, verifies that it's not RTF or PDF, builds a
     *  POIFSFileSystem from it, and returns that.
     */
    public static POIFSFileSystem verifyAndBuildPOIFS(InputStream istream) throws IOException {
    	// Open a PushbackInputStream, so we can peek at the first few bytes
    	PushbackInputStream pis = new PushbackInputStream(istream,6);
    	byte[] first6 = IOUtils.toByteArray(pis, 6);

    	// Does it start with {\rtf ? If so, it's really RTF
    	if(first6[0] == '{' && first6[1] == '\\' && first6[2] == 'r'
    		&& first6[3] == 't' && first6[4] == 'f') {
    		throw new IllegalArgumentException("The document is really a RTF file");
    	} else if(first6[0] == '%' && first6[1] == 'P' && first6[2] == 'D' && first6[3] == 'F' ) {
    		throw new IllegalArgumentException("The document is really a PDF file");
    	}

    	// OK, so it's neither RTF nor PDF
    	// Open a POIFSFileSystem on the (pushed back) stream
    	pis.unread(first6);
    	return new POIFSFileSystem(pis);
    }

