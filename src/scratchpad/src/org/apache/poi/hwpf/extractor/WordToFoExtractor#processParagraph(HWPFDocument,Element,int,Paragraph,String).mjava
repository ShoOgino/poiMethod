    protected void processParagraph( HWPFDocument hwpfDocument,
            Element parentFopElement, int currentTableLevel,
            Paragraph paragraph, String bulletText )
    {
        final Element block = createBlock();
        parentFopElement.appendChild( block );

        WordToFoUtils.setParagraphProperties( paragraph, block );

        final int charRuns = paragraph.numCharacterRuns();

        if ( charRuns == 0 )
        {
            return;
        }

        {
            final String pFontName;
            final int pFontSize;
            final boolean pBold;
            final boolean pItalic;
            {
                CharacterRun characterRun = paragraph.getCharacterRun( 0 );
                pFontSize = characterRun.getFontSize() / 2;
                pFontName = characterRun.getFontName();
                pBold = characterRun.isBold();
                pItalic = characterRun.isItalic();
            }
            WordToFoUtils.setFontFamily( block, pFontName );
            WordToFoUtils.setFontSize( block, pFontSize );
            WordToFoUtils.setBold( block, pBold );
            WordToFoUtils.setItalic( block, pItalic );

            blocksProperies.push( new BlockProperies( pFontName, pFontSize,
                    pBold, pItalic ) );
        }
        try
        {
            boolean haveAnyText = false;

            if ( WordToFoUtils.isNotEmpty( bulletText ) )
            {
                Element inline = createInline();
                block.appendChild( inline );

                Text textNode = createText( bulletText );
                inline.appendChild( textNode );

                haveAnyText |= bulletText.trim().length() != 0;
            }

            haveAnyText = processCharacters( hwpfDocument, currentTableLevel,
                    paragraph, block, 0, charRuns );

            if ( !haveAnyText )
            {
                Element leader = createLeader();
                block.appendChild( leader );
            }
        }
        finally
        {
            blocksProperies.pop();
        }

        return;
    }

