    protected void processSectionParagraphes( HWPFDocument wordDocument,
            Element flow, Range range, int currentTableLevel )
    {
        final Map<Integer, Table> allTables = new HashMap<Integer, Table>();
        for ( TableIterator tableIterator = WordToFoUtils.newTableIterator(
                range, currentTableLevel + 1 ); tableIterator.hasNext(); )
        {
            Table next = tableIterator.next();
            allTables.put( Integer.valueOf( next.getStartOffset() ), next );
        }

        final ListTables listTables = wordDocument.getListTables();
        int currentListInfo = 0;

        final int paragraphs = range.numParagraphs();
        for ( int p = 0; p < paragraphs; p++ )
        {
            Paragraph paragraph = range.getParagraph( p );

            if ( allTables.containsKey( Integer.valueOf( paragraph
                    .getStartOffset() ) ) )
            {
                Table table = allTables.get( Integer.valueOf( paragraph
                        .getStartOffset() ) );
                processTable( wordDocument, flow, table, currentTableLevel + 1 );
                continue;
            }

            if ( paragraph.isInTable()
                    && paragraph.getTableLevel() != currentTableLevel )
            {
                continue;
            }

            if ( paragraph.getIlfo() != currentListInfo )
            {
                currentListInfo = paragraph.getIlfo();
            }

            if ( currentListInfo != 0 )
            {
                if ( listTables != null )
                {
                    final ListFormatOverride listFormatOverride = listTables
                            .getOverride( paragraph.getIlfo() );

                    String label = WordToFoUtils.getBulletText( listTables,
                            paragraph, listFormatOverride.getLsid() );

                    processParagraph( wordDocument, flow, currentTableLevel,
                            paragraph, label );
                }
                else
                {
                    logger.log( POILogger.WARN,
                            "Paragraph #" + paragraph.getStartOffset() + "-"
                                    + paragraph.getEndOffset()
                                    + " has reference to list structure #"
                                    + currentListInfo
                                    + ", but listTables not defined in file" );

                    processParagraph( wordDocument, flow, currentTableLevel,
                            paragraph, WordToFoUtils.EMPTY );
                }
            }
            else
            {
                processParagraph( wordDocument, flow, currentTableLevel,
                        paragraph, WordToFoUtils.EMPTY );
            }
        }

    }

