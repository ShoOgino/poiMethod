  public TextPieceTable(byte[] documentStream, byte[] tableStream, int offset, int size)
    throws UnsupportedEncodingException
  {
    PlexOfCps pieceTable = new PlexOfCps(tableStream, offset, size, PieceDescriptor.getSizeInBytes());

    int multiple = 2;
    int length = pieceTable.length();
    PieceDescriptor[] pieces = new PieceDescriptor[length];

    for (int x = 0; x < length; x++)
    {
      PropertyNode node = pieceTable.getProperty(x);
      pieces[x] = new PieceDescriptor(node.getBuf(), 0);

      if (!pieces[x].isUnicode())
      {
        multiple = 1;
      }

    }

    for (int x = 0; x < pieces.length; x++)
    {
      int start = pieces[x].getFilePosition();
      PropertyNode node = pieceTable.getProperty(x);
      int textSize = node.getEnd() - node.getStart();

      boolean unicode = pieces[x].isUnicode();
      String toStr = null;
      if (unicode)
      {
        toStr = new String(documentStream, start, length * multiple, "UTF-16LE");
      }
      else
      {
        toStr = new String(documentStream, start, length, "ISO-8859-1");
      }
      _text.append(toStr);
    }

  }

