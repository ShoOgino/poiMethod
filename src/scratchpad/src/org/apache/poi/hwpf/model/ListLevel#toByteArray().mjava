  public byte[] toByteArray()
  {
    byte[] buf = new byte[getSizeInBytes()];
    int offset = 0;
    LittleEndian.putInt(buf, offset, _iStartAt);
    offset += LittleEndian.INT_SIZE;
    buf[offset++] = _nfc;
    buf[offset++] = _info;
    System.arraycopy(_rgbxchNums, 0, buf, offset, _rgbxchNums.length);
    offset += _rgbxchNums.length;
    buf[offset++] = _ixchFollow;
    LittleEndian.putInt(buf, offset, _dxaSpace);
    offset += LittleEndian.INT_SIZE;
    LittleEndian.putInt(buf, offset, _dxaIndent);
    offset += LittleEndian.INT_SIZE;

    buf[offset++] = (byte)_cbGrpprlChpx;
    buf[offset++] = (byte)_cbGrpprlPapx;
    LittleEndian.putShort(buf, offset, _reserved);
    offset += LittleEndian.SHORT_SIZE;

    System.arraycopy(_grpprlChpx, 0, buf, offset, _cbGrpprlChpx);
    offset += _cbGrpprlChpx;
    System.arraycopy(_grpprlPapx, 0, buf, offset, _cbGrpprlPapx);
    offset += _cbGrpprlPapx;

    LittleEndian.putShort(buf, offset, (short)_numberText.length);
    offset += LittleEndian.SHORT_SIZE;
    for (int x = 0; x < _numberText.length; x++)
    {
      LittleEndian.putShort(buf, offset, (short)_numberText[x]);
      offset += LittleEndian.SHORT_SIZE;
    }
    return buf;
  }

