  /**
   * Constructor used to read an old-style binTable
   *  in from a Word document.
   *
   * @param documentStream
   * @param offset
   * @param size
   * @param fcMin
   */
  public OldCHPBinTable(byte[] documentStream, int offset,
                     int size, int fcMin, TextPieceTable tpt)
  {
    PlexOfCps binTable = new PlexOfCps(documentStream, offset, size, 2);

    int length = binTable.length();
    for (int x = 0; x < length; x++)
    {
      GenericPropertyNode node = binTable.getProperty(x);

      int pageNum = LittleEndian.getShort(node.getBytes());
      int pageOffset = POIFSConstants.SMALLER_BIG_BLOCK_SIZE * pageNum;

      CHPFormattedDiskPage cfkp = new CHPFormattedDiskPage(documentStream,
        pageOffset, fcMin, tpt, true);

      int fkpSize = cfkp.size();

      for (int y = 0; y < fkpSize; y++)
      {
        CHPX chpx = cfkp.getCHPX(y);
        if (chpx != null && tpt.isIndexInTable( chpx.getStartBytes(), chpx.getEndBytes() )) {
            _textRuns.add(chpx);
        } else {
                    if ( chpx != null )
                        logger.log( POILogger.WARN, "CHPX [",
                                chpx.getStartBytes(), "; ", chpx.getEndBytes(),
                                ") (bytes) doesn't have corresponding text pieces "
                                        + "and will be skipped" );
        }
      }
    }
    Collections.sort( _textRuns, PropertyNode.StartComparator.instance );
  }

