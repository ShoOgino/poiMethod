    public ListLevel( final byte[] buf, final int originalOffset )
    {
        int offset = originalOffset;

        _lvlf = new LVLF( buf, offset );
        offset += LVLF.getSize();

        _grpprlPapx = new byte[_lvlf.getCbGrpprlPapx()];
        System.arraycopy( buf, offset, _grpprlPapx, 0, _lvlf.getCbGrpprlPapx() );
        offset += _lvlf.getCbGrpprlPapx();

        _grpprlChpx = new byte[_lvlf.getCbGrpprlChpx()];
        System.arraycopy( buf, offset, _grpprlChpx, 0, _lvlf.getCbGrpprlChpx() );
        offset += _lvlf.getCbGrpprlChpx();

        int numberTextLength = LittleEndian.getShort( buf, offset );
        /* sometimes numberTextLength<0 */
        /* by derjohng */
        if ( numberTextLength > 0 )
        {
            _numberText = new char[numberTextLength];
            offset += LittleEndian.SHORT_SIZE;
            for ( int x = 0; x < numberTextLength; x++ )
            {
                _numberText[x] = (char) LittleEndian.getShort( buf, offset );
                offset += LittleEndian.SHORT_SIZE;
            }
        }

    }

