    public Bookmark getBookmark( int index )
    {
        final GenericPropertyNode first = descriptorsFirst.getProperty( index );
        return new Bookmark()
        {
            public int getEnd()
            {
                int currentIndex = Arrays.asList(
                        descriptorsFirst.toPropertiesArray() ).indexOf( first );
                if ( currentIndex >= descriptorsLim.length() )
                    return first.getEnd();

                GenericPropertyNode lim = descriptorsLim
                        .getProperty( currentIndex );
                return lim.getStart();
            }

            public String getName()
            {
                int currentIndex = Arrays.asList(
                        descriptorsFirst.toPropertiesArray() ).indexOf( first );
                if ( currentIndex >= names.length )
                    return "";

                return names[currentIndex];
            }

            public int getStart()
            {
                return first.getStart();
            }

            public void setName( String name )
            {
                int currentIndex = Arrays.asList(
                        descriptorsFirst.toPropertiesArray() ).indexOf( first );
                if ( currentIndex < names.length )
                {
                    String[] newNames = new String[currentIndex + 1];
                    System.arraycopy( names, 0, newNames, 0, names.length );
                    names = newNames;
                }
                names[currentIndex] = name;
            }
        };
    }

