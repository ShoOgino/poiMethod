    /**
     * Method for debug purposes. Checks that all resolved elements are inside
     * of current range.
     */
    public boolean sanityCheck()
    {
        if ( _start < 0 )
            throw new AssertionError();
        if ( _start >= _text.length() )
            throw new AssertionError();
        if ( _end < 0 )
            throw new AssertionError();
        if ( _end > _text.length() )
            throw new AssertionError();
        if ( _start > _end )
            throw new AssertionError();

        if ( _charRangeFound )
        {
            for ( int c = _charStart; c < _charEnd; c++ )
            {
                CHPX chpx = _characters.get( c );

                int left = Math.max( this._start, chpx.getStart() );
                int right = Math.min( this._end, chpx.getEnd() );

                if ( left >= right )
                    throw new AssertionError();
            }
        }
        if ( _parRangeFound )
        {
            for ( int p = _parStart; p < _parEnd; p++ )
            {
                PAPX papx = _paragraphs.get( p );

                int left = Math.max( this._start, papx.getStart() );
                int right = Math.min( this._end, papx.getEnd() );

                if ( left >= right )
                    throw new AssertionError();
            }
        }

        return true;
    }

