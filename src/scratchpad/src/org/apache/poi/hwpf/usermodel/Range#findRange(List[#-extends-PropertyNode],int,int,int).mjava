	/**
	 * Used to find the list indexes of a particular property.
	 *
	 * @param rpl
	 *            A list of property nodes.
	 * @param min
	 *            A hint on where to start looking.
	 * @param start
	 *            The starting character offset.
	 * @param end
	 *            The ending character offset.
	 * @return An int array of length 2. The first int is the start index and
	 *         the second int is the end index.
	 */
	private int[] findRange(List<? extends PropertyNode> rpl, int min, int start, int end) {
		int x = min;
		PropertyNode node = rpl.get(x);

		while (node==null || (node.getEnd() <= start && x < rpl.size() - 1)) {
			x++;

            if (x>=rpl.size()) {
                return new int[] {0, 0};
            }

			node = rpl.get(x);
		}

        if (node.getStart()>end) {
            return new int[] {0, 0};
        }

		if (node.getEnd() <= start) {
			return new int[] { rpl.size(), rpl.size() };
		}

		int y = x;
		node = rpl.get(y);
		while (node==null || (node.getEnd() < end && y < rpl.size() - 1)) {
			y++;
			node = rpl.get(y);
		}
		return new int[] { x, y + 1 };
	}

