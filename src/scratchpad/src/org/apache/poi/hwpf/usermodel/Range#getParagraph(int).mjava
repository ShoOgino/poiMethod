	/**
	 * Gets the paragraph at index. The index is relative to this range.
	 *
	 * @param index
	 *            The index of the paragraph to get.
	 * @return The paragraph at the specified index in this range.
	 */

	public Paragraph getParagraph(int index) {
        initParagraphs();

        if ( index + _parStart >= _parEnd )
            throw new IndexOutOfBoundsException( "Paragraph #" + index + " ("
                    + (index + _parStart) + ") not in range [" + _parStart
                    + "; " + _parEnd + ")" );

		PAPX papx = _paragraphs.get(index + _parStart);

		ParagraphProperties props = papx.getParagraphProperties(_doc.getStyleSheet());
		Paragraph pap = null;
		if (props.getIlfo() > 0) {
			pap = new ListEntry(papx, this, _doc.getListTables());
		} else {
            if (((index + _parStart)==0) && papx.getStart()>0) {
                pap = new Paragraph(papx, this, 0);
            } else {
    			pap = new Paragraph(papx, this);
            }
		}

		return pap;
	}

