    public String toString()
    {
        StringBuffer buffer = new StringBuffer();

        buffer.append("[FIB]\n");

        buffer.append("    .id                   = ")
            .append("0x")
            .append(HexDump.toHex((short)getId()))
            .append(" (").append(getId()).append(" )\n");

        buffer.append("    .version              = ")
            .append("0x")
            .append(HexDump.toHex((short)getVersion()))
            .append(" (").append(getVersion()).append(" )\n");

        buffer.append("    .productVersion       = ")
            .append("0x")
            .append(HexDump.toHex((short)getProductVersion()))
            .append(" (").append(getProductVersion()).append(" )\n");

        buffer.append("    .languageStamp        = ")
            .append("0x")
            .append(HexDump.toHex((short)getLanguageStamp()))
            .append(" (").append(getLanguageStamp()).append(" )\n");

        buffer.append("    .unknown1             = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnknown1()))
            .append(" (").append(getUnknown1()).append(" )\n");

        buffer.append("    .options              = ")
            .append("0x")
            .append(HexDump.toHex((short)getOptions()))
            .append(" (").append(getOptions()).append(" )\n");
        buffer.append("         .template                 = ").append(isTemplate            ()).append('\n');
        buffer.append("         .glossary                 = ").append(isGlossary            ()).append('\n');
        buffer.append("         .quicksave                = ").append(isQuicksave           ()).append('\n');
        buffer.append("         .haspictr                 = ").append(isHaspictr            ()).append('\n');
        buffer.append("         .nquicksaves              = ").append(isNquicksaves         ()).append('\n');
        buffer.append("         .encrypted                = ").append(isEncrypted           ()).append('\n');
        buffer.append("         .tabletype                = ").append(isTabletype           ()).append('\n');
        buffer.append("         .readonly                 = ").append(isReadonly            ()).append('\n');
        buffer.append("         .writeReservation         = ").append(isWriteReservation    ()).append('\n');
        buffer.append("         .extendedCharacter        = ").append(isExtendedCharacter   ()).append('\n');
        buffer.append("         .loadOverride             = ").append(isLoadOverride        ()).append('\n');
        buffer.append("         .farEast                  = ").append(isFarEast             ()).append('\n');
        buffer.append("         .crypto                   = ").append(isCrypto              ()).append('\n');

        buffer.append("    .minversion           = ")
            .append("0x")
            .append(HexDump.toHex((short)getMinversion()))
            .append(" (").append(getMinversion()).append(" )\n");

        buffer.append("    .encryptedKey         = ")
            .append("0x")
            .append(HexDump.toHex((short)getEncryptedKey()))
            .append(" (").append(getEncryptedKey()).append(" )\n");

        buffer.append("    .environment          = ")
            .append("0x")
            .append(HexDump.toHex((short)getEnvironment()))
            .append(" (").append(getEnvironment()).append(" )\n");

        buffer.append("    .history              = ")
            .append("0x")
            .append(HexDump.toHex((short)getHistory()))
            .append(" (").append(getHistory()).append(" )\n");
        buffer.append("         .historyMac               = ").append(isHistoryMac          ()).append('\n');
        buffer.append("         .emptySpecial             = ").append(isEmptySpecial        ()).append('\n');
        buffer.append("         .loadOverrideHist         = ").append(isLoadOverrideHist    ()).append('\n');
        buffer.append("         .featureUndo              = ").append(isFeatureUndo         ()).append('\n');
        buffer.append("         .v97Saved                 = ").append(isV97Saved            ()).append('\n');
        buffer.append("         .spare                    = ").append(isSpare               ()).append('\n');

        buffer.append("    .defaultCharset       = ")
            .append("0x")
            .append(HexDump.toHex((short)getDefaultCharset()))
            .append(" (").append(getDefaultCharset()).append(" )\n");

        buffer.append("    .defaultExtcharset    = ")
            .append("0x")
            .append(HexDump.toHex((short)getDefaultExtcharset()))
            .append(" (").append(getDefaultExtcharset()).append(" )\n");

        buffer.append("    .offsetFirstChar      = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetFirstChar()))
            .append(" (").append(getOffsetFirstChar()).append(" )\n");

        buffer.append("    .offsetLastChar       = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetLastChar()))
            .append(" (").append(getOffsetLastChar()).append(" )\n");

        buffer.append("    .countShorts          = ")
            .append("0x")
            .append(HexDump.toHex((short)getCountShorts()))
            .append(" (").append(getCountShorts()).append(" )\n");

        buffer.append("    .creatorIdOrBegShorts = ")
            .append("0x")
            .append(HexDump.toHex((short)getCreatorIdOrBegShorts()))
            .append(" (").append(getCreatorIdOrBegShorts()).append(" )\n");

        buffer.append("    .revisorId            = ")
            .append("0x")
            .append(HexDump.toHex((short)getRevisorId()))
            .append(" (").append(getRevisorId()).append(" )\n");

        buffer.append("    .creatorPrivate       = ")
            .append("0x")
            .append(HexDump.toHex((short)getCreatorPrivate()))
            .append(" (").append(getCreatorPrivate()).append(" )\n");

        buffer.append("    .revisorPrivate       = ")
            .append("0x")
            .append(HexDump.toHex((short)getRevisorPrivate()))
            .append(" (").append(getRevisorPrivate()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .fareastid            = ")
            .append("0x")
            .append(HexDump.toHex((short)getFareastid()))
            .append(" (").append(getFareastid()).append(" )\n");

        buffer.append("    .countints            = ")
            .append("0x")
            .append(HexDump.toHex((short)getCountints()))
            .append(" (").append(getCountints()).append(" )\n");

        buffer.append("    .lastByteOrBegInts    = ")
            .append("0x")
            .append(HexDump.toHex((int)getLastByteOrBegInts()))
            .append(" (").append(getLastByteOrBegInts()).append(" )\n");

        buffer.append("    .creatorBuildDate     = ")
            .append("0x")
            .append(HexDump.toHex((int)getCreatorBuildDate()))
            .append(" (").append(getCreatorBuildDate()).append(" )\n");

        buffer.append("    .revisorBuildDate     = ")
            .append("0x")
            .append(HexDump.toHex((int)getRevisorBuildDate()))
            .append(" (").append(getRevisorBuildDate()).append(" )\n");

        buffer.append("    .mainStreamlen        = ")
            .append("0x")
            .append(HexDump.toHex((int)getMainStreamlen()))
            .append(" (").append(getMainStreamlen()).append(" )\n");

        buffer.append("    .footnoteStreamlen    = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnoteStreamlen()))
            .append(" (").append(getFootnoteStreamlen()).append(" )\n");

        buffer.append("    .headerStreamlen      = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeaderStreamlen()))
            .append(" (").append(getHeaderStreamlen()).append(" )\n");

        buffer.append("    .macroStreamlen       = ")
            .append("0x")
            .append(HexDump.toHex((int)getMacroStreamlen()))
            .append(" (").append(getMacroStreamlen()).append(" )\n");

        buffer.append("    .annotationStreamlen  = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationStreamlen()))
            .append(" (").append(getAnnotationStreamlen()).append(" )\n");

        buffer.append("    .endnoteStreamlen     = ")
            .append("0x")
            .append(HexDump.toHex((int)getEndnoteStreamlen()))
            .append(" (").append(getEndnoteStreamlen()).append(" )\n");

        buffer.append("    .textboxStreamlen     = ")
            .append("0x")
            .append(HexDump.toHex((int)getTextboxStreamlen()))
            .append(" (").append(getTextboxStreamlen()).append(" )\n");

        buffer.append("    .headboxStreamlen     = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeadboxStreamlen()))
            .append(" (").append(getHeadboxStreamlen()).append(" )\n");

        buffer.append("    .ptrToPlcListChp      = ")
            .append("0x")
            .append(HexDump.toHex((int)getPtrToPlcListChp()))
            .append(" (").append(getPtrToPlcListChp()).append(" )\n");

        buffer.append("    .firstChp             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFirstChp()))
            .append(" (").append(getFirstChp()).append(" )\n");

        buffer.append("    .countChps            = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountChps()))
            .append(" (").append(getCountChps()).append(" )\n");

        buffer.append("    .ptrToPlcListPap      = ")
            .append("0x")
            .append(HexDump.toHex((int)getPtrToPlcListPap()))
            .append(" (").append(getPtrToPlcListPap()).append(" )\n");

        buffer.append("    .firstPap             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFirstPap()))
            .append(" (").append(getFirstPap()).append(" )\n");

        buffer.append("    .countPaps            = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountPaps()))
            .append(" (").append(getCountPaps()).append(" )\n");

        buffer.append("    .ptrToPlcListLvc      = ")
            .append("0x")
            .append(HexDump.toHex((int)getPtrToPlcListLvc()))
            .append(" (").append(getPtrToPlcListLvc()).append(" )\n");

        buffer.append("    .firstLvc             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFirstLvc()))
            .append(" (").append(getFirstLvc()).append(" )\n");

        buffer.append("    .countLvc             = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountLvc()))
            .append(" (").append(getCountLvc()).append(" )\n");

        buffer.append("    .unknown              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnknown()))
            .append(" (").append(getUnknown()).append(" )\n");

        buffer.append("    .unknown              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnknown()))
            .append(" (").append(getUnknown()).append(" )\n");

        buffer.append("    .lcbArraySize         = ")
            .append("0x")
            .append(HexDump.toHex((short)getLcbArraySize()))
            .append(" (").append(getLcbArraySize()).append(" )\n");

        buffer.append("    .originalStylesheetOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getOriginalStylesheetOffset()))
            .append(" (").append(getOriginalStylesheetOffset()).append(" )\n");

        buffer.append("    .originalStylesheetSize = ")
            .append("0x")
            .append(HexDump.toHex((int)getOriginalStylesheetSize()))
            .append(" (").append(getOriginalStylesheetSize()).append(" )\n");

        buffer.append("    .stylesheetOffset     = ")
            .append("0x")
            .append(HexDump.toHex((int)getStylesheetOffset()))
            .append(" (").append(getStylesheetOffset()).append(" )\n");

        buffer.append("    .stylesheetSize       = ")
            .append("0x")
            .append(HexDump.toHex((int)getStylesheetSize()))
            .append(" (").append(getStylesheetSize()).append(" )\n");

        buffer.append("    .footnoteRefOffset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnoteRefOffset()))
            .append(" (").append(getFootnoteRefOffset()).append(" )\n");

        buffer.append("    .footnoteRefSize      = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnoteRefSize()))
            .append(" (").append(getFootnoteRefSize()).append(" )\n");

        buffer.append("    .plcOffset            = ")
            .append("0x")
            .append(HexDump.toHex((int)getPlcOffset()))
            .append(" (").append(getPlcOffset()).append(" )\n");

        buffer.append("    .plcSize              = ")
            .append("0x")
            .append(HexDump.toHex((int)getPlcSize()))
            .append(" (").append(getPlcSize()).append(" )\n");

        buffer.append("    .annotationRefOffset  = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationRefOffset()))
            .append(" (").append(getAnnotationRefOffset()).append(" )\n");

        buffer.append("    .annotationRefSize    = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationRefSize()))
            .append(" (").append(getAnnotationRefSize()).append(" )\n");

        buffer.append("    .annotationPlcOffset  = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationPlcOffset()))
            .append(" (").append(getAnnotationPlcOffset()).append(" )\n");

        buffer.append("    .annotationPlcSize    = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationPlcSize()))
            .append(" (").append(getAnnotationPlcSize()).append(" )\n");

        buffer.append("    .sectionPlcOffset     = ")
            .append("0x")
            .append(HexDump.toHex((int)getSectionPlcOffset()))
            .append(" (").append(getSectionPlcOffset()).append(" )\n");

        buffer.append("    .sectionPlcSize       = ")
            .append("0x")
            .append(HexDump.toHex((int)getSectionPlcSize()))
            .append(" (").append(getSectionPlcSize()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .pheplcOffset         = ")
            .append("0x")
            .append(HexDump.toHex((int)getPheplcOffset()))
            .append(" (").append(getPheplcOffset()).append(" )\n");

        buffer.append("    .pheplcSize           = ")
            .append("0x")
            .append(HexDump.toHex((int)getPheplcSize()))
            .append(" (").append(getPheplcSize()).append(" )\n");

        buffer.append("    .glossarySTOffset     = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossarySTOffset()))
            .append(" (").append(getGlossarySTOffset()).append(" )\n");

        buffer.append("    .glossarySTSize       = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossarySTSize()))
            .append(" (").append(getGlossarySTSize()).append(" )\n");

        buffer.append("    .glossaryPLCOffset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossaryPLCOffset()))
            .append(" (").append(getGlossaryPLCOffset()).append(" )\n");

        buffer.append("    .glossaryPLCSize      = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossaryPLCSize()))
            .append(" (").append(getGlossaryPLCSize()).append(" )\n");

        buffer.append("    .headerPLCOffset      = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeaderPLCOffset()))
            .append(" (").append(getHeaderPLCOffset()).append(" )\n");

        buffer.append("    .headerPLCSize        = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeaderPLCSize()))
            .append(" (").append(getHeaderPLCSize()).append(" )\n");

        buffer.append("    .chp_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getChp_bin_table_offset()))
            .append(" (").append(getChp_bin_table_offset()).append(" )\n");

        buffer.append("    .chp_bin_table_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getChp_bin_table_size()))
            .append(" (").append(getChp_bin_table_size()).append(" )\n");

        buffer.append("    .pap_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getPap_bin_table_offset()))
            .append(" (").append(getPap_bin_table_offset()).append(" )\n");

        buffer.append("    .pap_bin_table_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getPap_bin_table_size()))
            .append(" (").append(getPap_bin_table_size()).append(" )\n");

        buffer.append("    .sea_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getSea_bin_table_offset()))
            .append(" (").append(getSea_bin_table_offset()).append(" )\n");

        buffer.append("    .sea_bin_table_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getSea_bin_table_size()))
            .append(" (").append(getSea_bin_table_size()).append(" )\n");

        buffer.append("    .fonts_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getFonts_bin_table_offset()))
            .append(" (").append(getFonts_bin_table_offset()).append(" )\n");

        buffer.append("    .fonts_bin_table_size = ")
            .append("0x")
            .append(HexDump.toHex((int)getFonts_bin_table_size()))
            .append(" (").append(getFonts_bin_table_size()).append(" )\n");

        buffer.append("    .main_fields_offset   = ")
            .append("0x")
            .append(HexDump.toHex((int)getMain_fields_offset()))
            .append(" (").append(getMain_fields_offset()).append(" )\n");

        buffer.append("    .main_fields_size     = ")
            .append("0x")
            .append(HexDump.toHex((int)getMain_fields_size()))
            .append(" (").append(getMain_fields_size()).append(" )\n");

        buffer.append("    .header_fields_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeader_fields_offset()))
            .append(" (").append(getHeader_fields_offset()).append(" )\n");

        buffer.append("    .header_fields_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeader_fields_size()))
            .append(" (").append(getHeader_fields_size()).append(" )\n");

        buffer.append("    .footnote_fields_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnote_fields_offset()))
            .append(" (").append(getFootnote_fields_offset()).append(" )\n");

        buffer.append("    .footnote_fields_size = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnote_fields_size()))
            .append(" (").append(getFootnote_fields_size()).append(" )\n");

        buffer.append("    .ann_fields_offset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnn_fields_offset()))
            .append(" (").append(getAnn_fields_offset()).append(" )\n");

        buffer.append("    .ann_fields_size      = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnn_fields_size()))
            .append(" (").append(getAnn_fields_size()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .bookmark_names_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_names_offset()))
            .append(" (").append(getBookmark_names_offset()).append(" )\n");

        buffer.append("    .bookmark_names_size  = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_names_size()))
            .append(" (").append(getBookmark_names_size()).append(" )\n");

        buffer.append("    .bookmark_offsets_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_offsets_offset()))
            .append(" (").append(getBookmark_offsets_offset()).append(" )\n");

        buffer.append("    .bookmark_offsets_size = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_offsets_size()))
            .append(" (").append(getBookmark_offsets_size()).append(" )\n");

        buffer.append("    .macros_offset        = ")
            .append("0x")
            .append(HexDump.toHex((int)getMacros_offset()))
            .append(" (").append(getMacros_offset()).append(" )\n");

        buffer.append("    .macros_size          = ")
            .append("0x")
            .append(HexDump.toHex((int)getMacros_size()))
            .append(" (").append(getMacros_size()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .unused               = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused()))
            .append(" (").append(getUnused()).append(" )\n");

        buffer.append("    .printerOffset        = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterOffset()))
            .append(" (").append(getPrinterOffset()).append(" )\n");

        buffer.append("    .printerSize          = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterSize()))
            .append(" (").append(getPrinterSize()).append(" )\n");

        buffer.append("    .printerPortraitOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterPortraitOffset()))
            .append(" (").append(getPrinterPortraitOffset()).append(" )\n");

        buffer.append("    .printerPortraitSize  = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterPortraitSize()))
            .append(" (").append(getPrinterPortraitSize()).append(" )\n");

        buffer.append("    .printerLandscapeOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterLandscapeOffset()))
            .append(" (").append(getPrinterLandscapeOffset()).append(" )\n");

        buffer.append("    .printerLandscapeSize = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterLandscapeSize()))
            .append(" (").append(getPrinterLandscapeSize()).append(" )\n");

        buffer.append("    .wssOffset            = ")
            .append("0x")
            .append(HexDump.toHex((int)getWssOffset()))
            .append(" (").append(getWssOffset()).append(" )\n");

        buffer.append("    .wssSize              = ")
            .append("0x")
            .append(HexDump.toHex((int)getWssSize()))
            .append(" (").append(getWssSize()).append(" )\n");

        buffer.append("    .DOPOffset            = ")
            .append("0x")
            .append(HexDump.toHex((int)getDOPOffset()))
            .append(" (").append(getDOPOffset()).append(" )\n");

        buffer.append("    .DOPSize              = ")
            .append("0x")
            .append(HexDump.toHex((int)getDOPSize()))
            .append(" (").append(getDOPSize()).append(" )\n");

        buffer.append("    .sttbfassoc_offset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getSttbfassoc_offset()))
            .append(" (").append(getSttbfassoc_offset()).append(" )\n");

        buffer.append("    .sttbfassoc_size      = ")
            .append("0x")
            .append(HexDump.toHex((int)getSttbfassoc_size()))
            .append(" (").append(getSttbfassoc_size()).append(" )\n");

        buffer.append("    .textPieceTableOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getTextPieceTableOffset()))
            .append(" (").append(getTextPieceTableOffset()).append(" )\n");

        buffer.append("    .textPieceTableSize   = ")
            .append("0x")
            .append(HexDump.toHex((int)getTextPieceTableSize()))
            .append(" (").append(getTextPieceTableSize()).append(" )\n");

        buffer.append("[/FIB]\n");
        return buffer.toString();
    }

