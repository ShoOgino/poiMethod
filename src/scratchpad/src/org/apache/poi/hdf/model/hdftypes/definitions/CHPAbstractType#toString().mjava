    public String toString()
    {
        StringBuffer buffer = new StringBuffer();

        buffer.append("[CHP]\n");

        buffer.append("    .formatFlags          = ")
            .append("0x")
            .append(HexDump.toHex((short)getFormatFlags()))
            .append(" (").append(getFormatFlags()).append(" )\n");
        buffer.append("         .fBold                    = ").append(isFBold               ()).append('\n');
        buffer.append("         .fItalic                  = ").append(isFItalic             ()).append('\n');
        buffer.append("         .fRMarkDel                = ").append(isFRMarkDel           ()).append('\n');
        buffer.append("         .fOutline                 = ").append(isFOutline            ()).append('\n');
        buffer.append("         .fFldVanish               = ").append(isFFldVanish          ()).append('\n');
        buffer.append("         .fSmallCaps               = ").append(isFSmallCaps          ()).append('\n');
        buffer.append("         .fCaps                    = ").append(isFCaps               ()).append('\n');
        buffer.append("         .fVanish                  = ").append(isFVanish             ()).append('\n');
        buffer.append("         .fRMark                   = ").append(isFRMark              ()).append('\n');
        buffer.append("         .fSpec                    = ").append(isFSpec               ()).append('\n');
        buffer.append("         .fStrike                  = ").append(isFStrike             ()).append('\n');
        buffer.append("         .fObj                     = ").append(isFObj                ()).append('\n');
        buffer.append("         .fShadow                  = ").append(isFShadow             ()).append('\n');
        buffer.append("         .fLowerCase               = ").append(isFLowerCase          ()).append('\n');
        buffer.append("         .fData                    = ").append(isFData               ()).append('\n');
        buffer.append("         .fOle2                    = ").append(isFOle2               ()).append('\n');

        buffer.append("    .formatFlags1         = ")
            .append("0x")
            .append(HexDump.toHex((short)getFormatFlags1()))
            .append(" (").append(getFormatFlags1()).append(" )\n");
        buffer.append("         .fEmboss                  = ").append(isFEmboss             ()).append('\n');
        buffer.append("         .fImprint                 = ").append(isFImprint            ()).append('\n');
        buffer.append("         .fDStrike                 = ").append(isFDStrike            ()).append('\n');
        buffer.append("         .fUsePgsuSettings         = ").append(isFUsePgsuSettings    ()).append('\n');

        buffer.append("    .ftcAscii             = ")
            .append("0x")
            .append(HexDump.toHex((short)getFtcAscii()))
            .append(" (").append(getFtcAscii()).append(" )\n");

        buffer.append("    .ftcFE                = ")
            .append("0x")
            .append(HexDump.toHex((short)getFtcFE()))
            .append(" (").append(getFtcFE()).append(" )\n");

        buffer.append("    .ftcOther             = ")
            .append("0x")
            .append(HexDump.toHex((short)getFtcOther()))
            .append(" (").append(getFtcOther()).append(" )\n");

        buffer.append("    .hps                  = ")
            .append("0x")
            .append(HexDump.toHex((short)getHps()))
            .append(" (").append(getHps()).append(" )\n");

        buffer.append("    .dxaSpace             = ")
            .append("0x")
            .append(HexDump.toHex((int)getDxaSpace()))
            .append(" (").append(getDxaSpace()).append(" )\n");

        buffer.append("    .iss                  = ")
            .append("0x")
            .append(HexDump.toHex((byte)getIss()))
            .append(" (").append(getIss()).append(" )\n");

        buffer.append("    .kul                  = ")
            .append("0x")
            .append(HexDump.toHex((byte)getKul()))
            .append(" (").append(getKul()).append(" )\n");

        buffer.append("    .ico                  = ")
            .append("0x")
            .append(HexDump.toHex((byte)getIco()))
            .append(" (").append(getIco()).append(" )\n");

        buffer.append("    .hpsPos               = ")
            .append("0x")
            .append(HexDump.toHex((short)getHpsPos()))
            .append(" (").append(getHpsPos()).append(" )\n");

        buffer.append("    .lidDefault           = ")
            .append("0x")
            .append(HexDump.toHex((short)getLidDefault()))
            .append(" (").append(getLidDefault()).append(" )\n");

        buffer.append("    .lidFE                = ")
            .append("0x")
            .append(HexDump.toHex((short)getLidFE()))
            .append(" (").append(getLidFE()).append(" )\n");

        buffer.append("    .idctHint             = ")
            .append("0x")
            .append(HexDump.toHex((byte)getIdctHint()))
            .append(" (").append(getIdctHint()).append(" )\n");

        buffer.append("    .wCharScale           = ")
            .append("0x")
            .append(HexDump.toHex((short)getWCharScale()))
            .append(" (").append(getWCharScale()).append(" )\n");

        buffer.append("    .FC                   = ")
            .append("0x")
            .append(HexDump.toHex((int)getFC()))
            .append(" (").append(getFC()).append(" )\n");

        buffer.append("    .ibstRMark            = ")
            .append("0x")
            .append(HexDump.toHex((short)getIbstRMark()))
            .append(" (").append(getIbstRMark()).append(" )\n");

        buffer.append("    .ibstRMarkDel         = ")
            .append("0x")
            .append(HexDump.toHex((short)getIbstRMarkDel()))
            .append(" (").append(getIbstRMarkDel()).append(" )\n");

        buffer.append("    .istd                 = ")
            .append("0x")
            .append(HexDump.toHex((short)getIstd()))
            .append(" (").append(getIstd()).append(" )\n");

        buffer.append("    .ftcSym               = ")
            .append("0x")
            .append(HexDump.toHex((short)getFtcSym()))
            .append(" (").append(getFtcSym()).append(" )\n");

        buffer.append("    .xchSym               = ")
            .append("0x")
            .append(HexDump.toHex((short)getXchSym()))
            .append(" (").append(getXchSym()).append(" )\n");

        buffer.append("    .idslRMReason         = ")
            .append("0x")
            .append(HexDump.toHex((short)getIdslRMReason()))
            .append(" (").append(getIdslRMReason()).append(" )\n");

        buffer.append("    .idslReasonDel        = ")
            .append("0x")
            .append(HexDump.toHex((short)getIdslReasonDel()))
            .append(" (").append(getIdslReasonDel()).append(" )\n");

        buffer.append("    .ysr                  = ")
            .append("0x")
            .append(HexDump.toHex((byte)getYsr()))
            .append(" (").append(getYsr()).append(" )\n");

        buffer.append("    .chYsr                = ")
            .append("0x")
            .append(HexDump.toHex((byte)getChYsr()))
            .append(" (").append(getChYsr()).append(" )\n");

        buffer.append("    .hpsKern              = ")
            .append("0x")
            .append(HexDump.toHex((short)getHpsKern()))
            .append(" (").append(getHpsKern()).append(" )\n");

        buffer.append("    .icoHighlight         = ")
            .append("0x")
            .append(HexDump.toHex((byte)getIcoHighlight()))
            .append(" (").append(getIcoHighlight()).append(" )\n");

        buffer.append("    .fHighlight           = ")
            .append("0x")
            .append(HexDump.toHex((byte)getFHighlight()))
            .append(" (").append(getFHighlight()).append(" )\n");

        buffer.append("    .fPropMark            = ")
            .append("0x")
            .append(HexDump.toHex((short)getFPropMark()))
            .append(" (").append(getFPropMark()).append(" )\n");

        buffer.append("    .ibstPropRMark        = ")
            .append("0x")
            .append(HexDump.toHex((short)getIbstPropRMark()))
            .append(" (").append(getIbstPropRMark()).append(" )\n");

        buffer.append("    .dttmPropRMark        = ")
            .append("0x")
            .append(HexDump.toHex((int)getDttmPropRMark()))
            .append(" (").append(getDttmPropRMark()).append(" )\n");

        buffer.append("    .sfxtText             = ")
            .append("0x")
            .append(HexDump.toHex((byte)getSfxtText()))
            .append(" (").append(getSfxtText()).append(" )\n");

        buffer.append("    .fDispFldRMark        = ")
            .append("0x")
            .append(HexDump.toHex((byte)getFDispFldRMark()))
            .append(" (").append(getFDispFldRMark()).append(" )\n");

        buffer.append("    .ibstDispFldRMark     = ")
            .append("0x")
            .append(HexDump.toHex((short)getIbstDispFldRMark()))
            .append(" (").append(getIbstDispFldRMark()).append(" )\n");

        buffer.append("    .dttmDispFldRMark     = ")
            .append("0x")
            .append(HexDump.toHex((int)getDttmDispFldRMark()))
            .append(" (").append(getDttmDispFldRMark()).append(" )\n");

        buffer.append("    .shd                  = ")
            .append("0x")
            .append(HexDump.toHex((short)getShd()))
            .append(" (").append(getShd()).append(" )\n");

        buffer.append("    .brc                  = ")
            .append("0x")
            .append(HexDump.toHex((short)getBrc()))
            .append(" (").append(getBrc()).append(" )\n");

        buffer.append("[/CHP]\n");
        return buffer.toString();
    }

