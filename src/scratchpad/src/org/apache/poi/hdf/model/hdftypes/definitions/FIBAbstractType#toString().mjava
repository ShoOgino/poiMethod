    public String toString()
    {
        StringBuffer buffer = new StringBuffer();

        buffer.append("[FIB]\n");

        buffer.append("    .id                   = ")
            .append("0x")
            .append(HexDump.toHex((short)getId()))
            .append(" (").append(getId()).append(" )\n");

        buffer.append("    .version              = ")
            .append("0x")
            .append(HexDump.toHex((short)getVersion()))
            .append(" (").append(getVersion()).append(" )\n");

        buffer.append("    .productVersion       = ")
            .append("0x")
            .append(HexDump.toHex((short)getProductVersion()))
            .append(" (").append(getProductVersion()).append(" )\n");

        buffer.append("    .languageStamp        = ")
            .append("0x")
            .append(HexDump.toHex((short)getLanguageStamp()))
            .append(" (").append(getLanguageStamp()).append(" )\n");

        buffer.append("    .unknown0             = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnknown0()))
            .append(" (").append(getUnknown0()).append(" )\n");

        buffer.append("    .options              = ")
            .append("0x")
            .append(HexDump.toHex((short)getOptions()))
            .append(" (").append(getOptions()).append(" )\n");
        buffer.append("         .template                 = ").append(isTemplate            ()).append('\n');
        buffer.append("         .glossary                 = ").append(isGlossary            ()).append('\n');
        buffer.append("         .quicksave                = ").append(isQuicksave           ()).append('\n');
        buffer.append("         .haspictr                 = ").append(isHaspictr            ()).append('\n');
        buffer.append("         .nquicksaves              = ").append(isNquicksaves         ()).append('\n');
        buffer.append("         .encrypted                = ").append(isEncrypted           ()).append('\n');
        buffer.append("         .tabletype                = ").append(isTabletype           ()).append('\n');
        buffer.append("         .readonly                 = ").append(isReadonly            ()).append('\n');
        buffer.append("         .writeReservation         = ").append(isWriteReservation    ()).append('\n');
        buffer.append("         .extendedCharacter        = ").append(isExtendedCharacter   ()).append('\n');
        buffer.append("         .loadOverride             = ").append(isLoadOverride        ()).append('\n');
        buffer.append("         .farEast                  = ").append(isFarEast             ()).append('\n');
        buffer.append("         .crypto                   = ").append(isCrypto              ()).append('\n');

        buffer.append("    .minversion           = ")
            .append("0x")
            .append(HexDump.toHex((short)getMinversion()))
            .append(" (").append(getMinversion()).append(" )\n");

        buffer.append("    .encryptedKey         = ")
            .append("0x")
            .append(HexDump.toHex((short)getEncryptedKey()))
            .append(" (").append(getEncryptedKey()).append(" )\n");

        buffer.append("    .environment          = ")
            .append("0x")
            .append(HexDump.toHex((short)getEnvironment()))
            .append(" (").append(getEnvironment()).append(" )\n");

        buffer.append("    .history              = ")
            .append("0x")
            .append(HexDump.toHex((short)getHistory()))
            .append(" (").append(getHistory()).append(" )\n");
        buffer.append("         .historyMac               = ").append(isHistoryMac          ()).append('\n');
        buffer.append("         .emptySpecial             = ").append(isEmptySpecial        ()).append('\n');
        buffer.append("         .loadOverrideHist         = ").append(isLoadOverrideHist    ()).append('\n');
        buffer.append("         .featureUndo              = ").append(isFeatureUndo         ()).append('\n');
        buffer.append("         .v97Saved                 = ").append(isV97Saved            ()).append('\n');
        buffer.append("         .spare                    = ").append(isSpare               ()).append('\n');

        buffer.append("    .defaultCharset       = ")
            .append("0x")
            .append(HexDump.toHex((short)getDefaultCharset()))
            .append(" (").append(getDefaultCharset()).append(" )\n");

        buffer.append("    .defaultExtcharset    = ")
            .append("0x")
            .append(HexDump.toHex((short)getDefaultExtcharset()))
            .append(" (").append(getDefaultExtcharset()).append(" )\n");

        buffer.append("    .offsetFirstChar      = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetFirstChar()))
            .append(" (").append(getOffsetFirstChar()).append(" )\n");

        buffer.append("    .offsetLastChar       = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetLastChar()))
            .append(" (").append(getOffsetLastChar()).append(" )\n");

        buffer.append("    .countShorts          = ")
            .append("0x")
            .append(HexDump.toHex((short)getCountShorts()))
            .append(" (").append(getCountShorts()).append(" )\n");

        buffer.append("    .creatorIdOrBegShorts = ")
            .append("0x")
            .append(HexDump.toHex((short)getCreatorIdOrBegShorts()))
            .append(" (").append(getCreatorIdOrBegShorts()).append(" )\n");

        buffer.append("    .revisorId            = ")
            .append("0x")
            .append(HexDump.toHex((short)getRevisorId()))
            .append(" (").append(getRevisorId()).append(" )\n");

        buffer.append("    .creatorPrivate       = ")
            .append("0x")
            .append(HexDump.toHex((short)getCreatorPrivate()))
            .append(" (").append(getCreatorPrivate()).append(" )\n");

        buffer.append("    .revisorPrivate       = ")
            .append("0x")
            .append(HexDump.toHex((short)getRevisorPrivate()))
            .append(" (").append(getRevisorPrivate()).append(" )\n");

        buffer.append("    .unused1              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused1()))
            .append(" (").append(getUnused1()).append(" )\n");

        buffer.append("    .unused2              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused2()))
            .append(" (").append(getUnused2()).append(" )\n");

        buffer.append("    .unused3              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused3()))
            .append(" (").append(getUnused3()).append(" )\n");

        buffer.append("    .unused4              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused4()))
            .append(" (").append(getUnused4()).append(" )\n");

        buffer.append("    .unused5              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused5()))
            .append(" (").append(getUnused5()).append(" )\n");

        buffer.append("    .unused6              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused6()))
            .append(" (").append(getUnused6()).append(" )\n");

        buffer.append("    .unused7              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused7()))
            .append(" (").append(getUnused7()).append(" )\n");

        buffer.append("    .unused8              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused8()))
            .append(" (").append(getUnused8()).append(" )\n");

        buffer.append("    .unused9              = ")
            .append("0x")
            .append(HexDump.toHex((short)getUnused9()))
            .append(" (").append(getUnused9()).append(" )\n");

        buffer.append("    .fareastid            = ")
            .append("0x")
            .append(HexDump.toHex((short)getFareastid()))
            .append(" (").append(getFareastid()).append(" )\n");

        buffer.append("    .countints            = ")
            .append("0x")
            .append(HexDump.toHex((short)getCountints()))
            .append(" (").append(getCountints()).append(" )\n");

        buffer.append("    .lastByteOrBegInts    = ")
            .append("0x")
            .append(HexDump.toHex((int)getLastByteOrBegInts()))
            .append(" (").append(getLastByteOrBegInts()).append(" )\n");

        buffer.append("    .creatorBuildDate     = ")
            .append("0x")
            .append(HexDump.toHex((int)getCreatorBuildDate()))
            .append(" (").append(getCreatorBuildDate()).append(" )\n");

        buffer.append("    .revisorBuildDate     = ")
            .append("0x")
            .append(HexDump.toHex((int)getRevisorBuildDate()))
            .append(" (").append(getRevisorBuildDate()).append(" )\n");

        buffer.append("    .mainStreamlen        = ")
            .append("0x")
            .append(HexDump.toHex((int)getMainStreamlen()))
            .append(" (").append(getMainStreamlen()).append(" )\n");

        buffer.append("    .footnoteStreamlen    = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnoteStreamlen()))
            .append(" (").append(getFootnoteStreamlen()).append(" )\n");

        buffer.append("    .headerStreamlen      = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeaderStreamlen()))
            .append(" (").append(getHeaderStreamlen()).append(" )\n");

        buffer.append("    .macroStreamlen       = ")
            .append("0x")
            .append(HexDump.toHex((int)getMacroStreamlen()))
            .append(" (").append(getMacroStreamlen()).append(" )\n");

        buffer.append("    .annotationStreamlen  = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationStreamlen()))
            .append(" (").append(getAnnotationStreamlen()).append(" )\n");

        buffer.append("    .endnoteStreamlen     = ")
            .append("0x")
            .append(HexDump.toHex((int)getEndnoteStreamlen()))
            .append(" (").append(getEndnoteStreamlen()).append(" )\n");

        buffer.append("    .textboxStreamlen     = ")
            .append("0x")
            .append(HexDump.toHex((int)getTextboxStreamlen()))
            .append(" (").append(getTextboxStreamlen()).append(" )\n");

        buffer.append("    .headboxStreamlen     = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeadboxStreamlen()))
            .append(" (").append(getHeadboxStreamlen()).append(" )\n");

        buffer.append("    .ptrToPlcListChp      = ")
            .append("0x")
            .append(HexDump.toHex((int)getPtrToPlcListChp()))
            .append(" (").append(getPtrToPlcListChp()).append(" )\n");

        buffer.append("    .firstChp             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFirstChp()))
            .append(" (").append(getFirstChp()).append(" )\n");

        buffer.append("    .countChps            = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountChps()))
            .append(" (").append(getCountChps()).append(" )\n");

        buffer.append("    .ptrToPlcListPap      = ")
            .append("0x")
            .append(HexDump.toHex((int)getPtrToPlcListPap()))
            .append(" (").append(getPtrToPlcListPap()).append(" )\n");

        buffer.append("    .firstPap             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFirstPap()))
            .append(" (").append(getFirstPap()).append(" )\n");

        buffer.append("    .countPaps            = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountPaps()))
            .append(" (").append(getCountPaps()).append(" )\n");

        buffer.append("    .ptrToPlcListLvc      = ")
            .append("0x")
            .append(HexDump.toHex((int)getPtrToPlcListLvc()))
            .append(" (").append(getPtrToPlcListLvc()).append(" )\n");

        buffer.append("    .firstLvc             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFirstLvc()))
            .append(" (").append(getFirstLvc()).append(" )\n");

        buffer.append("    .countLvc             = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountLvc()))
            .append(" (").append(getCountLvc()).append(" )\n");

        buffer.append("    .unknown1             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnknown1()))
            .append(" (").append(getUnknown1()).append(" )\n");

        buffer.append("    .unknown2             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnknown2()))
            .append(" (").append(getUnknown2()).append(" )\n");

        buffer.append("    .lcbArraySize         = ")
            .append("0x")
            .append(HexDump.toHex((short)getLcbArraySize()))
            .append(" (").append(getLcbArraySize()).append(" )\n");

        buffer.append("    .originalStylesheetOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getOriginalStylesheetOffset()))
            .append(" (").append(getOriginalStylesheetOffset()).append(" )\n");

        buffer.append("    .originalStylesheetSize = ")
            .append("0x")
            .append(HexDump.toHex((int)getOriginalStylesheetSize()))
            .append(" (").append(getOriginalStylesheetSize()).append(" )\n");

        buffer.append("    .stylesheetOffset     = ")
            .append("0x")
            .append(HexDump.toHex((int)getStylesheetOffset()))
            .append(" (").append(getStylesheetOffset()).append(" )\n");

        buffer.append("    .stylesheetSize       = ")
            .append("0x")
            .append(HexDump.toHex((int)getStylesheetSize()))
            .append(" (").append(getStylesheetSize()).append(" )\n");

        buffer.append("    .footnoteRefOffset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnoteRefOffset()))
            .append(" (").append(getFootnoteRefOffset()).append(" )\n");

        buffer.append("    .footnoteRefSize      = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnoteRefSize()))
            .append(" (").append(getFootnoteRefSize()).append(" )\n");

        buffer.append("    .plcOffset            = ")
            .append("0x")
            .append(HexDump.toHex((int)getPlcOffset()))
            .append(" (").append(getPlcOffset()).append(" )\n");

        buffer.append("    .plcSize              = ")
            .append("0x")
            .append(HexDump.toHex((int)getPlcSize()))
            .append(" (").append(getPlcSize()).append(" )\n");

        buffer.append("    .annotationRefOffset  = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationRefOffset()))
            .append(" (").append(getAnnotationRefOffset()).append(" )\n");

        buffer.append("    .annotationRefSize    = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationRefSize()))
            .append(" (").append(getAnnotationRefSize()).append(" )\n");

        buffer.append("    .annotationPlcOffset  = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationPlcOffset()))
            .append(" (").append(getAnnotationPlcOffset()).append(" )\n");

        buffer.append("    .annotationPlcSize    = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnnotationPlcSize()))
            .append(" (").append(getAnnotationPlcSize()).append(" )\n");

        buffer.append("    .sectionPlcOffset     = ")
            .append("0x")
            .append(HexDump.toHex((int)getSectionPlcOffset()))
            .append(" (").append(getSectionPlcOffset()).append(" )\n");

        buffer.append("    .sectionPlcSize       = ")
            .append("0x")
            .append(HexDump.toHex((int)getSectionPlcSize()))
            .append(" (").append(getSectionPlcSize()).append(" )\n");

        buffer.append("    .unusedA              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnusedA()))
            .append(" (").append(getUnusedA()).append(" )\n");

        buffer.append("    .unusedB              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnusedB()))
            .append(" (").append(getUnusedB()).append(" )\n");

        buffer.append("    .pheplcOffset         = ")
            .append("0x")
            .append(HexDump.toHex((int)getPheplcOffset()))
            .append(" (").append(getPheplcOffset()).append(" )\n");

        buffer.append("    .pheplcSize           = ")
            .append("0x")
            .append(HexDump.toHex((int)getPheplcSize()))
            .append(" (").append(getPheplcSize()).append(" )\n");

        buffer.append("    .glossarySTOffset     = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossarySTOffset()))
            .append(" (").append(getGlossarySTOffset()).append(" )\n");

        buffer.append("    .glossarySTSize       = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossarySTSize()))
            .append(" (").append(getGlossarySTSize()).append(" )\n");

        buffer.append("    .glossaryPLCOffset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossaryPLCOffset()))
            .append(" (").append(getGlossaryPLCOffset()).append(" )\n");

        buffer.append("    .glossaryPLCSize      = ")
            .append("0x")
            .append(HexDump.toHex((int)getGlossaryPLCSize()))
            .append(" (").append(getGlossaryPLCSize()).append(" )\n");

        buffer.append("    .headerPLCOffset      = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeaderPLCOffset()))
            .append(" (").append(getHeaderPLCOffset()).append(" )\n");

        buffer.append("    .headerPLCSize        = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeaderPLCSize()))
            .append(" (").append(getHeaderPLCSize()).append(" )\n");

        buffer.append("    .chp_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getChp_bin_table_offset()))
            .append(" (").append(getChp_bin_table_offset()).append(" )\n");

        buffer.append("    .chp_bin_table_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getChp_bin_table_size()))
            .append(" (").append(getChp_bin_table_size()).append(" )\n");

        buffer.append("    .pap_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getPap_bin_table_offset()))
            .append(" (").append(getPap_bin_table_offset()).append(" )\n");

        buffer.append("    .pap_bin_table_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getPap_bin_table_size()))
            .append(" (").append(getPap_bin_table_size()).append(" )\n");

        buffer.append("    .sea_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getSea_bin_table_offset()))
            .append(" (").append(getSea_bin_table_offset()).append(" )\n");

        buffer.append("    .sea_bin_table_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getSea_bin_table_size()))
            .append(" (").append(getSea_bin_table_size()).append(" )\n");

        buffer.append("    .fonts_bin_table_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getFonts_bin_table_offset()))
            .append(" (").append(getFonts_bin_table_offset()).append(" )\n");

        buffer.append("    .fonts_bin_table_size = ")
            .append("0x")
            .append(HexDump.toHex((int)getFonts_bin_table_size()))
            .append(" (").append(getFonts_bin_table_size()).append(" )\n");

        buffer.append("    .main_fields_offset   = ")
            .append("0x")
            .append(HexDump.toHex((int)getMain_fields_offset()))
            .append(" (").append(getMain_fields_offset()).append(" )\n");

        buffer.append("    .main_fields_size     = ")
            .append("0x")
            .append(HexDump.toHex((int)getMain_fields_size()))
            .append(" (").append(getMain_fields_size()).append(" )\n");

        buffer.append("    .header_fields_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeader_fields_offset()))
            .append(" (").append(getHeader_fields_offset()).append(" )\n");

        buffer.append("    .header_fields_size   = ")
            .append("0x")
            .append(HexDump.toHex((int)getHeader_fields_size()))
            .append(" (").append(getHeader_fields_size()).append(" )\n");

        buffer.append("    .footnote_fields_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnote_fields_offset()))
            .append(" (").append(getFootnote_fields_offset()).append(" )\n");

        buffer.append("    .footnote_fields_size = ")
            .append("0x")
            .append(HexDump.toHex((int)getFootnote_fields_size()))
            .append(" (").append(getFootnote_fields_size()).append(" )\n");

        buffer.append("    .ann_fields_offset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnn_fields_offset()))
            .append(" (").append(getAnn_fields_offset()).append(" )\n");

        buffer.append("    .ann_fields_size      = ")
            .append("0x")
            .append(HexDump.toHex((int)getAnn_fields_size()))
            .append(" (").append(getAnn_fields_size()).append(" )\n");

        buffer.append("    .unusedC              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnusedC()))
            .append(" (").append(getUnusedC()).append(" )\n");

        buffer.append("    .unusedD              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnusedD()))
            .append(" (").append(getUnusedD()).append(" )\n");

        buffer.append("    .bookmark_names_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_names_offset()))
            .append(" (").append(getBookmark_names_offset()).append(" )\n");

        buffer.append("    .bookmark_names_size  = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_names_size()))
            .append(" (").append(getBookmark_names_size()).append(" )\n");

        buffer.append("    .bookmark_offsets_offset = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_offsets_offset()))
            .append(" (").append(getBookmark_offsets_offset()).append(" )\n");

        buffer.append("    .bookmark_offsets_size = ")
            .append("0x")
            .append(HexDump.toHex((int)getBookmark_offsets_size()))
            .append(" (").append(getBookmark_offsets_size()).append(" )\n");

        buffer.append("    .macros_offset        = ")
            .append("0x")
            .append(HexDump.toHex((int)getMacros_offset()))
            .append(" (").append(getMacros_offset()).append(" )\n");

        buffer.append("    .macros_size          = ")
            .append("0x")
            .append(HexDump.toHex((int)getMacros_size()))
            .append(" (").append(getMacros_size()).append(" )\n");

        buffer.append("    .unusedE              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnusedE()))
            .append(" (").append(getUnusedE()).append(" )\n");

        buffer.append("    .unusedF              = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnusedF()))
            .append(" (").append(getUnusedF()).append(" )\n");

        buffer.append("    .unused10             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused10()))
            .append(" (").append(getUnused10()).append(" )\n");

        buffer.append("    .unused11             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused11()))
            .append(" (").append(getUnused11()).append(" )\n");

        buffer.append("    .printerOffset        = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterOffset()))
            .append(" (").append(getPrinterOffset()).append(" )\n");

        buffer.append("    .printerSize          = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterSize()))
            .append(" (").append(getPrinterSize()).append(" )\n");

        buffer.append("    .printerPortraitOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterPortraitOffset()))
            .append(" (").append(getPrinterPortraitOffset()).append(" )\n");

        buffer.append("    .printerPortraitSize  = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterPortraitSize()))
            .append(" (").append(getPrinterPortraitSize()).append(" )\n");

        buffer.append("    .printerLandscapeOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterLandscapeOffset()))
            .append(" (").append(getPrinterLandscapeOffset()).append(" )\n");

        buffer.append("    .printerLandscapeSize = ")
            .append("0x")
            .append(HexDump.toHex((int)getPrinterLandscapeSize()))
            .append(" (").append(getPrinterLandscapeSize()).append(" )\n");

        buffer.append("    .wssOffset            = ")
            .append("0x")
            .append(HexDump.toHex((int)getWssOffset()))
            .append(" (").append(getWssOffset()).append(" )\n");

        buffer.append("    .wssSize              = ")
            .append("0x")
            .append(HexDump.toHex((int)getWssSize()))
            .append(" (").append(getWssSize()).append(" )\n");

        buffer.append("    .DOPOffset            = ")
            .append("0x")
            .append(HexDump.toHex((int)getDOPOffset()))
            .append(" (").append(getDOPOffset()).append(" )\n");

        buffer.append("    .DOPSize              = ")
            .append("0x")
            .append(HexDump.toHex((int)getDOPSize()))
            .append(" (").append(getDOPSize()).append(" )\n");

        buffer.append("    .sttbfassoc_offset    = ")
            .append("0x")
            .append(HexDump.toHex((int)getSttbfassoc_offset()))
            .append(" (").append(getSttbfassoc_offset()).append(" )\n");

        buffer.append("    .sttbfassoc_size      = ")
            .append("0x")
            .append(HexDump.toHex((int)getSttbfassoc_size()))
            .append(" (").append(getSttbfassoc_size()).append(" )\n");

        buffer.append("    .textPieceTableOffset = ")
            .append("0x")
            .append(HexDump.toHex((int)getTextPieceTableOffset()))
            .append(" (").append(getTextPieceTableOffset()).append(" )\n");

        buffer.append("    .textPieceTableSize   = ")
            .append("0x")
            .append(HexDump.toHex((int)getTextPieceTableSize()))
            .append(" (").append(getTextPieceTableSize()).append(" )\n");

        buffer.append("    .unused12             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused12()))
            .append(" (").append(getUnused12()).append(" )\n");

        buffer.append("    .unused13             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused13()))
            .append(" (").append(getUnused13()).append(" )\n");

        buffer.append("    .offsetAutosaveSource = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetAutosaveSource()))
            .append(" (").append(getOffsetAutosaveSource()).append(" )\n");

        buffer.append("    .countAutosaveSource  = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountAutosaveSource()))
            .append(" (").append(getCountAutosaveSource()).append(" )\n");

        buffer.append("    .offsetGrpXstAtnOwners = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetGrpXstAtnOwners()))
            .append(" (").append(getOffsetGrpXstAtnOwners()).append(" )\n");

        buffer.append("    .countGrpXstAtnOwners = ")
            .append("0x")
            .append(HexDump.toHex((int)getCountGrpXstAtnOwners()))
            .append(" (").append(getCountGrpXstAtnOwners()).append(" )\n");

        buffer.append("    .offsetSttbfAtnbkmk   = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetSttbfAtnbkmk()))
            .append(" (").append(getOffsetSttbfAtnbkmk()).append(" )\n");

        buffer.append("    .lengthSttbfAtnbkmk   = ")
            .append("0x")
            .append(HexDump.toHex((int)getLengthSttbfAtnbkmk()))
            .append(" (").append(getLengthSttbfAtnbkmk()).append(" )\n");

        buffer.append("    .unused14             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused14()))
            .append(" (").append(getUnused14()).append(" )\n");

        buffer.append("    .unused15             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused15()))
            .append(" (").append(getUnused15()).append(" )\n");

        buffer.append("    .unused16             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused16()))
            .append(" (").append(getUnused16()).append(" )\n");

        buffer.append("    .unused17             = ")
            .append("0x")
            .append(HexDump.toHex((int)getUnused17()))
            .append(" (").append(getUnused17()).append(" )\n");

        buffer.append("    .offsetPlcspaMom      = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetPlcspaMom()))
            .append(" (").append(getOffsetPlcspaMom()).append(" )\n");

        buffer.append("    .lengthPlcspaMom      = ")
            .append("0x")
            .append(HexDump.toHex((int)getLengthPlcspaMom()))
            .append(" (").append(getLengthPlcspaMom()).append(" )\n");

        buffer.append("    .offsetPlcspaHdr      = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetPlcspaHdr()))
            .append(" (").append(getOffsetPlcspaHdr()).append(" )\n");

        buffer.append("    .lengthPlcspaHdr      = ")
            .append("0x")
            .append(HexDump.toHex((int)getLengthPlcspaHdr()))
            .append(" (").append(getLengthPlcspaHdr()).append(" )\n");

        buffer.append("    .lengthPlcfAnnBkmrkFirst = ")
            .append("0x")
            .append(HexDump.toHex((int)getLengthPlcfAnnBkmrkFirst()))
            .append(" (").append(getLengthPlcfAnnBkmrkFirst()).append(" )\n");

        buffer.append("    .offsetPlcfAnnBkmrkFirst = ")
            .append("0x")
            .append(HexDump.toHex((int)getOffsetPlcfAnnBkmrkFirst()))
            .append(" (").append(getOffsetPlcfAnnBkmrkFirst()).append(" )\n");

        buffer.append("    .lengthPlcfAnnBkarkLast = ")
            .append("0x")
            .append(HexDump.toHex((int)getLengthPlcfAnnBkarkLast()))
            .append(" (").append(getLengthPlcfAnnBkarkLast()).append(" )\n");

        buffer.append("    .PlcfAtnbkl           = ")
            .append("0x")
            .append(HexDump.toHex((int)getPlcfAtnbkl()))
            .append(" (").append(getPlcfAtnbkl()).append(" )\n");

        buffer.append("    .fcPms                = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPms()))
            .append(" (").append(getFcPms()).append(" )\n");

        buffer.append("    .lcbPms               = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPms()))
            .append(" (").append(getLcbPms()).append(" )\n");

        buffer.append("    .fcFormFldSttbs       = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcFormFldSttbs()))
            .append(" (").append(getFcFormFldSttbs()).append(" )\n");

        buffer.append("    .lcbFormFldSttbs      = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbFormFldSttbs()))
            .append(" (").append(getLcbFormFldSttbs()).append(" )\n");

        buffer.append("    .fcPlcfendRef         = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfendRef()))
            .append(" (").append(getFcPlcfendRef()).append(" )\n");

        buffer.append("    .lcbPlcfendRef        = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfendRef()))
            .append(" (").append(getLcbPlcfendRef()).append(" )\n");

        buffer.append("    .fcPlcfendTxt         = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfendTxt()))
            .append(" (").append(getFcPlcfendTxt()).append(" )\n");

        buffer.append("    .lcbPlcfendTxt        = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfendTxt()))
            .append(" (").append(getLcbPlcfendTxt()).append(" )\n");

        buffer.append("    .fcPlcffldEdn         = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcffldEdn()))
            .append(" (").append(getFcPlcffldEdn()).append(" )\n");

        buffer.append("    .lcbPlcffldEdn        = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcffldEdn()))
            .append(" (").append(getLcbPlcffldEdn()).append(" )\n");

        buffer.append("    .fcPlcfpgdEdn         = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfpgdEdn()))
            .append(" (").append(getFcPlcfpgdEdn()).append(" )\n");

        buffer.append("    .lcbPlcfpgdEdn        = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfpgdEdn()))
            .append(" (").append(getLcbPlcfpgdEdn()).append(" )\n");

        buffer.append("    .fcDggInfo            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcDggInfo()))
            .append(" (").append(getFcDggInfo()).append(" )\n");

        buffer.append("    .lcbDggInfo           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbDggInfo()))
            .append(" (").append(getLcbDggInfo()).append(" )\n");

        buffer.append("    .fcSttbfRMark         = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbfRMark()))
            .append(" (").append(getFcSttbfRMark()).append(" )\n");

        buffer.append("    .lcbSttbfRMark        = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbfRMark()))
            .append(" (").append(getLcbSttbfRMark()).append(" )\n");

        buffer.append("    .fcSttbCaption        = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbCaption()))
            .append(" (").append(getFcSttbCaption()).append(" )\n");

        buffer.append("    .lcbSttbCaption       = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbCaption()))
            .append(" (").append(getLcbSttbCaption()).append(" )\n");

        buffer.append("    .fcSttbAutoCaption    = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbAutoCaption()))
            .append(" (").append(getFcSttbAutoCaption()).append(" )\n");

        buffer.append("    .lcbSttbAutoCaption   = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbAutoCaption()))
            .append(" (").append(getLcbSttbAutoCaption()).append(" )\n");

        buffer.append("    .fcPlcfwkb            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfwkb()))
            .append(" (").append(getFcPlcfwkb()).append(" )\n");

        buffer.append("    .lcbPlcfwkb           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfwkb()))
            .append(" (").append(getLcbPlcfwkb()).append(" )\n");

        buffer.append("    .fcPlcfsplfcPlcfspl   = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfsplfcPlcfspl()))
            .append(" (").append(getFcPlcfsplfcPlcfspl()).append(" )\n");

        buffer.append("    .lcbPlcfspl           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfspl()))
            .append(" (").append(getLcbPlcfspl()).append(" )\n");

        buffer.append("    .fcPlcftxbxTxt        = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcftxbxTxt()))
            .append(" (").append(getFcPlcftxbxTxt()).append(" )\n");

        buffer.append("    .lcbPlcftxbxTxt       = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcftxbxTxt()))
            .append(" (").append(getLcbPlcftxbxTxt()).append(" )\n");

        buffer.append("    .fcPlcffldTxbx        = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcffldTxbx()))
            .append(" (").append(getFcPlcffldTxbx()).append(" )\n");

        buffer.append("    .lcbPlcffldTxbx       = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcffldTxbx()))
            .append(" (").append(getLcbPlcffldTxbx()).append(" )\n");

        buffer.append("    .fcPlcfhdrtxbxTxt     = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfhdrtxbxTxt()))
            .append(" (").append(getFcPlcfhdrtxbxTxt()).append(" )\n");

        buffer.append("    .lcbPlcfhdrtxbxTxt    = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfhdrtxbxTxt()))
            .append(" (").append(getLcbPlcfhdrtxbxTxt()).append(" )\n");

        buffer.append("    .fcPlcffldHdrTxbx     = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcffldHdrTxbx()))
            .append(" (").append(getFcPlcffldHdrTxbx()).append(" )\n");

        buffer.append("    .lcbPlcffldHdrTxbx    = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcffldHdrTxbx()))
            .append(" (").append(getLcbPlcffldHdrTxbx()).append(" )\n");

        buffer.append("    .fcStwUser            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcStwUser()))
            .append(" (").append(getFcStwUser()).append(" )\n");

        buffer.append("    .lcbStwUser           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbStwUser()))
            .append(" (").append(getLcbStwUser()).append(" )\n");

        buffer.append("    .fcSttbttmbd          = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbttmbd()))
            .append(" (").append(getFcSttbttmbd()).append(" )\n");

        buffer.append("    .cbSttbttmbd          = ")
            .append("0x")
            .append(HexDump.toHex((int)getCbSttbttmbd()))
            .append(" (").append(getCbSttbttmbd()).append(" )\n");

        buffer.append("    .fcUnused             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcUnused()))
            .append(" (").append(getFcUnused()).append(" )\n");

        buffer.append("    .lcbUnused            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbUnused()))
            .append(" (").append(getLcbUnused()).append(" )\n");

        buffer.append("    .rgpgdbkd             = ")
            .append("0x")
            .append(HexDump.toHex((int)getRgpgdbkd()))
            .append(" (").append(getRgpgdbkd()).append(" )\n");

        buffer.append("    .fcPgdMother          = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPgdMother()))
            .append(" (").append(getFcPgdMother()).append(" )\n");

        buffer.append("    .lcbPgdMother         = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPgdMother()))
            .append(" (").append(getLcbPgdMother()).append(" )\n");

        buffer.append("    .fcBkdMother          = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcBkdMother()))
            .append(" (").append(getFcBkdMother()).append(" )\n");

        buffer.append("    .lcbBkdMother         = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbBkdMother()))
            .append(" (").append(getLcbBkdMother()).append(" )\n");

        buffer.append("    .fcPgdFtn             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPgdFtn()))
            .append(" (").append(getFcPgdFtn()).append(" )\n");

        buffer.append("    .lcbPgdFtn            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPgdFtn()))
            .append(" (").append(getLcbPgdFtn()).append(" )\n");

        buffer.append("    .fcBkdFtn             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcBkdFtn()))
            .append(" (").append(getFcBkdFtn()).append(" )\n");

        buffer.append("    .lcbBkdFtn            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbBkdFtn()))
            .append(" (").append(getLcbBkdFtn()).append(" )\n");

        buffer.append("    .fcPgdEdn             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPgdEdn()))
            .append(" (").append(getFcPgdEdn()).append(" )\n");

        buffer.append("    .lcbPgdEdn            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPgdEdn()))
            .append(" (").append(getLcbPgdEdn()).append(" )\n");

        buffer.append("    .fcBkdEdn             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcBkdEdn()))
            .append(" (").append(getFcBkdEdn()).append(" )\n");

        buffer.append("    .lcbBkdEdn            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbBkdEdn()))
            .append(" (").append(getLcbBkdEdn()).append(" )\n");

        buffer.append("    .fcSttbfIntlFld       = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbfIntlFld()))
            .append(" (").append(getFcSttbfIntlFld()).append(" )\n");

        buffer.append("    .lcbSttbfIntlFld      = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbfIntlFld()))
            .append(" (").append(getLcbSttbfIntlFld()).append(" )\n");

        buffer.append("    .fcRouteSlip          = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcRouteSlip()))
            .append(" (").append(getFcRouteSlip()).append(" )\n");

        buffer.append("    .lcbRouteSlip         = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbRouteSlip()))
            .append(" (").append(getLcbRouteSlip()).append(" )\n");

        buffer.append("    .fcSttbSavedBy        = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbSavedBy()))
            .append(" (").append(getFcSttbSavedBy()).append(" )\n");

        buffer.append("    .lcbSttbSavedBy       = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbSavedBy()))
            .append(" (").append(getLcbSttbSavedBy()).append(" )\n");

        buffer.append("    .fcSttbFnm            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbFnm()))
            .append(" (").append(getFcSttbFnm()).append(" )\n");

        buffer.append("    .lcbSttbFnm           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbFnm()))
            .append(" (").append(getLcbSttbFnm()).append(" )\n");

        buffer.append("    .fcPlcfLst            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfLst()))
            .append(" (").append(getFcPlcfLst()).append(" )\n");

        buffer.append("    .lcbPlcfLst           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfLst()))
            .append(" (").append(getLcbPlcfLst()).append(" )\n");

        buffer.append("    .fcPlfLfo             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlfLfo()))
            .append(" (").append(getFcPlfLfo()).append(" )\n");

        buffer.append("    .lcbPlfLfo            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlfLfo()))
            .append(" (").append(getLcbPlfLfo()).append(" )\n");

        buffer.append("    .fcPlcftxbxBkd        = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcftxbxBkd()))
            .append(" (").append(getFcPlcftxbxBkd()).append(" )\n");

        buffer.append("    .lcbPlcftxbxBkd       = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcftxbxBkd()))
            .append(" (").append(getLcbPlcftxbxBkd()).append(" )\n");

        buffer.append("    .fcPlcftxbxHdrBkd     = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcftxbxHdrBkd()))
            .append(" (").append(getFcPlcftxbxHdrBkd()).append(" )\n");

        buffer.append("    .lcbPlcftxbxHdrBkd    = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcftxbxHdrBkd()))
            .append(" (").append(getLcbPlcftxbxHdrBkd()).append(" )\n");

        buffer.append("    .fcDocUndo            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcDocUndo()))
            .append(" (").append(getFcDocUndo()).append(" )\n");

        buffer.append("    .lcbDocUndo           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbDocUndo()))
            .append(" (").append(getLcbDocUndo()).append(" )\n");

        buffer.append("    .fcRgbuse             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcRgbuse()))
            .append(" (").append(getFcRgbuse()).append(" )\n");

        buffer.append("    .lcbRgbuse            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbRgbuse()))
            .append(" (").append(getLcbRgbuse()).append(" )\n");

        buffer.append("    .fcUsp                = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcUsp()))
            .append(" (").append(getFcUsp()).append(" )\n");

        buffer.append("    .lcbUsp               = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbUsp()))
            .append(" (").append(getLcbUsp()).append(" )\n");

        buffer.append("    .fcUskf               = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcUskf()))
            .append(" (").append(getFcUskf()).append(" )\n");

        buffer.append("    .lcbUskf              = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbUskf()))
            .append(" (").append(getLcbUskf()).append(" )\n");

        buffer.append("    .fcPlcupcRgbuse       = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcupcRgbuse()))
            .append(" (").append(getFcPlcupcRgbuse()).append(" )\n");

        buffer.append("    .lcbPlcupcRgbuse      = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcupcRgbuse()))
            .append(" (").append(getLcbPlcupcRgbuse()).append(" )\n");

        buffer.append("    .fcPlcupcUsp          = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcupcUsp()))
            .append(" (").append(getFcPlcupcUsp()).append(" )\n");

        buffer.append("    .lcbPlcupcUsp         = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcupcUsp()))
            .append(" (").append(getLcbPlcupcUsp()).append(" )\n");

        buffer.append("    .fcSttbGlsyStyle      = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbGlsyStyle()))
            .append(" (").append(getFcSttbGlsyStyle()).append(" )\n");

        buffer.append("    .lcbSttbGlsyStyle     = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbGlsyStyle()))
            .append(" (").append(getLcbSttbGlsyStyle()).append(" )\n");

        buffer.append("    .fcPlgosl             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlgosl()))
            .append(" (").append(getFcPlgosl()).append(" )\n");

        buffer.append("    .lcbPlgosl            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlgosl()))
            .append(" (").append(getLcbPlgosl()).append(" )\n");

        buffer.append("    .fcPlcocx             = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcocx()))
            .append(" (").append(getFcPlcocx()).append(" )\n");

        buffer.append("    .lcbPlcocx            = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcocx()))
            .append(" (").append(getLcbPlcocx()).append(" )\n");

        buffer.append("    .fcPlcfbteLvc         = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfbteLvc()))
            .append(" (").append(getFcPlcfbteLvc()).append(" )\n");

        buffer.append("    .lcbPlcfbteLvc        = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfbteLvc()))
            .append(" (").append(getLcbPlcfbteLvc()).append(" )\n");

        buffer.append("    .ftModified           = ")
            .append("0x")
            .append(HexDump.toHex((int)getFtModified()))
            .append(" (").append(getFtModified()).append(" )\n");

        buffer.append("    .dwLowDateTime        = ")
            .append("0x")
            .append(HexDump.toHex((int)getDwLowDateTime()))
            .append(" (").append(getDwLowDateTime()).append(" )\n");

        buffer.append("    .dwHighDateTime       = ")
            .append("0x")
            .append(HexDump.toHex((int)getDwHighDateTime()))
            .append(" (").append(getDwHighDateTime()).append(" )\n");

        buffer.append("    .fcPlcflvc            = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcflvc()))
            .append(" (").append(getFcPlcflvc()).append(" )\n");

        buffer.append("    .lcbPlcflvc           = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcflvc()))
            .append(" (").append(getLcbPlcflvc()).append(" )\n");

        buffer.append("    .fcPlcasumy           = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcasumy()))
            .append(" (").append(getFcPlcasumy()).append(" )\n");

        buffer.append("    .lcbPlcasumy          = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcasumy()))
            .append(" (").append(getLcbPlcasumy()).append(" )\n");

        buffer.append("    .fcPlcfgram           = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcPlcfgram()))
            .append(" (").append(getFcPlcfgram()).append(" )\n");

        buffer.append("    .lcbPlcfgram          = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbPlcfgram()))
            .append(" (").append(getLcbPlcfgram()).append(" )\n");

        buffer.append("    .fcSttbListNames      = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbListNames()))
            .append(" (").append(getFcSttbListNames()).append(" )\n");

        buffer.append("    .lcbSttbListNames     = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbListNames()))
            .append(" (").append(getLcbSttbListNames()).append(" )\n");

        buffer.append("    .fcSttbfUssr          = ")
            .append("0x")
            .append(HexDump.toHex((int)getFcSttbfUssr()))
            .append(" (").append(getFcSttbfUssr()).append(" )\n");

        buffer.append("    .lcbSttbfUssr         = ")
            .append("0x")
            .append(HexDump.toHex((int)getLcbSttbfUssr()))
            .append(" (").append(getLcbSttbfUssr()).append(" )\n");

        buffer.append("[/FIB]\n");
        return buffer.toString();
    }

