  private int createLVL(byte[] data, int offset, LVL lvl)
  {
    int startingOffset = offset;
    lvl._iStartAt = Utils.convertBytesToInt(data, offset);
    offset += 4;
    lvl._nfc = data[offset++];
    byte code = data[offset++];
    lvl._jc = (byte)(code & 0x03);
    lvl._fLegal = StyleSheet.getFlag(code & 0x04);
    lvl._fNoRestart = StyleSheet.getFlag(code & 0x08);
    lvl._fPrev = StyleSheet.getFlag(code & 0x10);
    lvl._fPrevSpace = StyleSheet.getFlag(code & 0x20);
    lvl._fWord6 = StyleSheet.getFlag(code & 0x40);

    //  rgbxchNums - This array should be zero terminated unless it is full 
    //  (all 9 levels full).
    System.arraycopy(data, offset, lvl._rgbxchNums, 0, 9);
    offset += 9;

    lvl._ixchFollow = data[offset++];

    if (lvl._fWord6)
    {
      lvl._dxaSpace = Utils.convertBytesToInt(data, offset);
      lvl._dxaIndent = Utils.convertBytesToInt(data, offset + 4);
    }
    offset += 8;

    int chpxSize = data[offset++];
    int papxSize = data[offset++];
    lvl._chpx = new byte[chpxSize];
    lvl._papx = new byte[papxSize];

    System.arraycopy(data, offset, lvl._chpx, 0, chpxSize);
    System.arraycopy(data, offset + chpxSize, lvl._papx, 0, papxSize);

    offset += papxSize + chpxSize + 2;  //don't forget to skip reserved word
    int xstSize = Utils.convertBytesToShort(data, offset);
    offset += 2;
    lvl._xst = new char[xstSize];

    for(int x = 0; x < xstSize; x++)
    {
      lvl._xst[x] = (char)Utils.convertBytesToShort(data, offset + (x * 2));
    }
    return offset + (xstSize * 2) - startingOffset;
  }

