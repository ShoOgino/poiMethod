        private Object nextElement() {
            if (currentNode.isLeaf()) {
                if (index < currentNode._nrElements) return currentNode._entries[index++].element;

                else if (!parentIndex.empty()) { //All elements have been returned, return successor of lastReturned if it exists
                    currentNode = currentNode._parent;
                    index = ((Integer)parentIndex.pop()).intValue();

                    while (index == currentNode._nrElements) {
                        if (parentIndex.empty()) break;
                        currentNode = currentNode._parent;
                        index = ((Integer)parentIndex.pop()).intValue();
                    }

                    if (index == currentNode._nrElements) return null; //Reached root and he has no more children
                    return currentNode._entries[index++].element;
                }

                else { //Your a leaf and the root
                    if (index == currentNode._nrElements) return null;
                    return currentNode._entries[index++].element;
                }
            }

            // else - You're not a leaf so simply find and return the successor of lastReturned
            currentNode = currentNode._entries[index].child;
            parentIndex.push(Integer.valueOf(index));

            while (currentNode._entries[0].child != null) {
                currentNode = currentNode._entries[0].child;
                parentIndex.push(Integer.valueOf(0));
            }

            index = 1;
            return currentNode._entries[0].element;
        }

