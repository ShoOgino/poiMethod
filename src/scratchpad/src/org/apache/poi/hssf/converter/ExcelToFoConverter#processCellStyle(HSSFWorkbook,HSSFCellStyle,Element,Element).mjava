    protected void processCellStyle( HSSFWorkbook workbook,
            HSSFCellStyle cellStyle, Element cellTarget, Element blockTarget )
    {
        blockTarget.setAttribute( "white-space-collapse", "false" );
        {
            String textAlign = ExcelToFoUtils.getAlign( cellStyle
                    .getAlignment() );
            if ( ExcelToFoUtils.isNotEmpty( textAlign ) )
                blockTarget.setAttribute( "text-align", textAlign );
        }

        if ( cellStyle.getFillPattern() == 0 )
        {
            // no fill
        }
        else if ( cellStyle.getFillPattern() == 1 )
        {
            final HSSFColor foregroundColor = cellStyle
                    .getFillForegroundColorColor();
            if ( foregroundColor != null )
                cellTarget.setAttribute( "background-color",
                        ExcelToFoUtils.getColor( foregroundColor ) );
        }
        else
        {
            final HSSFColor backgroundColor = cellStyle
                    .getFillBackgroundColorColor();
            if ( backgroundColor != null )
                cellTarget.setAttribute( "background-color",
                        ExcelToHtmlUtils.getColor( backgroundColor ) );
        }

        processCellStyleBorder( workbook, cellTarget, "top",
                cellStyle.getBorderTopEnum(), cellStyle.getTopBorderColor() );
        processCellStyleBorder( workbook, cellTarget, "right",
                cellStyle.getBorderRightEnum(), cellStyle.getRightBorderColor() );
        processCellStyleBorder( workbook, cellTarget, "bottom",
                cellStyle.getBorderBottomEnum(), cellStyle.getBottomBorderColor() );
        processCellStyleBorder( workbook, cellTarget, "left",
                cellStyle.getBorderLeftEnum(), cellStyle.getLeftBorderColor() );

        HSSFFont font = cellStyle.getFont( workbook );
        processCellStyleFont( workbook, blockTarget, font );

    }

