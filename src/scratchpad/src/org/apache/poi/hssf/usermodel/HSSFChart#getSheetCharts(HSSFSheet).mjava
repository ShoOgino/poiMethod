	/**
	 * Returns all the charts for the given sheet.
	 *
	 * NOTE: You won't be able to do very much with
	 *  these charts yet, as this is very limited support
	 */
	public static HSSFChart[] getSheetCharts(HSSFSheet sheet) {
		List charts = new ArrayList();
		HSSFChart lastChart = null;

		// Find records of interest
		List records = sheet.getSheet().getRecords();
		for(Iterator it = records.iterator(); it.hasNext();) {
			RecordBase r = (RecordBase)it.next();

			if(r instanceof ChartRecord) {
				lastChart = new HSSFChart((ChartRecord)r);
				charts.add(lastChart);
			}
			if(r instanceof LegendRecord) {
				lastChart.legendRecord = (LegendRecord)r;
			}
			if(r instanceof SeriesRecord) {
				HSSFSeries series = lastChart.new HSSFSeries( (SeriesRecord)r );
				lastChart.series.add(series);
			}
			if(r instanceof ChartTitleFormatRecord) {
				lastChart.chartTitleFormat =
					(ChartTitleFormatRecord)r;
			}
			if(r instanceof SeriesTextRecord) {
				// Applies to a series, unless we've seen
				//  a legend already
				SeriesTextRecord str = (SeriesTextRecord)r;
				if(lastChart.legendRecord == null &&
						lastChart.series.size() > 0) {
					HSSFSeries series = (HSSFSeries)
						lastChart.series.get(lastChart.series.size()-1);
					series.seriesTitleText = str;
				} else {
					lastChart.chartTitleText = str;
				}
			}
		}

		return (HSSFChart[])
			charts.toArray( new HSSFChart[charts.size()] );
	}

