	/**
	 * returns the OperationEval concrete impl instance corresponding
	 * to the supplied operationPtg
	 */
	public static OperationEval create(OperationPtg ptg) {
		if(ptg == null) {
			throw new IllegalArgumentException("ptg must not be null");
		}
		
		Class ptgClass = ptg.getClass();
		
		Constructor constructor = (Constructor) _constructorsByPtgClass.get(ptgClass);
		if(constructor == null) {
			if(ptgClass == ExpPtg.class) {
				// ExpPtg is used for array formulas and shared formulas.
				// it is currently unsupported, and may not even get implemented here
				throw new RuntimeException("ExpPtg currently not supported");
			}
			throw new RuntimeException("Unexpected operation ptg class (" + ptgClass.getName() + ")");
		}
		
		Object result;
		Object[] initargs = { ptg };
		try {
			result = constructor.newInstance(initargs);
		} catch (IllegalArgumentException e) {
			throw new RuntimeException(e);
		} catch (InstantiationException e) {
			throw new RuntimeException(e);
		} catch (IllegalAccessException e) {
			throw new RuntimeException(e);
		} catch (InvocationTargetException e) {
			throw new RuntimeException(e);
		}
		return (OperationEval) result;
	}

