	/**
	 * The second argument (table_array) should be an area ref, but can actually be a cell ref, in
	 * which case it is interpreted as a 1x1 area ref.  Other scalar values cause #VALUE! error.
	 */
	public static AreaEval resolveTableArrayArg(Eval eval) throws EvaluationException {
		if (eval instanceof AreaEval) {
			return (AreaEval) eval;
		}
		
		if(eval instanceof RefEval) {
			RefEval refEval = (RefEval) eval;
			// Make this cell ref look like a 1x1 area ref.
			
			// It doesn't matter if eval is a 2D or 3D ref, because that detail is never asked of AreaEval.
			// This code only requires the value array item. 
			// anything would be ok for rowIx and colIx, but may as well get it right.
			short rowIx = refEval.getRow();
			short colIx = refEval.getColumn();
			AreaPtg ap = new AreaPtg(rowIx, rowIx, colIx, colIx, false, false, false, false);
			ValueEval value = refEval.getInnerValueEval();
			return new Area2DEval(ap, new ValueEval[] { value, });
		}
		throw EvaluationException.invalidValue();
	}

