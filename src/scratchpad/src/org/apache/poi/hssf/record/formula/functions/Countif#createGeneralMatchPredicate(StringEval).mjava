	/**
	 * When the second argument is a string, many things are possible
	 */
	private static I_MatchPredicate createGeneralMatchPredicate(StringEval stringEval) {
		String value = stringEval.getStringValue();
		char firstChar = value.charAt(0);
		Boolean booleanVal = parseBoolean(value);
		if(booleanVal != null) {
			return new BooleanMatcher(booleanVal.booleanValue());
		}
		
		Double doubleVal = parseDouble(value);
		if(doubleVal != null) {
			return new NumberMatcher(doubleVal.doubleValue());
		}
		switch(firstChar) {
			case '>':
			case '<':
			case '=':
				throw new RuntimeException("Incomplete code - criteria expressions such as '"
						+ value + "' not supported yet");
		}
		
		//else - just a plain string with no interpretation.
		return new StringMatcher(value);
	}

