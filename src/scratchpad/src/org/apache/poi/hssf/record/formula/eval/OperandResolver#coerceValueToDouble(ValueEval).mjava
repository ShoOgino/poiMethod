	/**
	 * Applies some conversion rules if the supplied value is not already a number.
	 * Note - <tt>BlankEval</tt> is not supported and must be handled by the caller. 
	 * @param ev must be a <tt>NumberEval</tt>, <tt>StringEval</tt> or <tt>BoolEval</tt>
	 * @return actual, parsed or interpreted double value (respectively).
	 * @throws EvaluationException(#VALUE!) only if a StringEval is supplied and cannot be parsed
	 * as a double (See <tt>parseDouble()</tt> for allowable formats).
	 * @throws RuntimeException if the supplied parameter is not <tt>NumberEval</tt>,
	 *  <tt>StringEval</tt> or <tt>BoolEval</tt>
	 */
	public static double coerceValueToDouble(ValueEval ev) throws EvaluationException {

	    if (ev instanceof NumericValueEval) {
	    	// this also handles booleans
	    	return ((NumericValueEval)ev).getNumberValue();
	    }
	    if (ev instanceof StringEval) {
	    	Double dd = parseDouble(((StringEval) ev).getStringValue());
	    	if (dd == null) {
	    		throw EvaluationException.invalidValue();
	    	}
	    	return dd.doubleValue();
		}
		throw new RuntimeException("Unexpected arg eval type (" + ev.getClass().getName() + ")");
	}

