	/**
	 * Removes leading and trailing spaces from value if evaluated 
	 *  operand value is string.
	 * Returns StringEval only if evaluated operand is of type string 
	 *  (and is not blank or null) or number. If evaluated operand is 
	 *  of type string and is blank or null, or if evaluated operand is 
	 *  of type blank, returns BlankEval.  Otherwise returns ErrorEval.
	 * 
	 * @see org.apache.poi.hssf.record.formula.eval.Eval
	 */
    public Eval evaluate(Eval[] operands, int srcCellRow, short srcCellCol) {
    	Eval retval = ErrorEval.VALUE_INVALID;
        String str = null;
        
        switch (operands.length) {
	        default:
	            break;
	        case 1:
	            ValueEval veval = singleOperandEvaluate(operands[0], srcCellRow, srcCellCol);
	            if (veval instanceof StringValueEval) {
	                StringValueEval sve = (StringValueEval) veval;
	                str = sve.getStringValue();
	                if (str == null || str.trim().equals("")) {
	                	return BlankEval.INSTANCE;
	                }
	            }
	            else if (veval instanceof NumberEval) {
	                NumberEval neval = (NumberEval) veval;
	                str = neval.getStringValue();
	            } 
	            else if (veval instanceof BlankEval) {
	            	return BlankEval.INSTANCE;
	            }
	    }
	        
        if (str != null) {
            retval = new StringEval(str.trim());
        } 
        return retval;
    }

