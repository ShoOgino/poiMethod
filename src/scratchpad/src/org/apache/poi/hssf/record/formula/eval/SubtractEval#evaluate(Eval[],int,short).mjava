    public Eval evaluate(Eval[] args, int srcRow, short srcCol) {
    	if(args.length != 2) {
    		return ErrorEval.VALUE_INVALID;
    	}
        Eval retval = null;
        double d0 = 0;
        double d1 = 0;
        ValueEval ve = singleOperandEvaluate(args[0], srcRow, srcCol);
        if (ve instanceof NumericValueEval) {
            d0 = ((NumericValueEval) ve).getNumberValue();
        }
        else if (ve instanceof BlankEval) {
            // do nothing
        }
        else {
            retval = ErrorEval.VALUE_INVALID;
        }
        
        if (retval == null) { // no error yet
            ve = singleOperandEvaluate(args[1], srcRow, srcCol);
            if (ve instanceof NumericValueEval) {
                d1 = ((NumericValueEval) ve).getNumberValue();
            }
            else if (ve instanceof BlankEval) {
                // do nothing
            }
            else {
                retval = ErrorEval.VALUE_INVALID;
            }
        }
 
        if (retval == null) {
            retval = (Double.isNaN(d0) || Double.isNaN(d1)) 
                    ? (ValueEval) ErrorEval.VALUE_INVALID 
                    : new NumberEval(d0 - d1);
        }
        return retval;
    }

