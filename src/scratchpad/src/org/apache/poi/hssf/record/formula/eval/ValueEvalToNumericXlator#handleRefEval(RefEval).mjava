    /**
     * uses the relevant flags to decode the supplied RefVal
     * @param eval
     * @return
     */
    private ValueEval handleRefEval(RefEval reval) {
        ValueEval retval = null;
        ValueEval eval = (ValueEval) reval.getInnerValueEval();
        
        // most common case - least worries :)
        if (eval instanceof NumberEval) {
            retval = (NumberEval) eval; // the cast is correct :)
        }
        
        // booleval
        else if (((flags | REF_BOOL_IS_PARSED) > 0) && eval instanceof BoolEval) {
            retval = (NumericValueEval) eval;
        } 
        
        // stringeval 
        else if (eval instanceof StringEval) {
            retval = handleRefStringEval((StringEval) eval);
        }
        
        //blankeval
        else if (eval instanceof BlankEval) {
            retval = eval;
        }
        
        // erroreval
        else if (eval instanceof ErrorEval) {
            retval = eval;
        }
        
        // probably AreaEval or another RefEval? then not acceptable.
        else {
            throw new RuntimeException("Invalid ValueEval type passed for conversion: " + eval.getClass());
        }
        return retval;
    }

