	/**
	 * Returns a specific number of characters from a text string, 
	 * starting at the position you specify, based on the number 
	 * of characters you specify.
	 * 
	 * @see org.apache.poi.hssf.record.formula.eval.Eval
	 */
    public Eval evaluate(Eval[] operands, int srcCellRow, short srcCellCol) {		
    	Eval retval = null;
        String str = null;
        int startNum = 0;
        int numChars = 0;
        
        switch (operands.length) {
	        default:
	            retval = ErrorEval.VALUE_INVALID;
	        case 3:
	        	// first operand is text string containing characters to extract
	            // second operand is position of first character to extract
	            // third operand is the number of characters to return
	            ValueEval firstveval = singleOperandEvaluate(operands[0], srcCellRow, srcCellCol);
	            ValueEval secondveval = singleOperandEvaluate(operands[1], srcCellRow, srcCellCol);
	            ValueEval thirdveval = singleOperandEvaluate(operands[2], srcCellRow, srcCellCol);
	            if (firstveval instanceof StringValueEval
	            	&& secondveval instanceof NumericValueEval
	            	&& thirdveval instanceof NumericValueEval) {
	            	
	                StringValueEval strEval = (StringValueEval) firstveval;
	                str = strEval.getStringValue();
	                
	                NumericValueEval startNumEval = (NumericValueEval) secondveval;
	                // NOTE: it is safe to cast to int here
	                // because in Excel =MID("test", 1, 1.7) returns t 
	                // so 1.7 must be truncated to 1
	                // and =MID("test", 1.9, 2) returns te 
	                // so 1.9 must be truncated to 1
	                startNum = (int) startNumEval.getNumberValue();
	                
	                NumericValueEval numCharsEval = (NumericValueEval) thirdveval;
	                numChars = (int) numCharsEval.getNumberValue();
	                
	            } else {
	            	retval = ErrorEval.VALUE_INVALID;
	            }
	    }
	        
        if (retval == null) {
			if (startNum < 1 || numChars < 0) {
				retval = ErrorEval.VALUE_INVALID;
			} else if (startNum > str.length() || numChars == 0) {
				retval = BlankEval.INSTANCE;
			} else if (startNum + numChars > str.length()) {
				retval = new StringEval(str.substring(startNum - 1));
			} else {
				retval = new StringEval(str.substring(startNum - 1, (numChars + startNum - 1)));
			} 
        } 
		return retval;
    }

