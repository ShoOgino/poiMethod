    /**
     * Returns a double array that contains values for the numeric cells
     * from among the list of operands. Blanks and Blank equivalent cells
     * are ignored. Error operands or cells containing operands of type
     * that are considered invalid and would result in #VALUE! error in 
     * excel cause this function to return null.
     * 
     * @param operands
     * @param srcRow
     * @param srcCol
     */
    protected double[] getNumberArray(Eval[] operands, int srcRow, short srcCol) {
        double[] retval = new double[30];
        int count = 0;
        
        outer: do { // goto simulator loop
            if (operands.length > getMaxNumOperands()) {
                break outer;
            }
            else {
                for (int i=0, iSize=operands.length; i<iSize; i++) {
                    double[] temp = getNumberArray(operands[i], srcRow, srcCol);
                    if (temp == null) {
                        retval = null; // error occurred.
                        break;
                    }
                    retval = putInArray(retval, count, temp);
                    count += temp.length;
                }
            }
        } while (false); // end goto simulator loop
        
        if (retval != null) {
            double[] temp = retval;
            retval = new double[count];
            System.arraycopy(temp, 0, retval, 0, count);
        }
        
        return retval;
    }

