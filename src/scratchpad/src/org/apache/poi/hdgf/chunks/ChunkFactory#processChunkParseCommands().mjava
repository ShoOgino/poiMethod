	/** 
	 * Open chunks_parse_cmds.tbl and process it, to get the definitions
	 *  of all the different possible chunk commands. 
	 */
	private void processChunkParseCommands() throws IOException {
		String line;
		InputStream cpd = ChunkFactory.class.getResourceAsStream(chunkTableName);
		BufferedReader inp = new BufferedReader(new InputStreamReader(cpd));
		while( (line = inp.readLine()) != null ) {
			if(line.startsWith("#")) continue;
			if(line.startsWith(" ")) continue;
			if(line.startsWith("\t")) continue;
			if(line.length() == 0) continue;

			// Start xxx
			if(!line.startsWith("start")) {
				throw new IllegalStateException("Expecting start xxx, found " + line);
			}
			int chunkType = Integer.parseInt(line.substring(6));
			ArrayList defsL = new ArrayList();
			
			// Data entries
			while( ! (line = inp.readLine()).startsWith("end") ) {
				StringTokenizer st = new StringTokenizer(line, " ");
				int defType = Integer.parseInt(st.nextToken());
				int offset = Integer.parseInt(st.nextToken());
				String name = st.nextToken("\uffff").substring(1);
				
				CommandDefinition def = new CommandDefinition(defType,offset,name);
				defsL.add(def);
			}
			
			CommandDefinition[] defs = (CommandDefinition[])
				defsL.toArray(new CommandDefinition[defsL.size()]);
			
			// Add to the hashtable
			chunkCommandDefinitions.put(new Integer(chunkType), defs);
		}
		inp.close();
		cpd.close();
	}

