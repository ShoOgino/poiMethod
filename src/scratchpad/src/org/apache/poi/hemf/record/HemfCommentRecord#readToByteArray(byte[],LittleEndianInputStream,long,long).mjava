    //this prepends the initial "int" which turned out NOT to be
    //a signifier of emfplus, spool, public.
    private byte[] readToByteArray(byte[] initialBytes, LittleEndianInputStream leis,
                                   long remainingDataSize, long remainingRecordSize) throws IOException {
        if (remainingDataSize > Integer.MAX_VALUE) {
            throw new RecordFormatException("Data size can't be > Integer.MAX_VALUE");
        }

        if (remainingRecordSize > Integer.MAX_VALUE) {
            throw new RecordFormatException("Record size can't be > Integer.MAX_VALUE");
        }
        if (remainingRecordSize == 0) {
            return new byte[0];
        }

        int dataSize = (int)remainingDataSize;
        int recordSize = (int)remainingRecordSize;
        byte[] arr = IOUtils.safelyAllocate(dataSize+initialBytes.length, MAX_RECORD_LENGTH);
        System.arraycopy(initialBytes,0,arr, 0, initialBytes.length);
        long read = IOUtils.readFully(leis, arr, initialBytes.length, dataSize);
        if (read != dataSize) {
            throw new RecordFormatException("InputStream ended before full record could be read");
        }
        long toSkip = recordSize-dataSize;
        long skipped = IOUtils.skipFully(leis, toSkip);
        if (toSkip != skipped) {
            throw new RecordFormatException("InputStream ended before full record could be read");
        }

        return arr;
    }

