	/**
	 * Processes an iterator returned by a POIFS call to getRoot().getEntries()
	 * @param iter
	 * @return
	 * @throws IOException
	 */
	private HashMap processPOIIterator(Iterator iter) throws IOException {
		HashMap currentNode = new HashMap();

		while(iter.hasNext()) {
			Object obj = iter.next();
			if(obj instanceof DocumentNode) {
				this.processDocumentNode((DocumentNode)obj, currentNode);
			} else if(obj instanceof DirectoryNode) {
				String blockName = ((DirectoryNode)obj).getName();
				Iterator viewIt = null;
				if( ((DirectoryNode)obj).preferArray()) {
					Object[] arr = ((DirectoryNode)obj).getViewableArray();
					ArrayList viewList = new ArrayList(arr.length);

					for(int i = 0; i < arr.length; i++) {
						viewList.add(arr[i]);
					}
					viewIt = viewList.iterator();
				} else {
						viewIt = ((DirectoryNode)obj).getViewableIterator();
				}
				//store the next node on the hashmap
				currentNode.put(blockName, processPOIIterator(viewIt));
			} else if(obj instanceof DirectoryProperty) {
				//don't do anything with the directory property chunk...
			} else {
					System.err.println("Unknown node: " + obj.toString());
			}
		}
		return currentNode;
	}

