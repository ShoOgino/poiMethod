    protected void setPlaceholder(Placeholder placeholder) {
        EscherSpRecord spRecord = _escherContainer.getChildById(EscherSpRecord.RECORD_ID);
        int flags = spRecord.getFlags();
        flags |= EscherSpRecord.FLAG_HAVEANCHOR | EscherSpRecord.FLAG_HAVEMASTER;
        spRecord.setFlags(flags);

        EscherClientDataRecord cldata = _escherContainer.getChildById(EscherClientDataRecord.RECORD_ID);
        if (cldata == null) {
            cldata = new EscherClientDataRecord();
            // append placeholder container before EscherTextboxRecord
            _escherContainer.addChildBefore(cldata, EscherTextboxRecord.RECORD_ID);
        }
        cldata.setOptions((short)15);

        AbstractEscherOptRecord opt = getEscherOptRecord();

        // Placeholders can't be grouped
        setEscherProperty(opt, EscherProperties.PROTECTION__LOCKAGAINSTGROUPING, 262144);

        // OEPlaceholderAtom tells powerpoint that this shape is a placeholder
        OEPlaceholderAtom oep = new OEPlaceholderAtom();

        /**
         * Extarct from MSDN:
         *
         * There is a special case when the placeholder does not have a position in the layout.
         * This occurs when the user has moved the placeholder from its original position.
         * In this case the placeholder ID is -1.
         */
        oep.setPlacementId(-1);

        boolean isMaster = (getSheet() instanceof HSLFSlideMaster);
        boolean isNotes = (getSheet() instanceof HSLFNotes);
        byte phId;
        switch (placeholder) {
            case TITLE:
                phId = (isMaster) ? OEPlaceholderAtom.MasterTitle : OEPlaceholderAtom.Title;
                break;
            case BODY:
                phId = (isMaster) ? OEPlaceholderAtom.MasterBody :
                    ((isNotes) ? OEPlaceholderAtom.NotesBody : OEPlaceholderAtom.Body);
                break;
            case CENTERED_TITLE:
                phId = (isMaster) ? OEPlaceholderAtom.MasterCenteredTitle : OEPlaceholderAtom.CenteredTitle;
                break;
            case SUBTITLE:
                phId = (isMaster) ? OEPlaceholderAtom.MasterSubTitle : OEPlaceholderAtom.Subtitle;
                break;
            case DATETIME:
                phId = OEPlaceholderAtom.MasterDate;
                break;
            case SLIDE_NUMBER:
                phId = OEPlaceholderAtom.MasterSlideNumber;
                break;
            case FOOTER:
                phId = OEPlaceholderAtom.MasterFooter;
                break;
            case HEADER:
                phId = OEPlaceholderAtom.MasterHeader;
                break;
            case DGM:
            case CHART:
                phId = OEPlaceholderAtom.Graph;
                break;
            case TABLE:
                phId = OEPlaceholderAtom.Table;
                break;
            case PICTURE:
            case CLIP_ART:
                phId = OEPlaceholderAtom.ClipArt;
                break;
            case MEDIA:
                phId = OEPlaceholderAtom.MediaClip;
                break;
            case SLIDE_IMAGE:
                phId = (isMaster) ? OEPlaceholderAtom.MasterNotesSlideImage : OEPlaceholderAtom.NotesSlideImage;
                break;
            default:
            case CONTENT:
                phId = OEPlaceholderAtom.Object;
                break;
        }
        oep.setPlaceholderId(phId);

        //convert hslf into ddf record
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        try {
            oep.writeOut(out);
        } catch(Exception e){
            throw new HSLFException(e);
        }
        cldata.setRemainingData(out.toByteArray());
    }

