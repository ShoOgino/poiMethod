    protected int addPersistentObject(PositionDependentRecord slideRecord) {
		int slideRecordPos = _hslfSlideShow.appendRootLevelRecord((Record)slideRecord);
		_records = _hslfSlideShow.getRecords();

		// Add the new Slide into the PersistPtr stuff
		int offset = 0;
		int slideOffset = 0;
		PersistPtrHolder ptr = null;
		UserEditAtom usr = null;
		int i = 0;
		for (Record record : _records) {
            // Grab interesting records as they come past
			int recordType = (int)record.getRecordType();
            if (recordType == RecordTypes.PersistPtrIncrementalBlock.typeID) {
                ptr = (PersistPtrHolder)record;
            }
            if (recordType == RecordTypes.UserEditAtom.typeID) {
                usr = (UserEditAtom)record;
            }

			if (i++ == slideRecordPos) {
				slideOffset = offset;
			}
			
			try {
				ByteArrayOutputStream out = new ByteArrayOutputStream();
				record.writeOut(out);
				offset += out.size();
			} catch (IOException e) {
				throw new HSLFException(e);
			}
		}

		// persist ID is UserEditAtom.maxPersistWritten + 1
		int psrId = usr.getMaxPersistWritten() + 1;

		// Last view is now of the slide
		usr.setLastViewType((short) UserEditAtom.LAST_VIEW_SLIDE_VIEW);
		// increment the number of persistent objects
		usr.setMaxPersistWritten(psrId);

		// Add the new slide into the last PersistPtr
		// (Also need to tell it where it is)
		slideRecord.setLastOnDiskOffset(slideOffset);
		ptr.addSlideLookup(psrId, slideOffset);
		logger.log(POILogger.INFO, "New slide/object ended up at " + slideOffset);

		return psrId;
    }

