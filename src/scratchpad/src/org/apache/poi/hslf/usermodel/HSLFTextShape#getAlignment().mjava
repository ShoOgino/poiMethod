    /**
     * Returns the type of vertical alignment for the text.
     * One of the <code>Anchor*</code> constants defined in this class.
     *
     * @return the type of alignment
     */
    /* package */ int getAlignment(){
        AbstractEscherOptRecord opt = getEscherOptRecord();
        EscherSimpleProperty prop = getEscherProperty(opt, EscherProperties.TEXT__ANCHORTEXT);
        int align = HSLFTextShape.AnchorTop;
        if (prop == null){
            /**
             * If vertical alignment was not found in the shape properties then try to
             * fetch the master shape and search for the align property there.
             */
            int type = getRunType();
            if(getSheet() != null && getSheet().getMasterSheet() != null){
                HSLFMasterSheet master = getSheet().getMasterSheet();
                HSLFTextShape masterShape = master.getPlaceholderByTextType(type);
                if(masterShape != null) align = masterShape.getAlignment();
            } else {
                //not found in the master sheet. Use the hardcoded defaults.
                switch (type){
                     case org.apache.poi.hslf.record.TextHeaderAtom.TITLE_TYPE:
                     case org.apache.poi.hslf.record.TextHeaderAtom.CENTER_TITLE_TYPE:
                         align = HSLFTextShape.AnchorMiddle;
                         break;
                     default:
                         align = HSLFTextShape.AnchorTop;
                         break;
                 }
            }
        } else {
            align = prop.getPropertyValue();
        }

        alignToBaseline = (align == AnchorBottomBaseline || align == AnchorBottomCenteredBaseline
            || align == AnchorTopBaseline || align == AnchorTopCenteredBaseline);

        return align;
    }

