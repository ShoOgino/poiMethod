    public void writeOut(OutputStream out) throws IOException {
        ByteArrayOutputStream bout = new ByteArrayOutputStream();
        Iterator<EscherRecord> iter = dggContainer.getChildIterator();
        while (iter.hasNext()) {
        	EscherRecord r = iter.next();
            if (r.getRecordId() == EscherContainerRecord.BSTORE_CONTAINER){
                EscherContainerRecord bstore = (EscherContainerRecord)r;

                ByteArrayOutputStream b2 = new ByteArrayOutputStream();
                for (Iterator<EscherRecord> it= bstore.getChildIterator(); it.hasNext();) {
                    EscherBSERecord bse = (EscherBSERecord)it.next();
                    byte[] b = new byte[36+8];
                    bse.serialize(0, b);
                    b2.write(b);
                }
                byte[] bstorehead = new byte[8];
                LittleEndian.putShort(bstorehead, 0, bstore.getOptions());
                LittleEndian.putShort(bstorehead, 2, bstore.getRecordId());
                LittleEndian.putInt(bstorehead, 4, b2.size());
                bout.write(bstorehead);
                bout.write(b2.toByteArray());

            } else {
                bout.write(r.serialize());
            }
        }
        int size = bout.size();

        // Update the size (header bytes 5-8)
        LittleEndian.putInt(_header,4,size+8);

        // Write out our header
        out.write(_header);

        byte[] dgghead = new byte[8];
        LittleEndian.putShort(dgghead, 0, dggContainer.getOptions());
        LittleEndian.putShort(dgghead, 2, dggContainer.getRecordId());
        LittleEndian.putInt(dgghead, 4, size);
        out.write(dgghead);

        // Finally, write out the children
        out.write(bout.toByteArray());

    }

