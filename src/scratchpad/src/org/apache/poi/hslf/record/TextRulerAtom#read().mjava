    /**
     * Read the record bytes and initialize the internal variables
     */
    private void read(){
        int pos = 0;
        short mask = LittleEndian.getShort(_data);  pos += 4;
        short val;
        int[] bits = {1, 0, 2, 3, 8, 4, 9, 5, 10, 6, 11, 7, 12};
        for (int i = 0; i < bits.length; i++) {
            if((mask & 1 << bits[i]) != 0){
                switch (bits[i]){
                    case 0:
                        //defaultTabSize
                        defaultTabSize = LittleEndian.getShort(_data, pos); pos += 2;
                        break;
                    case 1:
                        //numLevels
                        numLevels = LittleEndian.getShort(_data, pos); pos += 2;
                        break;
                    case 2:
                        //tabStops
                        val = LittleEndian.getShort(_data, pos); pos += 2;
                        tabStops = new int[val*2];
                        for (int j = 0; j < tabStops.length; j++) {
                            tabStops[j] = LittleEndian.getUShort(_data, pos); pos += 2;
                        }
                        break;
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                        //bullet.offset
                        val = LittleEndian.getShort(_data, pos); pos += 2;
                        bulletOffsets[bits[i]-3] = val;
                        break;
                    case 8:
                    case 9:
                    case 10:
                    case 11:
                    case 12:
                        //text.offset
                        val = LittleEndian.getShort(_data, pos); pos += 2;
                        textOffsets[bits[i]-8] = val;
                        break;
                }
            }
        }
    }

