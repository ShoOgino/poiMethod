	/**
     * Dump the record content into <code>StringBuffer</code>
     *
     * @return the string representation of the record data
     */
    public String toString(){
        StringBuffer out = new StringBuffer();
        
	    out.append("StyleTextPropAtom:\n");
        if (!initialised) {
	        out.append("Uninitialised, dumping Raw Style Data\n");
        } else {
        
	        out.append("Paragraph properties\n");
	        
	        for (Iterator it1 = getParagraphStyles().iterator(); it1.hasNext();) {
	            TextPropCollection pr = (TextPropCollection)it1.next();
	            out.append("  chars covered: " + pr.getCharactersCovered());
	            out.append("  special mask flags: 0x" + HexDump.toHex(pr.getSpecialMask()) + "\n");
	            for (Iterator it2 = pr.getTextPropList().iterator(); it2.hasNext(); ) {
	                TextProp p = (TextProp)it2.next();
	                out.append("    " + p.getName() + " = " + p.getValue() );
	                out.append(" (0x" + HexDump.toHex(p.getValue()) + ")\n");
	            }
	            
	            out.append("  para bytes that would be written: \n");
	            
	            try {
					ByteArrayOutputStream baos = new ByteArrayOutputStream();
					pr.writeOut(baos);
					byte[] b = baos.toByteArray();
					out.append(HexDump.dump(b, 0, 0));
	            } catch (Exception e ) {
	            	e.printStackTrace();
	            }
	        }
	
	        out.append("Character properties\n");
	        for (Iterator it1 = getCharacterStyles().iterator(); it1.hasNext();) {
	            TextPropCollection pr = (TextPropCollection)it1.next();
	            out.append("  chars covered: " + pr.getCharactersCovered() );
	            out.append("  special mask flags: 0x" + HexDump.toHex(pr.getSpecialMask()) + "\n");
	            for (Iterator it2 = pr.getTextPropList().iterator(); it2.hasNext(); ) {
	                TextProp p = (TextProp)it2.next();
	                out.append("    " + p.getName() + " = " + p.getValue() );
	                out.append(" (0x" + HexDump.toHex(p.getValue()) + ")\n");
	            }
	            
	            out.append("  char bytes that would be written: \n");
	            
	            try {
					ByteArrayOutputStream baos = new ByteArrayOutputStream();
					pr.writeOut(baos);
					byte[] b = baos.toByteArray();
					out.append(HexDump.dump(b, 0, 0));
	            } catch (Exception e ) {
	            	e.printStackTrace();
	            }
	        }
        }
        	
        out.append("  original byte stream \n");
		out.append( HexDump.dump(rawContents, 0, 0) );

        return out.toString();
    }

