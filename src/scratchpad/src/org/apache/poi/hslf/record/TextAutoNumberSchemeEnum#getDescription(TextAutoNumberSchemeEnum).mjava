	public static String getDescription(final TextAutoNumberSchemeEnum code) {
		switch (code) {
		case ANM_AlphaLcPeriod			: return "Lowercase Latin character followed by a period. Example: a., b., c., ...";
		case ANM_AlphaUcPeriod 			: return "Uppercase Latin character followed by a period. Example: A., B., C., ...";
		case ANM_ArabicParenRight		: return "Arabic numeral followed by a closing parenthesis. Example: 1), 2), 3), ...";
		case ANM_ArabicPeriod			: return "Arabic numeral followed by a period. Example: 1., 2., 3., ...";
		case ANM_RomanLcParenBoth		: return "Lowercase Roman numeral enclosed in parentheses. Example: (i), (ii), (iii), ...";            
		case ANM_RomanLcParenRight		: return "Lowercase Roman numeral followed by a closing parenthesis. Example: i), ii), iii), ...";     
		case ANM_RomanLcPeriod			: return "Lowercase Roman numeral followed by a period. Example: i., ii., iii., ...";
		case ANM_RomanUcPeriod			: return "Uppercase Roman numeral followed by a period. Example: I., II., III., ...";
		case ANM_AlphaLcParenBoth		: return "Lowercase alphabetic character enclosed in parentheses. Example: (a), (b), (c), ...";
		case ANM_AlphaLcParenRight		: return "Lowercase alphabetic character followed by a closing parenthesis. Example: a), b), c), ...";
		case ANM_AlphaUcParenBoth		: return "Uppercase alphabetic character enclosed in parentheses. Example: (A), (B), (C), ...";
		case ANM_AlphaUcParenRight		: return "Uppercase alphabetic character followed by a closing parenthesis. Example: A), B), C), ..."; 
		case ANM_ArabicParenBoth		: return "Arabic numeral enclosed in parentheses. Example: (1), (2), (3), ...";
		case ANM_ArabicPlain			: return "Arabic numeral. Example: 1, 2, 3, ...";
		case ANM_RomanUcParenBoth		: return "Uppercase Roman numeral enclosed in parentheses. Example: (I), (II), (III), ...";
		case ANM_RomanUcParenRight		: return "Uppercase Roman numeral followed by a closing parenthesis. Example: I), II), III), ...";
		case ANM_ChsPlain				: return "Simplified Chinese.";
		case ANM_ChsPeriod				: return "Simplified Chinese with single-byte period.";
		case ANM_CircleNumDBPlain		: return "Double byte circle numbers.";
		case ANM_CircleNumWDBWhitePlain	: return "Wingdings white circle numbers.";
		case ANM_CircleNumWDBBlackPlain	: return "Wingdings black circle numbers.";
		case ANM_ChtPlain				: return "Traditional Chinese.";
		case ANM_ChtPeriod				: return "Traditional Chinese with single-byte period.";
		case ANM_Arabic1Minus			: return "Bidi Arabic 1 (AraAlpha) with ANSI minus symbol.";
		case ANM_Arabic2Minus			: return "Bidi Arabic 2 (AraAbjad) with ANSI minus symbol.";
		case ANM_Hebrew2Minus			: return "Bidi Hebrew 2 with ANSI minus symbol.";
		case ANM_JpnKorPlain			: return "Japanese/Korean.";
		case ANM_JpnKorPeriod			: return "Japanese/Korean with single-byte period.";
		case ANM_ArabicDbPlain			: return "Double-byte Arabic numbers.";
		case ANM_ArabicDbPeriod			: return "Double-byte Arabic numbers with double-byte period.";
		case ANM_ThaiAlphaPeriod		: return "Thai alphabetic character followed by a period.";
		case ANM_ThaiAlphaParenRight	: return "Thai alphabetic character followed by a closing parenthesis.";
		case ANM_ThaiAlphaParenBoth		: return "Thai alphabetic character enclosed by parentheses.";
		case ANM_ThaiNumPeriod			: return "Thai numeral followed by a period.";
		case ANM_ThaiNumParenRight		: return "Thai numeral followed by a closing parenthesis.";
		case ANM_ThaiNumParenBoth		: return "Thai numeral enclosed in parentheses.";
		case ANM_HindiAlphaPeriod		: return "Hindi alphabetic character followed by a period.";
		case ANM_HindiNumPeriod			: return "Hindi numeric character followed by a period.";
		case ANM_JpnChsDBPeriod			: return "Japanese with double-byte period.";
		case ANM_HindiNumParenRight		: return "Hindi numeric character followed by a closing parenthesis.";
		case ANM_HindiAlpha1Period		: return "Hindi alphabetic character followed by a period.";
		default							: return "Unknown Numbered Scheme";
		}
	}

