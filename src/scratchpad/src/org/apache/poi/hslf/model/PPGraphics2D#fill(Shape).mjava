    /**
     * Fills the interior of a <code>Shape</code> using the settings of the
     * <code>Graphics2D</code> context. The rendering attributes applied
     * include the <code>Clip</code>, <code>Transform</code>,
     * <code>Paint</code>, and <code>Composite</code>.
     * @param shape the <code>Shape</code> to be filled
     * @see #setPaint
     * @see java.awt.Graphics#setColor
     * @see #transform
     * @see #setTransform
     * @see #setComposite
     * @see #clip
     * @see #setClip
     */
    public void fill(Shape shape){
        PathIterator it = shape.getPathIterator(transform, FLATNESS);
        ArrayList pnt = new ArrayList();
        double[] coords = new double[6];
        while(!it.isDone()){
            int type = it.currentSegment(coords);
            if (type != PathIterator.SEG_CLOSE) {
                pnt.add(new Point2D.Double(coords[0], coords[1]));
            }
            it.next();
        }
        if(pnt.size() > 0){
            Point2D[] points = (Point2D[])pnt.toArray(new Point2D[pnt.size()]);
            Polygon p = new Polygon(group);
            p.setPoints(points);
            applyPaint(p);

            p.setLineColor(null);   //Fills must be "No Line"

            Rectangle2D bounds = transform.createTransformedShape(shape).getBounds2D();
            p.setAnchor(bounds);
            group.addShape(p);
        }
    }

