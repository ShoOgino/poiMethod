    /**
     * Scans through the supplied record array, looking for
     * a TextHeaderAtom followed by one of a TextBytesAtom or
     * a TextCharsAtom. Builds up TextRuns from these
     *
     * @param records the records to build from
     * @param found   vector to add any found to
     * @param styleTextProp9Atom a StyleTextProp9Atom with numbered lists info
     */
    protected static void findTextRuns(final Record[] records, final List<TextRun> found, final StyleTextProp9Atom styleTextProp9Atom) {
        for (int i = 0, slwtIndex=0; i < (records.length - 1); i++) {
            if (records[i] instanceof TextHeaderAtom) {
                TextHeaderAtom tha = (TextHeaderAtom) records[i];
                StyleTextPropAtom stpa = null;
                TextRun trun = null;
                Record next = null;
                Record subs = null;
                
                // See what follows the TextHeaderAtom
                next = records[i+1];
                if (i < records.length - 2) {
                    subs = records[i+2];
                }
                
                // Is the next record one we need to skip over?
                if (subs != null) {
                    if (next instanceof TextRulerAtom ||
                        next instanceof MasterTextPropAtom ||
                        next instanceof TextSpecInfoAtom) {
                        // Ignore this one, check the one after
                        next = subs;
                        if (i < records.length - 3) {
                            subs = records[i+3];
                        } else {
                            subs = null;
                        }
                    }
                }
                
                // Is the subsequent record a style one?
                if (subs != null && subs instanceof StyleTextPropAtom) {
                    stpa = (StyleTextPropAtom)subs;
                }
                
                // Now, check if the next record is one to record
                if (next instanceof TextCharsAtom) {
                    TextCharsAtom tca = (TextCharsAtom)next;
                    trun = new TextRun(tha, tca, stpa);
                } else if (next instanceof TextBytesAtom) {
                    TextBytesAtom tba = (TextBytesAtom)next;
                    trun = new TextRun(tha, tba, stpa);
                } else if (next instanceof StyleTextPropAtom) {
                    stpa = (StyleTextPropAtom)next;
                } else if (next instanceof TextHeaderAtom) {
                    // Seems to be a mostly, but not completely deleted block of
                    //  text. Only the header remains, which isn't useful alone 
                    // Skip on to the next TextHeaderAtom
                    continue;
                } else {
                    logger.log(POILogger.ERROR, "Found a TextHeaderAtom not followed by a TextBytesAtom or TextCharsAtom: Followed by " + next.getRecordType());
                }

                if (trun != null) {
                    List<Record> lst = new ArrayList<Record>();
                    for (int j = i; j < records.length; j++) {
                        if(j > i && records[j] instanceof TextHeaderAtom) break;
                        lst.add(records[j]);
                    }
                    Record[] recs = new Record[lst.size()];
                    lst.toArray(recs);
                    trun._records = recs;
                    trun.setIndex(slwtIndex);
                    trun.setStyleTextProp9Atom(styleTextProp9Atom);
                    found.add(trun);
                    i++;
                } else {
                    // Not a valid one, so skip on to next and look again
                }
                slwtIndex++;
            }
        }
    }

