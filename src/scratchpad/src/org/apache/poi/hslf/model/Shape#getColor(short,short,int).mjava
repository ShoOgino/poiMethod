    Color getColor(short colorProperty, short opacityProperty, int defaultColor){
        EscherOptRecord opt = (EscherOptRecord)getEscherChild(_escherContainer, EscherOptRecord.RECORD_ID);
        EscherSimpleProperty p = (EscherSimpleProperty)getEscherProperty(opt, colorProperty);
        if(p == null && defaultColor == -1) return null;

        int val = p == null ? defaultColor : p.getPropertyValue();

        int a = (val >> 24) & 0xFF;
        int b = (val >> 16) & 0xFF;
        int g = (val >> 8) & 0xFF;
        int r = (val >> 0) & 0xFF;

        boolean fPaletteIndex = (a & 1) != 0;
        boolean fPaletteRGB = (a & (1 << 1)) != 0;
        boolean fSystemRGB = (a & (1 << 2)) != 0;
        boolean fSchemeIndex = (a & (1 << 3)) != 0;
        boolean fSysIndex = (a & (1 << 4)) != 0;

        if (fSchemeIndex)
        {
            //red is the index to the color scheme
            ColorSchemeAtom ca = getSheet().getColorScheme();
            int schemeColor = ca.getColor(r);

            r = (schemeColor >> 0) & 0xFF;
            g = (schemeColor >> 8) & 0xFF;
            b = (schemeColor >> 16) & 0xFF;
        } else if (fPaletteIndex){
            //TODO
        } else if (fPaletteRGB){
            //TODO
        } else if (fSystemRGB){
            //TODO
        } else if (fSysIndex){
            //TODO
        }

        EscherSimpleProperty op = (EscherSimpleProperty)getEscherProperty(opt, opacityProperty);
        int defaultOpacity = 0x00010000;
        int opacity = op == null ? defaultOpacity : op.getPropertyValue();
        int i = (opacity >> 16);
        int f = (opacity >> 0) & 0xFFFF ;
        double alpha = (i + f/65536.0)*255;
        return new Color(r, g, b, (int)alpha);
    }

