    /**
     * Returns all shapes contained in this Sheet
     *
     * @return all shapes contained in this Sheet (Slide or Notes)
     */
    public Shape[] getShapes() {
        PPDrawing ppdrawing = getPPDrawing();

        EscherContainerRecord dg = (EscherContainerRecord) ppdrawing.getEscherRecords()[0];
        EscherContainerRecord spgr = null;
        List ch = dg.getChildRecords();

        for (Iterator it = ch.iterator(); it.hasNext();) {
            EscherRecord rec = (EscherRecord) it.next();
            if (rec.getRecordId() == EscherContainerRecord.SPGR_CONTAINER) {
                spgr = (EscherContainerRecord) rec;
                break;
            }
        }
        ch = spgr.getChildRecords();

        ArrayList shapes = new ArrayList();
        for (int i = 1; i < ch.size(); i++) {
            EscherContainerRecord sp = (EscherContainerRecord) ch.get(i);
            Shape sh = ShapeFactory.createShape(sp, null);
            sh.setSheet(this);
            shapes.add(sh);
        }

        return (Shape[]) shapes.toArray(new Shape[shapes.size()]);
    }

