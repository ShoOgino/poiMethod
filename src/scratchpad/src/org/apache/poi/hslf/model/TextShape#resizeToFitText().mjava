    /**
     * Adjust the size of the TextShape so it encompasses the text inside it.
     *
     * @return a <code>Rectangle2D</code> that is the bounds of this <code>TextShape</code>.
     */
    public Rectangle2D resizeToFitText(){
        String txt = getText();
        if(txt == null || txt.length() == 0) return new Rectangle2D.Float();

        RichTextRun rt = getTextRun().getRichTextRuns()[0];
        int size = rt.getFontSize();
        int style = 0;
        if (rt.isBold()) style |= Font.BOLD;
        if (rt.isItalic()) style |= Font.ITALIC;
        String fntname = rt.getFontName();
        Font font = new Font(fntname, style, size);

        float width = 0, height = 0, leading = 0;        
        String[] lines = txt.split("\n");        
        for (int i = 0; i < lines.length; i++) {
            if(lines[i].length() == 0) continue;
            
            TextLayout layout = new TextLayout(lines[i], font, _frc);
            
            leading = Math.max(leading, layout.getLeading());           
            width = Math.max(width, layout.getAdvance());
            height = Math.max(height, (height + (layout.getDescent() + layout.getAscent())));
        } 	
    	
        // add one character to width
        Rectangle2D charBounds = font.getMaxCharBounds(_frc);                
        width += getMarginLeft() + getMarginRight() + charBounds.getWidth();
        
        // add leading to height        
        height += getMarginTop() + getMarginBottom() + leading;

        Rectangle2D anchor = getAnchor2D();
        anchor.setRect(anchor.getX(), anchor.getY(), width, height);
        setAnchor(anchor);

        return anchor;
    }

