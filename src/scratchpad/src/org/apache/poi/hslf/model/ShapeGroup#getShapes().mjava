    /**
     * @return the shapes contained in this group container
     */
    public Shape[] getShapes() {
        //several SpContainers, the first of which is the group shape itself
        List lst = _escherContainer.getChildRecords();

        //don't include the first SpContainer, it is always NotPrimitive
        Shape[] shapes = new Shape[lst.size() - 1];
        for (int i = 1; i < lst.size(); i++){
            EscherContainerRecord container = (EscherContainerRecord)lst.get(i);
            shapes[i-1] = ShapeFactory.createShape(container, this);
        }
         return shapes;
    }

