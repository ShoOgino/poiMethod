  /**
   * Constructs a Slide from the Slide record, and the SlideAtomsSet
   *  containing the text.
   * Initialises TextRuns, to provide easier access to the text
   *
   * @param slide the Slide record we're based on
   * @param notes the Notes sheet attached to us
   * @param atomSet the SlideAtomsSet to get the text from
   */
  public Slide(org.apache.poi.hslf.record.Slide slide, Notes notes, SlideAtomsSet atomSet) {
	_slide = slide;
	_notes = notes;
	_atomSet = atomSet;

	// Grab the sheet number
	//_sheetNo = _slide.getSlideAtom().getSheetNumber();
	_sheetNo = -1;

	// Grab the TextRuns from the PPDrawing
	_otherRuns = findTextRuns(_slide.getPPDrawing());

	// For the text coming in from the SlideAtomsSet:
	// Build up TextRuns from pairs of TextHeaderAtom and
	//  one of TextBytesAtom or TextCharsAtom
	Vector textRuns = new Vector();
	if(_atomSet != null) {
		findTextRuns(_atomSet.getSlideRecords(),textRuns);
	} else {
		// No text on the slide, must just be pictures
	}

	// Build an array, more useful than a vector
	_runs = new TextRun[textRuns.size()+_otherRuns.length];
	// Grab text from SlideListWithTexts entries
	int i=0;
	for(i=0; i<textRuns.size(); i++) {
		_runs[i] = (TextRun)textRuns.get(i);
	}
	// Grab text from slide's PPDrawing
	for(int k=0; k<_otherRuns.length; i++, k++) {
		_runs[i] = _otherRuns[k];
	}
  }

