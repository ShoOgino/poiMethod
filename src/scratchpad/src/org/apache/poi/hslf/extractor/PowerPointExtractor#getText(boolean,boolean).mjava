  /**
   * Fetches text from the slideshow, be it slide text or note text
   * @param getSlideText fetch slide text
   * @param getNoteText fetch note text
   */
  public String getText(boolean getSlideText, boolean getNoteText) {
	StringBuffer ret = new StringBuffer(); 

	if(getSlideText) {
		for(int i=0; i<_slides.length; i++) {
			Slide slide = _slides[i];
			TextRun[] runs = slide.getTextRuns();
			for(int j=0; j<runs.length; j++) {
				TextRun run = runs[j];
				String text = run.getText();
				ret.append(text);
				if(! text.endsWith("\n")) {
					ret.append("\n");
				}
			}
		}
		if(getNoteText) {
			ret.append(" ");
		}
	}

	if(getNoteText) {
		// Not currently using _notes, as that can have the notes of
		//  master sheets in. Grab Slide list, then work from there,
		//  but ensure no duplicates
		HashSet seenNotes = new HashSet();
		for(int i=0; i<_slides.length; i++) {
			Notes notes = _slides[i].getNotesSheet();
			if(notes == null) { continue; }
			Integer id = new Integer(notes.getSheetNumber());
			if(seenNotes.contains(id)) { continue; }
			seenNotes.add(id);

			TextRun[] runs = notes.getTextRuns();
			if(runs != null && runs.length > 0) {
				for(int j=0; j<runs.length; j++) {
					TextRun run = runs[j];
					String text = run.getText();
					ret.append(text);
					if(! text.endsWith("\n")) {
						ret.append("\n");
					}
				}
			}
		}
	}

	return ret.toString();
  }

