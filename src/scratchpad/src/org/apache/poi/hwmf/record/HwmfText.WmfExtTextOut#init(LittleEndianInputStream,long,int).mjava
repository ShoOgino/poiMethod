        @Override
        public int init(LittleEndianInputStream leis, long recordSize, int recordFunction) throws IOException {
            // -6 bytes of record function and length header
            final int remainingRecordSize = (int)(recordSize-6);
            
            y = leis.readShort();
            x = leis.readShort();
            stringLength = leis.readShort();
            fwOpts = leis.readUShort();
            
            int size = 4*LittleEndianConsts.SHORT_SIZE;
            
            if (fwOpts != 0 && size+8<=remainingRecordSize) {
                // the bounding rectangle is optional and only read when fwOpts are given
                left = leis.readShort();
                top = leis.readShort();
                right = leis.readShort();
                bottom = leis.readShort();
                size += 4*LittleEndianConsts.SHORT_SIZE;
            }
            
            byte buf[] = new byte[stringLength+(stringLength&1)];
            leis.readFully(buf);
            text = new String(buf, 0, stringLength, LocaleUtil.CHARSET_1252);
            size += buf.length;
            
            if (size < remainingRecordSize) {
                if (size + stringLength*LittleEndianConsts.SHORT_SIZE < remainingRecordSize) {
                    throw new RecordFormatException("can't read Dx array - given recordSize doesn't contain enough values for string length "+stringLength);
                }
                
                dx = new int[stringLength];
                for (int i=0; i<dx.length; i++) {
                    dx[i] = leis.readShort();
                }
                size += dx.length*LittleEndianConsts.SHORT_SIZE;
            }
            
            return size;
        }

