    public void drawString(String text, Rectangle2D bounds) {
        HwmfFont font = prop.getFont();
        if (font == null) {
            return;
        }
        AttributedString as = new AttributedString(text);
        as.addAttribute(TextAttribute.FAMILY, font.getFacename());
        // TODO: fix font height calculation
        as.addAttribute(TextAttribute.SIZE, Math.abs(font.getHeight()));
        as.addAttribute(TextAttribute.STRIKETHROUGH, font.isStrikeOut());
        if (font.isUnderline()) {
            as.addAttribute(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        }
        if (font.isItalic()) {
            as.addAttribute(TextAttribute.POSTURE, TextAttribute.POSTURE_OBLIQUE);
        }
        as.addAttribute(TextAttribute.WEIGHT, font.getWeight());
        
        double angle = Math.toRadians(-font.getEscapement()/10.);
        
        
        final AffineTransform at = graphicsCtx.getTransform();
        try {
            graphicsCtx.translate(bounds.getX(), bounds.getY());
            graphicsCtx.rotate(angle);
            if (prop.getBkMode() == HwmfBkMode.OPAQUE) {
                // TODO: validate bounds
                graphicsCtx.setBackground(prop.getBackgroundColor().getColor());
                graphicsCtx.fill(bounds);
            }
            graphicsCtx.setColor(prop.getTextColor().getColor());
            graphicsCtx.drawString(as.getIterator(), 0, 0); // (float)bounds.getX(), (float)bounds.getY());
        } finally {
            graphicsCtx.setTransform(at);
        }
    }

