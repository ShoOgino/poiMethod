    //position(),@name,@size,@type
    public String serialiseEncoder( int fieldNumber, String fieldName, String size, String type)
    {
        String javaType = RecordUtil.getType(size, type, 0);
        String javaFieldName = RecordUtil.getFieldName(fieldNumber,fieldName,0);

        String result = "";
        if (javaType.equals("short"))
            result = "LittleEndian.putShort(data, " + (offset+4) + " + offset, " + javaFieldName + ");";
        else if (javaType.equals("short[]"))
            result = "LittleEndian.putShortArray(data, " + (offset+4) + " + offset, " + javaFieldName + ");";
        else if (javaType.equals("int"))
            result = "LittleEndian.putInt(data, " + (offset+4) + " + offset, " + javaFieldName + ");";
        else if (javaType.equals("byte"))
            result = "data[ " + (offset+4) + " + offset ] = " + javaFieldName + ";";
        else if (javaType.equals("double"))
            result = "LittleEndian.putDouble(data, " + (offset+4) + " + offset, " + javaFieldName + ");";
        else if (javaType.equals("String") && !type.equals("hbstring"))
            result = "StringUtil.putUncompressedUnicode("+ javaFieldName +", data, offset+4);";
        else if (javaType.equals("String") && type.equals("hbstring"))
            result = "StringUtil.putUncompressedUnicodeHigh("+ javaFieldName +", data, "+(offset+4)+" + offset);";
        

        try
        {
            offset += Integer.parseInt(size);
        }
        catch (NumberFormatException ignore)
        {
        }
        return result;

    }

