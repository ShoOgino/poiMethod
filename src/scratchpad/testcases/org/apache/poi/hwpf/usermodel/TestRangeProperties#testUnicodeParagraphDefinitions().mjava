	/**
	 * Tests the raw definitions of the paragraphs of
	 *  a unicode document
	 */
	public void testUnicodeParagraphDefinitions() throws Exception {
		Range r = u.getRange();
		String[] p1_parts = u_page_1.split("\r");
		String[] p2_parts = u_page_2.split("\r");
		
		assertEquals(
				u_page_1 + page_break + "\r" + u_page_2,
				r.text()
		);
		assertEquals(
				408, r.text().length()
		);
	
		
		assertEquals(1, r.numSections());
		assertEquals(1, u.getSectionTable().getSections().size());
		Section s = r.getSection(0);
		assertEquals(
				u_page_1 +
				page_break + "\r" + 
				u_page_2,
				s.text()
		);
		assertEquals(0, s.getStartOffset());
		assertEquals(408, s.getEndOffset());

		
		List pDefs = r._paragraphs;
		assertEquals(35, pDefs.size());
		
		// Check that the last paragraph ends where it should do
		assertEquals(531, u.getOverallRange().text().length());
		assertEquals(530, u.getCPSplitCalculator().getHeaderTextboxEnd());
		PropertyNode pLast = (PropertyNode)pDefs.get(34);
//		assertEquals(530, pLast.getEnd());
		
		// Only care about the first few really though
		PropertyNode p0 = (PropertyNode)pDefs.get(0);
		PropertyNode p1 = (PropertyNode)pDefs.get(1);
		PropertyNode p2 = (PropertyNode)pDefs.get(2);
		PropertyNode p3 = (PropertyNode)pDefs.get(3);
		PropertyNode p4 = (PropertyNode)pDefs.get(4);
		
		// 5 paragraphs should get us to the end of our text
		assertTrue(p0.getStart() < 408);
		assertTrue(p0.getEnd() < 408);
		assertTrue(p1.getStart() < 408);
		assertTrue(p1.getEnd() < 408);
		assertTrue(p2.getStart() < 408);
		assertTrue(p2.getEnd() < 408);
		assertTrue(p3.getStart() < 408);
		assertTrue(p3.getEnd() < 408);
		assertTrue(p4.getStart() < 408);
		assertTrue(p4.getEnd() < 408);
		
		// Paragraphs should match with lines
		assertEquals(
				0,
				p0.getStart()
		);
		assertEquals(
				p1_parts[0].length() + 1,
				p0.getEnd()
		);
		
		assertEquals(
				p1_parts[0].length() + 1,
				p1.getStart()
		);		
		assertEquals(
				p1_parts[0].length() + 1 +
				p1_parts[1].length() + 1,
				p1.getEnd()
		);
		
		assertEquals(
				p1_parts[0].length() + 1 +
				p1_parts[1].length() + 1,
				p2.getStart()
		);
		assertEquals(
				p1_parts[0].length() + 1 +
				p1_parts[1].length() + 1 +
				p1_parts[2].length() + 1,
				p2.getEnd()
		);
	}

