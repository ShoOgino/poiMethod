    @Test
    @Ignore("This is work-in-progress and not a real unit test ...")
    public void paint() throws IOException {
        boolean dumpEmbedded = true;

//        File f = samples.getFile("santa.wmf");
         File f = new File("testme.wmf");
        FileInputStream fis = new FileInputStream(f);
        HwmfPicture wmf = new HwmfPicture(fis);
        fis.close();
        
        Dimension dim = wmf.getSize();
        int width = Units.pointsToPixel(dim.getWidth());
        // keep aspect ratio for height
        int height = Units.pointsToPixel(dim.getHeight());
        double scale = (width > height) ? 1500 / width : 1500 / width;
        width *= scale;
        height *= scale;

        BufferedImage bufImg = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);
        Graphics2D g = bufImg.createGraphics();
        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
        g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
        
        wmf.draw(g, new Rectangle2D.Double(0,0,width,height));

        g.dispose();
        
        ImageIO.write(bufImg, "PNG", new File("bla.png"));

        if (dumpEmbedded) {
            int embIdx = 0;
            for (HwmfEmbedded emb : wmf.getEmbeddings()) {
                final File embName = new File("build/tmp", "emb_"+embIdx + emb.getEmbeddedType().extension);
                try (FileOutputStream fos = new FileOutputStream(embName)) {
                    fos.write(emb.getRawData());
                }
                embIdx++;
            }
        }
    }

