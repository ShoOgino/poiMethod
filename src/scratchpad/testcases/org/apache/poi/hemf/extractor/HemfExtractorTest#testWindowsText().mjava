    @Test
    public void testWindowsText() throws Exception {
        InputStream is = POIDataSamples.getSpreadSheetInstance().openResourceAsStream("SimpleEMF_windows.emf");
        HemfExtractor ex = new HemfExtractor(is);
        long lastY = -1;
        long lastX = -1;
        long fudgeFactorX = 1000;//derive this from the font or frame/bounds information
        StringBuilder sb = new StringBuilder();
        Set<String> expectedParts = new HashSet<String>();
        expectedParts.add("C:\\Users\\tallison\\");
        expectedParts.add("testPDF.pdf");
        int foundExpected = 0;
        for (HemfRecord record : ex) {
            if (record.getRecordType().equals(HemfRecordType.exttextoutw)) {
                HemfText.ExtTextOutW extTextOutW = (HemfText.ExtTextOutW) record;
                if (lastY > -1 && lastY != extTextOutW.getY()) {
                    sb.append("\n");
                    lastX = -1;
                }
                if (lastX > -1 && extTextOutW.getX() - lastX > fudgeFactorX) {
                    sb.append(" ");
                }
                String txt = extTextOutW.getText();
                if (expectedParts.contains(txt)) {
                    foundExpected++;
                }
                sb.append(txt);
                lastY = extTextOutW.getY();
                lastX = extTextOutW.getX();
            }
        }
        String txt = sb.toString();
        assertContains(txt, "C:\\Users\\tallison\\\n");
        assertContains(txt, "asf2-git-1.x\\tika-\n");
        assertEquals(expectedParts.size(), foundExpected);
    }

