    /*
    @Test
    @Ignore("Only for manual tests - need to add org.tukaani:xz:1.8 for this to work")
    public void paint() throws Exception {
        final byte buf[] = new byte[50_000_000];

        // good test samples to validate rendering:
        // emfs/commoncrawl2/NB/NBWN2YH5VFCLZRFDQU7PB7IDD4UKY7DN_2.emf
        // emfs/govdocs1/777/777525.ppt_0.emf
        // emfs/govdocs1/844/844795.ppt_2.emf
        // emfs/commoncrawl2/TO/TOYZSTNUSW5OFCFUQ6T5FBLIDLCRF3NH_0.emf

        // ISS3ANIX2PL4PXR7SZSJSPBZI7YQQE3U_6 - map of italy - stroke problem
        // 3QKAPISTXYHSFCTV6QTKTYLK6JTWJHQU_2 - text misplaced
        // KEEDHN6XES4EKK52E3AJHKCARNTQF7PO_0 - dito
        // KWG4VAU5GM3POSA4BPG6RSVQVS44SXOL_1.emf - processing freezes

        // F7GK5XOLERFURVTQALOCX3GJ6FH45LNQ strange colors
        // ISS3ANIX2PL4PXR7SZSJSPBZI7YQQE3U stroke wrong
        // KWG4VAU5GM3POSA4BPG6RSVQVS44SXOL_1

        try (SevenZFile sevenZFile = new SevenZFile(new File("tmp/plus_emf.7z"))
            ) {
            for (int idx=0;;idx++) {
                SevenZArchiveEntry entry = sevenZFile.getNextEntry();
                if (entry == null) break;
                final String etName = entry.getName();

                if (entry.isDirectory() || !etName.endsWith(".emf")) continue;

                if (!(etName.contains("3QKAPISTXYHSFCTV6QTKTYLK6JTWJHQU_2")
                )) continue;

//                || etName.contains("ISS3ANIX2PL4PXR7SZSJSPBZI7YQQE3U_6")
//                        || etName.contains("KWG4VAU5GM3POSA4BPG6RSVQVS44SXOL_1")


                System.out.println(etName);

                int size = sevenZFile.read(buf);
                ByteArrayInputStream bis = new ByteArrayInputStream(buf, 0, size);
                System.setIn(bis);

                String lastName = etName.replaceFirst(".+/", "");

                String[] args = {
                    "-format", "png", // png,gif,jpg or null for test
                    "-outdir", new File("build/tmp/").getCanonicalPath(),
                    "-outfile", lastName.replace(".emf", ".png"),
                    "-fixside", "long",
                    "-scale", "800",
                    "-ignoreParse",
                     "-dump", new File("build/tmp/", lastName.replace(".emf",".json")).getCanonicalPath(),
                    // "-quiet",
                    // "-extractEmbedded",
                    "stdin"
                };
                PPTX2PNG.main(args);
            }
        }
    }
*/
    @Test
    public void testBasicWindows() throws Exception {
        try (InputStream is = ss_samples.openResourceAsStream("SimpleEMF_windows.emf")) {
            HemfPicture pic = new HemfPicture(is);
            HemfHeader header = pic.getHeader();
            assertEquals(27864, header.getBytes());
            assertEquals(31, header.getRecords());
            assertEquals(3, header.getHandles());
            assertEquals(346000, header.getMicroDimension().getWidth(), 0);
            assertEquals(194000, header.getMicroDimension().getHeight(), 0);

            List<HemfRecord> records = pic.getRecords();

            assertEquals(31, records.size());
        }
    }

