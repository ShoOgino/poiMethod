	private void checkSlide1(final HSLFSlide s) {
		final StyleTextProp9Atom[] numberedListArray = s.getNumberedListInfo();
		assertNotNull(numberedListArray);
		assertEquals(1, numberedListArray.length);//Just one text box here
		final StyleTextProp9Atom numberedListInfo = numberedListArray[0];
		assertNotNull(numberedListInfo);
		final TextPFException9[] autoNumbers = numberedListInfo.getAutoNumberTypes();
		assertNotNull(autoNumbers);
		assertEquals(4, autoNumbers.length);
		assertTrue(9 == autoNumbers[0].getAutoNumberStartNumber());
		assertNull(autoNumbers[1].getAutoNumberStartNumber());
		assertTrue(3 == autoNumbers[2].getAutoNumberStartNumber());
		assertTrue(TextAutoNumberSchemeEnum.ANM_ArabicParenRight == autoNumbers[0].getAutoNumberScheme());
		assertNull(autoNumbers[1].getAutoNumberScheme());
		assertTrue(TextAutoNumberSchemeEnum.ANM_AlphaUcPeriod == autoNumbers[2].getAutoNumberScheme());

		final HSLFTextParagraph[] textRuns = s.getTextRuns();
		assertEquals(2, textRuns.length);

		HSLFTextRun textRun = textRuns[0].getRichTextRuns()[0];
		assertEquals("Second Slide Title", textRun.getRawText());
		assertEquals(1, textRuns[0].getRichTextRuns().length);
		assertFalse(textRun.isBullet());

		assertEquals("This is a text placeholder that \rfollows the design pattern\rJust a test\rWithout any paragraph\rSecond paragraph first line c) ;\rSecond paragraph second line d) . \r", textRuns[1].getRawText());
		
		final EscherTextboxWrapper[] styleAtoms = s.getTextboxWrappers();
		assertEquals(textRuns.length, styleAtoms.length);
		final EscherTextboxWrapper wrapper =  styleAtoms[1];
		final StyleTextPropAtom styleTextPropAtom = wrapper.getStyleTextPropAtom();
		final List<TextPropCollection> textProps = styleTextPropAtom.getCharacterStyles();
		
		final TextPropCollection[] props = (TextPropCollection[]) textProps.toArray(new TextPropCollection[textProps.size()]);
		assertEquals(33, props[0].getCharactersCovered());
		assertEquals(61, props[1].getCharactersCovered());
		assertEquals(68, props[2].getCharactersCovered());
	}

