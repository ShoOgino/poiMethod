	private void checkSlide1(final Slide s) {
		final StyleTextProp9Atom[] numberedListArray = s.getNumberedListInfo();
		assertNotNull(numberedListArray);
		assertEquals(1, numberedListArray.length);
		final StyleTextProp9Atom numberedListInfoForTextBox = numberedListArray[0];
		assertNotNull(numberedListInfoForTextBox);
		final TextPFException9[] autoNumbersOfTextBox = numberedListInfoForTextBox.getAutoNumberTypes();
		assertEquals(Short.valueOf((short)1), autoNumbersOfTextBox[0].getfBulletHasAutoNumber());
		assertEquals(Short.valueOf((short)1), autoNumbersOfTextBox[0].getAutoNumberStartNumber());//Default value = 1 will be used 
		assertTrue(TextAutoNumberSchemeEnum.ANM_ArabicPeriod == autoNumbersOfTextBox[0].getAutoNumberScheme());
			
		TextRun[] textRuns = s.getTextRuns();
		assertEquals(3, textRuns.length);

		RichTextRun textRun = textRuns[0].getRichTextRuns()[0];
		assertEquals("Bulleted list\rMore bullets", textRun.getRawText());
		assertEquals(1, textRuns[0].getRichTextRuns().length);
		assertTrue(textRun.isBullet());

		assertEquals("Numbered list between two bulleted lists\rSecond numbered list item", textRuns[1].getRawText());
		assertEquals("Second bulleted list \u2013 should appear after numbered list\rMore bullets", textRuns[2].getRawText());
		
		final EscherTextboxWrapper[] styleAtoms = s.getTextboxWrappers();
		assertEquals(textRuns.length, styleAtoms.length);
		checkSingleRunWrapper(27, styleAtoms[0]);
		checkSingleRunWrapper(67, styleAtoms[1]);
		checkSingleRunWrapper(70, styleAtoms[2]);
	}

