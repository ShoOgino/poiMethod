	/**
	 * Test re-ordering slides in a slideshow with 2 slides on it
	 */
	public void testReOrder2swap() throws Exception {
		// Has two slides
		assertEquals(2, ss_two.getSlides().length);
		HSLFSlide s1 = ss_two.getSlides()[0];
		HSLFSlide s2 = ss_two.getSlides()[1];

		// Check slide 1 is as expected
		assertEquals(256, s1._getSheetNumber());
		assertEquals(4, s1._getSheetRefId()); // master has notes
		assertEquals(1, s1.getSlideNumber());
		// Check slide 2 is as expected
		assertEquals(257, s2._getSheetNumber());
		assertEquals(6, s2._getSheetRefId()); // master and 1 have notes
		assertEquals(2, s2.getSlideNumber());

		// Swap them around
		ss_two.reorderSlide(2, 1);

		// Write out, and read back in
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		hss_two.write(baos);
		ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());

		HSLFSlideShowImpl hss_read = new HSLFSlideShowImpl(bais);
		HSLFSlideShow ss_read = new HSLFSlideShow(hss_read);

		// Check it still has 2 slides
		assertEquals(2, ss_read.getSlides().length);

		// And check it's as expected
		s1 = ss_read.getSlides()[0];
		s2 = ss_read.getSlides()[1];
		assertEquals(257, s1._getSheetNumber());
		assertEquals(6, s1._getSheetRefId());
		assertEquals(1, s1.getSlideNumber());
		assertEquals(256, s2._getSheetNumber());
		assertEquals(4, s2._getSheetRefId());
		assertEquals(2, s2.getSlideNumber());
	}

