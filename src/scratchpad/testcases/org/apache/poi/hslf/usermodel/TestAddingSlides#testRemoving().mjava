    /**
     * Test SlideShow#removeSlide
     */
    @Test
    public void testRemoving() throws IOException {
        HSLFSlide slide1 = ss_empty.createSlide();
        HSLFSlide slide2 = ss_empty.createSlide();

        List<HSLFSlide> s1 = ss_empty.getSlides();
        assertEquals(2, s1.size());
        try {
            ss_empty.removeSlide(-1);
            fail("expected exception");
        } catch (Exception e) {
        }

        try {
            ss_empty.removeSlide(2);
            fail("expected exception");
        } catch (Exception e) {
        }

        assertEquals(1, slide1.getSlideNumber());

        HSLFSlide removedSlide = ss_empty.removeSlide(0);
        List<HSLFSlide> s2 = ss_empty.getSlides();
        assertEquals(1, s2.size());
        assertSame(slide1, removedSlide);
        assertSame(slide2, s2.get(0));

        assertEquals(0, slide2.getSlideNumber());

        HSLFSlideShow ss_read = HSLFTestDataSamples
                .writeOutAndReadBack(ss_empty);

        List<HSLFSlide> s3 = ss_read.getSlides();
        assertEquals(1, s3.size());
        ss_read.close();
    }

