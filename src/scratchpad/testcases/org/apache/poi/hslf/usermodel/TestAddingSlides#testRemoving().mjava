    /**
     * Test SlideShow#removeSlide
     */
    public void testRemoving() throws Exception {
        HSLFSlideShow ppt = new HSLFSlideShow();
        HSLFSlide slide1 = ppt.createSlide();
        HSLFSlide slide2 = ppt.createSlide();

        List<HSLFSlide> s1 = ppt.getSlides();
        assertEquals(2, s1.size());
        try {
            ppt.removeSlide(-1);
            fail("expected exception");
        } catch (Exception e){
		}

        try {
            ppt.removeSlide(2);
            fail("expected exception");
        } catch (Exception e){
		}

        assertEquals(1, slide1.getSlideNumber());

        HSLFSlide removedSlide = ppt.removeSlide(0);
        List<HSLFSlide> s2 = ppt.getSlides();
        assertEquals(1, s2.size());
        assertSame(slide1, removedSlide);
        assertSame(slide2, s2.get(0));

        assertEquals(0, slide2.getSlideNumber());

        ByteArrayOutputStream out = new ByteArrayOutputStream();
        ppt.write(out);

        ppt = new HSLFSlideShow(new ByteArrayInputStream(out.toByteArray()));

        List<HSLFSlide> s3 = ppt.getSlides();
        assertEquals(1, s3.size());
    }

