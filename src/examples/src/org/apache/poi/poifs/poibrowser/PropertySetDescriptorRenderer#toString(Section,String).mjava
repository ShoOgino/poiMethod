    /**
     * <p>Returns a string representation of a {@link Section}.</p>
     * @param s the section
     * @param name the section's name
     * @return a string representation of the {@link Section}
     */
    protected String toString(final Section s, final String name)
    {
        final StringBuffer b = new StringBuffer();
        b.append("\n" + name + " Format ID: ");
        b.append(HexDump.toHex(s.getFormatID().getBytes()));
        b.append("\n" + name + " Offset: " + s.getOffset());
        b.append("\n" + name + " Section size: " + s.getSize());
        b.append("\n" + name + " Property count: " + s.getPropertyCount());

        final Property[] properties = s.getProperties();
        for (int i = 0; i < properties.length; i++)
        {
            final Property p = properties[i];
            final long id = p.getID();
            final long type = p.getType();
            final Object value = p.getValue();
            b.append('\n');
            b.append(name);
            b.append(", Name: ");
            b.append(id);
            b.append(" (");
            b.append(s.getPIDString(id));
            b.append("), Type: ");
            b.append(type);
            b.append(", Value: ");
            if (value instanceof byte[]) {
                byte[] buf = new byte[4];
                System.arraycopy(value, 0, buf, 0, 4);
                b.append(HexDump.toHex(buf));
                b.append(' ');
                System.arraycopy(value, ((byte[])value).length - 4, buf, 0, 4);
            } else if (value != null) {
                b.append(value);
            } else {
                b.append("null");
            }
        }
        return b.toString();
    }

