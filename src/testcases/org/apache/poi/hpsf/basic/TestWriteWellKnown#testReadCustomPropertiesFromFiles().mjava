    /**
     * <p>Tests the simplified custom properties by reading them from the
     * available test files.</p>
     *
     * @throws Throwable if anything goes wrong.
     */
    @Test
    public void testReadCustomPropertiesFromFiles() throws Throwable
    {
        final AllDataFilesTester.TestTask task = new AllDataFilesTester.TestTask()
        {
            @Override
            public void runTest(final File file) throws FileNotFoundException,
                    IOException, NoPropertySetStreamException,
                    MarkUnsupportedException,
                    UnexpectedPropertySetTypeException
            {
                /* Read a test document <em>doc</em> into a POI filesystem. */
                NPOIFSFileSystem poifs = null;
                try {
                    poifs = new NPOIFSFileSystem(file);
                    final DirectoryEntry dir = poifs.getRoot();
                    /*
                     * If there is a document summry information stream, read it from
                     * the POI filesystem, else create a new one.
                     */
                    DocumentSummaryInformation dsi;
                    if (dir.hasEntry(DocumentSummaryInformation.DEFAULT_STREAM_NAME)) {
                        final DocumentInputStream dis = poifs.createDocumentInputStream(DocumentSummaryInformation.DEFAULT_STREAM_NAME);
                        final PropertySet ps = new PropertySet(dis);
                        dsi = new DocumentSummaryInformation(ps);
                        dis.close();
                    } else {
                        dsi = PropertySetFactory.newDocumentSummaryInformation();
                    }
                    final CustomProperties cps = dsi.getCustomProperties();
    
                    if (cps == null)
                        /* The document does not have custom properties. */
                        return;
    
                    for (CustomProperty cp : cps.values()) {
                        cp.getName();
                        cp.getValue();
                    }
                } finally {
                    if (poifs != null) poifs.close();
                }
            }
        };

        POIDataSamples _samples = POIDataSamples.getHPSFInstance();
        final File dataDir = _samples.getFile("");
        final File[] docs = dataDir.listFiles(new FileFilter()
        {
            @Override
            public boolean accept(final File file)
            {
                return file.isFile() && file.getName().startsWith("Test") && TestReadAllFiles.checkExclude(file);
            }
        });

        for (int i = 0; i < docs.length; i++)
        {
            try {
                task.runTest(docs[i]);
            } catch (Exception e) {
                throw new IOException("While handling file " + docs[i], e);
            }
        }
    }

