    /**
     * <p>Tests writing and reading back a proper dictionary.</p>
     * @throws IOException 
     * @throws HPSFException 
     */
    @Test
    public void dictionary() throws IOException, HPSFException {
        final File copy = TempFile.createTempFile("Test-HPSF", "ole2");
        copy.deleteOnExit();

        /* Write: */
        final OutputStream out = new FileOutputStream(copy);
        final POIFSFileSystem poiFs = new POIFSFileSystem();
        final PropertySet ps1 = new PropertySet();
        final Section s = ps1.getSections().get(0);
        final Map<Long,String> m = new HashMap<>(3, 1.0f);
        m.put(Long.valueOf(1), "String 1");
        m.put(Long.valueOf(2), "String 2");
        m.put(Long.valueOf(3), "String 3");
        s.setDictionary(m);
        s.setFormatID(DocumentSummaryInformation.FORMAT_ID[0]);
        int codepage = CodePageUtil.CP_UNICODE;
        s.setProperty(PropertyIDMap.PID_CODEPAGE, Variant.VT_I2, codepage);
        poiFs.createDocument(ps1.toInputStream(), "Test");
        poiFs.writeFilesystem(out);
        poiFs.close();
        out.close();

        /* Read back: */
        final List<POIFile> psf = Util.readPropertySets(copy);
        assertEquals(1, psf.size());
        final byte[] bytes = psf.get(0).getBytes();
        final InputStream in = new ByteArrayInputStream(bytes);
        final PropertySet ps2 = PropertySetFactory.create(in);

        /* Check if the result is a DocumentSummaryInformation stream, as
         * specified. */
        assertTrue(ps2.isDocumentSummaryInformation());

        /* Compare the property set stream with the corresponding one
         * from the origin file and check whether they are equal. */
        assertEquals(ps1, ps2);
    }

