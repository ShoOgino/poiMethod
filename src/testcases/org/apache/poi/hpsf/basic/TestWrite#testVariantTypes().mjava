    /**
     * <p>Writes and reads back various variant types and checks whether the
     * stuff that has been read back equals the stuff that was written.</p>
     */
    public void testVariantTypes()
    {
        Throwable t = null;
        final int codepage = -1;
        /* FIXME (2): Add tests for various codepages! */
        try
        {
            check(Variant.VT_EMPTY, null, codepage);
            check(Variant.VT_BOOL, new Boolean(true), codepage);
            check(Variant.VT_BOOL, new Boolean(false), codepage);
            check(Variant.VT_CF, new byte[]{0}, codepage);
            check(Variant.VT_CF, new byte[]{0, 1}, codepage);
            check(Variant.VT_CF, new byte[]{0, 1, 2}, codepage);
            check(Variant.VT_CF, new byte[]{0, 1, 2, 3}, codepage);
            check(Variant.VT_CF, new byte[]{0, 1, 2, 3, 4}, codepage);
            check(Variant.VT_CF, new byte[]{0, 1, 2, 3, 4, 5}, codepage);
            check(Variant.VT_CF, new byte[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, 
                  codepage);
            check(Variant.VT_I2, new Integer(27), codepage);
            check(Variant.VT_I4, new Long(28), codepage);
            check(Variant.VT_FILETIME, new Date(), codepage);
            check(Variant.VT_LPSTR, "", codepage);
            check(Variant.VT_LPSTR, "�", codepage);
            check(Variant.VT_LPSTR, "��", codepage);
            check(Variant.VT_LPSTR, "���", codepage);
            check(Variant.VT_LPSTR, "����", codepage);
            check(Variant.VT_LPSTR, "�����", codepage);
            check(Variant.VT_LPSTR, "������", codepage);
            check(Variant.VT_LPSTR, "�������", codepage);
            check(Variant.VT_LPWSTR, "", codepage);
            check(Variant.VT_LPWSTR, "�", codepage);
            check(Variant.VT_LPWSTR, "��", codepage);
            check(Variant.VT_LPWSTR, "���", codepage);
            check(Variant.VT_LPWSTR, "����", codepage);
            check(Variant.VT_LPWSTR, "�����", codepage);
            check(Variant.VT_LPWSTR, "������", codepage);
            check(Variant.VT_LPWSTR, "�������", codepage);
        }
        catch (Exception ex)
        {
            t = ex;
        }
        catch (Error ex)
        {
            t = ex;
        }
        if (t != null)
        {
            StringWriter sw = new StringWriter();
            PrintWriter pw = new PrintWriter(sw);
            t.printStackTrace(pw);
            pw.close();
            try
            {
                sw.close();
            }
            catch (IOException ex2)
            {
                t.printStackTrace();
            }
            fail(sw.toString());
        }
    }

