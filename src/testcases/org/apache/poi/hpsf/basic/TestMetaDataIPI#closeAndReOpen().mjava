	/**
	 * Closes the ByteArrayOutputStream and reads it into a ByteArrayInputStream.
	 * When finished writing information this method is used in the tests to
	 * start reading from the created document and then the see if the results match.
	 */
	public void closeAndReOpen() throws IOException, HPSFException {

		dsi.write(dir, DocumentSummaryInformation.DEFAULT_STREAM_NAME);
		si.write(dir, SummaryInformation.DEFAULT_STREAM_NAME);

		si = null;
		dsi = null;
        poifs.writeFilesystem(bout);
        bout.flush();

		InputStream is = new ByteArrayInputStream(bout.toByteArray());
		assertNotNull(is);
		POIFSFileSystem poifs = new POIFSFileSystem(is);
		is.close();

		assertNotNull(poifs);
		/* Read the document summary information. */
		DirectoryEntry dir = poifs.getRoot();

		DocumentEntry dsiEntry = (DocumentEntry) dir
				.getEntry(DocumentSummaryInformation.DEFAULT_STREAM_NAME);
		DocumentInputStream dis = new DocumentInputStream(dsiEntry);
		PropertySet ps = new PropertySet(dis);
		dis.close();
		dsi = new DocumentSummaryInformation(ps);

		try {
			dsiEntry = (DocumentEntry) dir
					.getEntry(SummaryInformation.DEFAULT_STREAM_NAME);
			dis = new DocumentInputStream(dsiEntry);
			ps = new PropertySet(dis);
			dis.close();
			si = new SummaryInformation(ps);

		} catch (FileNotFoundException ex) {
			/*
			 * There is no document summary information yet. We have to create a
			 * new one.
			 */
			si = PropertySetFactory.newSummaryInformation();
			assertNotNull(si);
		}
	}

