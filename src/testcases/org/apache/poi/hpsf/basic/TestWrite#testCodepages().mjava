    /**
     * <p>Writes and reads back strings using several different codepages and
     * checks whether the stuff that has been read back equals the stuff that
     * was written.</p>
     */
    public void testCodepages()
    {
        Throwable t = null;
        final int[] validCodepages = new int[] {-1, 1252, 1200, 65001};
        for (int i = 0; i < validCodepages.length; i++)
        {
            int codepage = validCodepages[i];
            try
            {
                check(Variant.VT_LPSTR, "", codepage);
                check(Variant.VT_LPSTR, "�", codepage);
                check(Variant.VT_LPSTR, "��", codepage);
                check(Variant.VT_LPSTR, "���", codepage);
                check(Variant.VT_LPSTR, "����", codepage);
                check(Variant.VT_LPSTR, "�����", codepage);
                check(Variant.VT_LPSTR, "������", codepage);
                check(Variant.VT_LPSTR, "�������", codepage);
                if (codepage == 1200 || codepage == 65001)
                    check(Variant.VT_LPSTR, "\u79D1\u5B78", codepage);
            }
            catch (Exception ex)
            {
                t = ex;
            }
            catch (Error ex)
            {
                t = ex;
            }
            if (t != null)
                fail(org.apache.poi.hpsf.Util.toString(t));
        }

        final int[] invalidCodepages = new int[] {0, 1, 2, 4711, 815};
        for (int i = 0; i < invalidCodepages.length; i++)
        {
            int codepage = invalidCodepages[i];
            try
            {
                check(Variant.VT_LPSTR, "", codepage);
                check(Variant.VT_LPSTR, "�", codepage);
                check(Variant.VT_LPSTR, "��", codepage);
                check(Variant.VT_LPSTR, "���", codepage);
                check(Variant.VT_LPSTR, "����", codepage);
                check(Variant.VT_LPSTR, "�����", codepage);
                check(Variant.VT_LPSTR, "������", codepage);
                check(Variant.VT_LPSTR, "�������", codepage);
                fail("UnsupportedEncodingException for codepage " + codepage +
                     " expected.");
            }
            catch (UnsupportedEncodingException ex)
            {
                /* This is the expected behaviour. */
            }
            catch (Exception ex)
            {
                t = ex;
            }
            catch (Error ex)
            {
                t = ex;
            }
            if (t != null)
                fail(org.apache.poi.hpsf.Util.toString(t));
        }

    }

