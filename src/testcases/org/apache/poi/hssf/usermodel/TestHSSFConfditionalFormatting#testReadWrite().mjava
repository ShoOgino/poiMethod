	public void testReadWrite() {
		
		HSSFWorkbook wb;
		try {
			InputStream is = new FileInputStream("C:/josh/temp/cfEx.xls");
			wb = new HSSFWorkbook(is);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		
		HSSFSheet sheet = wb.getSheetAt(0);
		
		int nCFs = sheet.getNumConditionalFormattings();
		HSSFConditionalFormatting cf = sheet.getConditionalFormattingAt(0);
		Region[] regions = cf.getFormattingRegions();

		sheet.removeConditionalFormatting(0);

		HSSFFontFormatting fontFmt = new HSSFFontFormatting();
		fontFmt.setFontStyle(false, true);
		HSSFConditionalFormattingRule rule1 = cf.getRule(0); 
		HSSFConditionalFormattingRule rule = sheet.createConditionalFormattingRule(ComparisonOperator.BETWEEN, "5", "10",  fontFmt, null, null);

		byte[] rawRecord1 = rule1.getCfRuleRecord().getFontFormatting().getRawRecord();
		for (int i = 0; i < rawRecord1.length; i++) {
			System.out.print(rawRecord1[i] + ",");
		}
		System.out.println();
		
		byte[] rawRecord = fontFmt.getFontFormattingBlock().getRawRecord();
		for (int i = 0; i < rawRecord.length; i++) {
			System.out.print(rawRecord[i]+ ",");
		}
		System.out.println();
		
		rule.getCfRuleRecord().setFontFormatting(rule1.getCfRuleRecord().getFontFormatting());
		
		sheet.addConditionalFormatting(regions, new HSSFConditionalFormattingRule[] { rule, });
		
		
		HSSFWorkbook wb2;
if(false)		try {
			ByteArrayOutputStream baos = new ByteArrayOutputStream();
			wb.write(baos);
			
			ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());
			
			wb2 = new HSSFWorkbook(bais);
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		
		
		try {
			OutputStream os = new FileOutputStream("C:/josh/temp/cfEx3.xls");
			wb.write(os);
			os.close();
		} catch (IOException e) {
			throw new RuntimeException(e);
		}
		
		
	}

