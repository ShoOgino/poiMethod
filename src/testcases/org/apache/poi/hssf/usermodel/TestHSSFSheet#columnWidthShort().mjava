    @Test
    public void columnWidthShort() {
        HSSFWorkbook wb = new HSSFWorkbook();
        Sheet sheet = wb.createSheet();

        //default column width measured in characters
        sheet.setDefaultColumnWidth((short)10);
        assertEquals(10, sheet.getDefaultColumnWidth());
        //columns A-C have default width
        assertEquals(256*10, sheet.getColumnWidth((short)0));
        assertEquals(256*10, sheet.getColumnWidth((short)1));
        assertEquals(256*10, sheet.getColumnWidth((short)2));

        //set custom width for D-F
        for (char i = 'D'; i <= 'F'; i++) {
            //Sheet#setColumnWidth accepts the width in units of 1/256th of a character width
            int w = 256*12;
            sheet.setColumnWidth((short)i, w);
            assertEquals(w, sheet.getColumnWidth((short)i));
        }
        //reset the default column width, columns A-C change, D-F still have custom width
        sheet.setDefaultColumnWidth((short)20);
        assertEquals(20, sheet.getDefaultColumnWidth());
        assertEquals(256*20, sheet.getColumnWidth((short)0));
        assertEquals(256*20, sheet.getColumnWidth((short)1));
        assertEquals(256*20, sheet.getColumnWidth((short)2));
        for (char i = 'D'; i <= 'F'; i++) {
            int w = 256*12;
            assertEquals(w, sheet.getColumnWidth((short)i));
        }

        // check for 16-bit signed/unsigned error:
        sheet.setColumnWidth((short)10, 40000);
        assertEquals(40000, sheet.getColumnWidth((short)10));

        //The maximum column width for an individual cell is 255 characters
        try {
            sheet.setColumnWidth((short)9, 256*256);
            fail("expected exception");
        } catch(IllegalArgumentException e){
            assertEquals("The maximum column width for an individual cell is 255 characters.", e.getMessage());
        }

        //serialize and read again
        wb = HSSFTestDataSamples.writeOutAndReadBack(wb);

        sheet = wb.getSheetAt(0);
        assertEquals(20, sheet.getDefaultColumnWidth());
        //columns A-C have default width
        assertEquals(256*20, sheet.getColumnWidth((short)0));
        assertEquals(256*20, sheet.getColumnWidth((short)1));
        assertEquals(256*20, sheet.getColumnWidth((short)2));
        //columns D-F have custom width
        for (char i = 'D'; i <= 'F'; i++) {
            short w = (256*12);
            assertEquals(w, sheet.getColumnWidth((short)i));
        }
        assertEquals(40000, sheet.getColumnWidth((short)10));
    }

