    public void testBug56380InsertComments() throws Exception {
        HSSFWorkbook workbook = new HSSFWorkbook();
        HSSFSheet sheet = workbook.createSheet();
        Drawing drawing = sheet.createDrawingPatriarch();
        int noOfRows = 3000;
        String comment = "c";
        
        for(int i = 0; i < noOfRows; i++) {
            Row row = sheet.createRow(i);
            Cell cell = row.createCell(0);
            insertComment(drawing, cell, comment + i);
        }

        // assert that the comments are created properly before writing
        checkComments(sheet, noOfRows, comment);
        
        System.out.println("Listing comments before write");
        listComments(sheet.getDrawingPatriarch());

        assertEquals(noOfRows, sheet.getDrawingPatriarch().getChildren().size());
        
        // store in temp-file
        File file = new File(System.getProperty("java.io.tmpdir") + File.separatorChar + "test_comments.xls");
        FileOutputStream fs = new FileOutputStream(file);
        try {
            sheet.getWorkbook().write(fs);
        } finally {
            fs.close();
        }
        
        // save and recreate the workbook from the saved file
        workbook = HSSFTestDataSamples.writeOutAndReadBack(workbook);
        sheet = workbook.getSheetAt(0);
        
        // recreate the workbook from the saved file
        /*FileInputStream fi = new FileInputStream(file);
        try {
            sheet = new HSSFWorkbook(fi).getSheetAt(0);
        } finally {
            fi.close();
        }*/
        
        System.out.println("Listing comments after read");
        listComments(sheet.getDrawingPatriarch());
        
        assertEquals(noOfRows, sheet.getDrawingPatriarch().getChildren().size());

        // store file after
        file = new File(System.getProperty("java.io.tmpdir") + File.separatorChar + "test_comments_after.xls");
        fs = new FileOutputStream(file);
        try {
            sheet.getWorkbook().write(fs);
        } finally {
            fs.close();
        }

        // assert that the comments are created properly after reading back in
        //checkComments(sheet, noOfRows, comment);
    }

