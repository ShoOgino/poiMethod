	/**
	 * Checks that an external function can get invoked from the formula evaluator. 
	 * @throws IOException 

	 */
	public void testInvoke() {
		
		HSSFWorkbook wb;
		HSSFSheet sheet;
		HSSFCell cell;
		if (false) {
			// TODO - this code won't work until we can create user-defined functions directly with POI
			wb = new HSSFWorkbook();
			sheet = wb.createSheet();
			wb.setSheetName(0, "Sheet1");
			HSSFName hssfName = wb.createName();
			hssfName.setNameName("myFunc");
			
		} else {
			// This sample spreadsheet already has a VB function called 'myFunc'
			wb = HSSFTestDataSamples.openSampleWorkbook("testNames.xls");
			sheet = wb.getSheetAt(0);
			HSSFRow row = sheet.createRow(0);
			cell = row.createCell(1);
		}
		
		cell.setCellFormula("myFunc()");
		String actualFormula=cell.getCellFormula();
		assertEquals("myFunc()", actualFormula);
		
		HSSFFormulaEvaluator fe = new HSSFFormulaEvaluator(wb);
		// Check out what ExternalFunction.evaluate() does:
		CellValue evalResult;
		try {
			evalResult = fe.evaluate(cell);
		} catch (NotImplementedException e) {
			assertEquals("Error evaluating cell Sheet1!B1", e.getMessage());
			assertEquals("myFunc", e.getCause().getMessage());
			return;
		}
		// TODO - make this test assert something more interesting as soon as ExternalFunction works a bit better
		assertNotNull(evalResult);
	}

