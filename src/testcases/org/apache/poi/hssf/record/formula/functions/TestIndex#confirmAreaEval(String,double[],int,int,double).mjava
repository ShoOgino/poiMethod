	/**
	 * @param areaRefString in Excel notation e.g. 'D2:E97'
	 * @param dValues array of evaluated values for the area reference
	 * @param rowNum 1-based
	 * @param colNum 1-based, pass -1 to signify argument not present
	 */
	private static void confirmAreaEval(String areaRefString, double[] dValues, 
			int rowNum, int colNum, double expectedResult) {
		ValueEval[] values = new ValueEval[dValues.length];
		for (int i = 0; i < values.length; i++) {
			values[i] = new NumberEval(dValues[i]);
		}
		Area2DEval arg0 = new Area2DEval(new AreaPtg(areaRefString), values);
		
		Eval[] args;
		if (colNum > 0) {
			args = new Eval[] { arg0, new NumberEval(rowNum), new NumberEval(colNum), };
		} else {
			args = new Eval[] { arg0, new NumberEval(rowNum), };
		}
		
		double actual = NumericFunctionInvoker.invoke(new Index(), args);
		assertEquals(expectedResult, actual, 0D);
	}

