	public void testHasSharedBorderMethod()
	{
		assertFalse(col1.hasExactSharedBorder(col1));
		assertFalse(col2.hasExactSharedBorder(col2));
		assertTrue(col1.hasExactSharedBorder(col2));
		assertTrue(col2.hasExactSharedBorder(col1));

		assertFalse(row1.hasExactSharedBorder(row1));
		assertFalse(row2.hasExactSharedBorder(row2));
		assertTrue(row1.hasExactSharedBorder(row2));
		assertTrue(row2.hasExactSharedBorder(row1));
		
		assertFalse(row1.hasExactSharedBorder(col1));
		assertFalse(row1.hasExactSharedBorder(col2));
		assertFalse(col1.hasExactSharedBorder(row1));
		assertFalse(col2.hasExactSharedBorder(row1));
		assertFalse(row2.hasExactSharedBorder(col1));
		assertFalse(row2.hasExactSharedBorder(col2));
		assertFalse(col1.hasExactSharedBorder(row2));
		assertFalse(col2.hasExactSharedBorder(row2));
		assertTrue(col2.hasExactSharedBorder(col1));
		
		assertFalse(box1.hasExactSharedBorder(box1));
		assertTrue(box1.hasExactSharedBorder(box2));
		assertTrue(box1.hasExactSharedBorder(box3));
		assertFalse(box1.hasExactSharedBorder(box4));
		
		assertTrue(box2.hasExactSharedBorder(box1));
		assertFalse(box2.hasExactSharedBorder(box2));
		assertFalse(box2.hasExactSharedBorder(box3));
		assertTrue(box2.hasExactSharedBorder(box4));
		
		assertTrue(box3.hasExactSharedBorder(box1));
		assertFalse(box3.hasExactSharedBorder(box2));
		assertFalse(box3.hasExactSharedBorder(box3));
		assertTrue(box3.hasExactSharedBorder(box4));
		
		assertFalse(box4.hasExactSharedBorder(box1));
		assertTrue(box4.hasExactSharedBorder(box2));
		assertTrue(box4.hasExactSharedBorder(box3));
		assertFalse(box4.hasExactSharedBorder(box4));
	}

