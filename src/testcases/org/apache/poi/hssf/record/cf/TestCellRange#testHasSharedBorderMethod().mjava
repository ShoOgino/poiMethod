	public void testHasSharedBorderMethod()
	{
		assertFalse(col1.hasSharedBorder(col1));
		assertFalse(col2.hasSharedBorder(col2));
		assertTrue(col1.hasSharedBorder(col2));
		assertTrue(col2.hasSharedBorder(col1));

		assertFalse(row1.hasSharedBorder(row1));
		assertFalse(row2.hasSharedBorder(row2));
		assertTrue(row1.hasSharedBorder(row2));
		assertTrue(row2.hasSharedBorder(row1));
		
		assertFalse(row1.hasSharedBorder(col1));
		assertFalse(row1.hasSharedBorder(col2));
		assertFalse(col1.hasSharedBorder(row1));
		assertFalse(col2.hasSharedBorder(row1));
		assertFalse(row2.hasSharedBorder(col1));
		assertFalse(row2.hasSharedBorder(col2));
		assertFalse(col1.hasSharedBorder(row2));
		assertFalse(col2.hasSharedBorder(row2));
		assertTrue(col2.hasSharedBorder(col1));
		
		assertFalse(box1.hasSharedBorder(box1));
		assertTrue(box1.hasSharedBorder(box2));
		assertTrue(box1.hasSharedBorder(box3));
		assertFalse(box1.hasSharedBorder(box4));
		
		assertTrue(box2.hasSharedBorder(box1));
		assertFalse(box2.hasSharedBorder(box2));
		assertFalse(box2.hasSharedBorder(box3));
		assertTrue(box2.hasSharedBorder(box4));
		
		assertTrue(box3.hasSharedBorder(box1));
		assertFalse(box3.hasSharedBorder(box2));
		assertFalse(box3.hasSharedBorder(box3));
		assertTrue(box3.hasSharedBorder(box4));
		
		assertFalse(box4.hasSharedBorder(box1));
		assertTrue(box4.hasSharedBorder(box2));
		assertTrue(box4.hasSharedBorder(box3));
		assertFalse(box4.hasSharedBorder(box4));
	}

