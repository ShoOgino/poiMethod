	/**
	 * Confirms data sections are equal
	 * @param msgPrefix message prefix to be displayed in case of failure
	 * @param expectedData - just raw data (without ushort sid, ushort size)
	 * @param actualRecordBytes this includes 4 prefix bytes (sid & size)
	 */
	public static void confirmRecordEncoding(String msgPrefix, int expectedSid, byte[] expectedData, byte[] actualRecordBytes)
			throws AssertionFailedError {
		int expectedDataSize = expectedData.length;
		Assert.assertEquals("Size of encode data mismatch", actualRecordBytes.length - 4, expectedDataSize);
		Assert.assertEquals(expectedSid, LittleEndian.getShort(actualRecordBytes, 0));
		Assert.assertEquals(expectedDataSize, LittleEndian.getShort(actualRecordBytes, 2));
		for (int i = 0; i < expectedDataSize; i++)
			if (expectedData[i] != actualRecordBytes[i+4]) {
				StringBuilder sb = new StringBuilder(64);
				if (msgPrefix != null) {
					sb.append(msgPrefix).append(": ");
				}
				sb.append("At offset ").append(i);
				sb.append(": expected ").append(HexDump.byteToHex(expectedData[i]));
				sb.append(" but found ").append(HexDump.byteToHex(actualRecordBytes[i+4]));
				throw new AssertionFailedError(sb.toString());
			}
	}

