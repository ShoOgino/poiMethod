    public void testSerialization() {
    	byte[] recordData = new byte[]
    	{
       		(byte)0x03, (byte)0x00,
       		(byte)0x01,	(byte)0x00,
       		
       		(byte)0x00,	(byte)0x00,
       		(byte)0x03,	(byte)0x00,
       		(byte)0x00,	(byte)0x00,
       		(byte)0x03,	(byte)0x00,
       		
       		(byte)0x04,	(byte)0x00,
       		
       		(byte)0x00,	(byte)0x00,
       		(byte)0x01,	(byte)0x00,
       		(byte)0x00,	(byte)0x00,
       		(byte)0x01,	(byte)0x00,
       		
       		(byte)0x00,	(byte)0x00,
       		(byte)0x01,	(byte)0x00,
       		(byte)0x02,	(byte)0x00,
       		(byte)0x03,	(byte)0x00,
       		
       		(byte)0x02,	(byte)0x00,
       		(byte)0x03,	(byte)0x00,
       		(byte)0x00,	(byte)0x00,
       		(byte)0x01,	(byte)0x00,
       		
       		(byte)0x02,	(byte)0x00,
       		(byte)0x03,	(byte)0x00,
       		(byte)0x02,	(byte)0x00,
       		(byte)0x03,	(byte)0x00,
    	};
    	
    	CFHeaderRecord record = new CFHeaderRecord(new TestcaseRecordInputStream(CFHeaderRecord.sid, (short)recordData.length, recordData));
		
    	assertEquals("#CFRULES", 3, record.getNumberOfConditionalFormats());
    	assertTrue(record.getNeedRecalculation());
        CellRange enclosingCellRange = record.getEnclosingCellRange();
        assertEquals(0, enclosingCellRange.getFirstRow());
        assertEquals(3, enclosingCellRange.getLastRow());
        assertEquals(0, enclosingCellRange.getFirstColumn());
        assertEquals(3, enclosingCellRange.getLastColumn());
        List ranges = record.getCellRanges();
        assertEquals(0, ((CellRange)ranges.get(0)).getFirstRow());
        assertEquals(1, ((CellRange)ranges.get(0)).getLastRow());
        assertEquals(0, ((CellRange)ranges.get(0)).getFirstColumn());
        assertEquals(1, ((CellRange)ranges.get(0)).getLastColumn());
        assertEquals(0, ((CellRange)ranges.get(1)).getFirstRow());
        assertEquals(1, ((CellRange)ranges.get(1)).getLastRow());
        assertEquals(2, ((CellRange)ranges.get(1)).getFirstColumn());
        assertEquals(3, ((CellRange)ranges.get(1)).getLastColumn());
        assertEquals(2, ((CellRange)ranges.get(2)).getFirstRow());
        assertEquals(3, ((CellRange)ranges.get(2)).getLastRow());
        assertEquals(0, ((CellRange)ranges.get(2)).getFirstColumn());
        assertEquals(1, ((CellRange)ranges.get(2)).getLastColumn());
        assertEquals(2, ((CellRange)ranges.get(3)).getFirstRow());
        assertEquals(3, ((CellRange)ranges.get(3)).getLastRow());
        assertEquals(2, ((CellRange)ranges.get(3)).getFirstColumn());
        assertEquals(3, ((CellRange)ranges.get(3)).getLastColumn());
        assertEquals(recordData.length+4, record.getRecordSize());
    	
		byte[] output = record.serialize();
		
		assertEquals("Output size", recordData.length+4, output.length); //includes sid+recordlength
		
		for (int i = 0; i < recordData.length;i++) 
		{
			assertEquals("CFHeaderRecord doesn't match", recordData[i], output[i+4]);
		}
    }

