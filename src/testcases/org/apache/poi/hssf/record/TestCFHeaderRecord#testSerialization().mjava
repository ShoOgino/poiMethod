	public void testSerialization() {
		byte[] recordData = new byte[]
		{
			(byte)0x03, (byte)0x00,
			(byte)0x01,	(byte)0x00,
			
			(byte)0x00,	(byte)0x00,
			(byte)0x03,	(byte)0x00,
			(byte)0x00,	(byte)0x00,
			(byte)0x03,	(byte)0x00,
			
			(byte)0x04,	(byte)0x00,
			
			(byte)0x00,	(byte)0x00,
			(byte)0x01,	(byte)0x00,
			(byte)0x00,	(byte)0x00,
			(byte)0x01,	(byte)0x00,
			
			(byte)0x00,	(byte)0x00,
			(byte)0x01,	(byte)0x00,
			(byte)0x02,	(byte)0x00,
			(byte)0x03,	(byte)0x00,
			
			(byte)0x02,	(byte)0x00,
			(byte)0x03,	(byte)0x00,
			(byte)0x00,	(byte)0x00,
			(byte)0x01,	(byte)0x00,
			
			(byte)0x02,	(byte)0x00,
			(byte)0x03,	(byte)0x00,
			(byte)0x02,	(byte)0x00,
			(byte)0x03,	(byte)0x00,
		};

		CFHeaderRecord record = new CFHeaderRecord(new TestcaseRecordInputStream(CFHeaderRecord.sid, (short)recordData.length, recordData));

		assertEquals("#CFRULES", 3, record.getNumberOfConditionalFormats());
		assertTrue(record.getNeedRecalculation());
		CellRange enclosingCellRange = record.getEnclosingCellRange();
		assertEquals(0, enclosingCellRange.getFirstRow());
		assertEquals(3, enclosingCellRange.getLastRow());
		assertEquals(0, enclosingCellRange.getFirstColumn());
		assertEquals(3, enclosingCellRange.getLastColumn());
		CellRange[] ranges = record.getCellRanges();
		CellRange range0 = ranges[0];
		assertEquals(0, range0.getFirstRow());
		assertEquals(1, range0.getLastRow());
		assertEquals(0, range0.getFirstColumn());
		assertEquals(1, range0.getLastColumn());
		CellRange range1 = ranges[1];
		assertEquals(0, range1.getFirstRow());
		assertEquals(1, range1.getLastRow());
		assertEquals(2, range1.getFirstColumn());
		assertEquals(3, range1.getLastColumn());
		CellRange range2 = ranges[2];
		assertEquals(2, range2.getFirstRow());
		assertEquals(3, range2.getLastRow());
		assertEquals(0, range2.getFirstColumn());
		assertEquals(1, range2.getLastColumn());
		CellRange range3 = ranges[3];
		assertEquals(2, range3.getFirstRow());
		assertEquals(3, range3.getLastRow());
		assertEquals(2, range3.getFirstColumn());
		assertEquals(3, range3.getLastColumn());
		assertEquals(recordData.length+4, record.getRecordSize());

		byte[] output = record.serialize();

		assertEquals("Output size", recordData.length+4, output.length); //includes sid+recordlength

		for (int i = 0; i < recordData.length;i++) 
		{
			assertEquals("CFHeaderRecord doesn't match", recordData[i], output[i+4]);
		}
	}

