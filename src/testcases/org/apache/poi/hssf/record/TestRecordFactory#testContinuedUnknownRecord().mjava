    /**
     * TEST NAME:  Test Creating ContinueRecords After Unknown Records From An InputStream <P>
     * OBJECTIVE:  Test that the RecordFactory given an InputStream
     *             constructs the expected array of records.<P>
     * SUCCESS:    Record factory creates the expected records.<P>
     * FAILURE:    The wrong records are created or contain the wrong values <P>
     *
     */
    public void testContinuedUnknownRecord() {
        byte[]   data    = {
            0, -1, 0, 0, // an unknown record with 0 length
            0x3C , 0, 3, 0, 1, 2, 3, // a continuation record with 3 bytes of data
            0x3C , 0, 1, 0, 4 // one more continuation record with 1 byte of data
        };

        ByteArrayInputStream bois = new ByteArrayInputStream(data);
        Record[] records = (Record[])
          RecordFactory.createRecords(bois).toArray(new Record[0]);
        assertEquals("Created record count", 3, records.length);
        assertEquals("1st record's type",
                     UnknownRecord.class.getName(),
                     records[ 0 ].getClass().getName());
        assertEquals("1st record's sid", (short)-256, records[0].getSid());
        assertEquals("2nd record's type",
                     ContinueRecord.class.getName(),
                     records[ 1 ].getClass().getName());
        ContinueRecord record = (ContinueRecord) records[1];
        assertEquals("2nd record's sid", 0x3C, record.getSid());
        assertEquals("1st data byte", 1, record.getData()[ 0 ]);
        assertEquals("2nd data byte", 2, record.getData()[ 1 ]);
        assertEquals("3rd data byte", 3, record.getData()[ 2 ]);
        assertEquals("3rd record's type",
                     ContinueRecord.class.getName(),
                     records[ 2 ].getClass().getName());
        record = (ContinueRecord) records[2];
        assertEquals("3nd record's sid", 0x3C, record.getSid());
        assertEquals("4th data byte", 4, record.getData()[ 0 ]);
    }

