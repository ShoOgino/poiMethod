    /**
     * TEST NAME:  Test Basic Record Construction <P>
     * OBJECTIVE:  Test that the RecordFactory given the required parameters for know
     *             record types can construct the proper record w/values.<P>
     * SUCCESS:    Record factory creates the records with the expected values.<P>
     * FAILURE:    The wrong records are creates or contain the wrong values <P>
     *
     */
    public void testBasicRecordConstruction() {
        short    recType = BOFRecord.sid;
        byte[]   data    = {
            0, 6, 5, 0, -2, 28, -51, 7, -55, 64, 0, 0, 6, 1, 0, 0
        };
        short    size    = 16;
        Record[] record  = RecordFactory.createRecord(new TestcaseRecordInputStream(recType, size, data));

        assertEquals(BOFRecord.class.getName(),
                     record[ 0 ].getClass().getName());
        BOFRecord bofRecord = ( BOFRecord ) record[ 0 ];

        assertEquals(7422, bofRecord.getBuild());
        assertEquals(1997, bofRecord.getBuildYear());
        assertEquals(16585, bofRecord.getHistoryBitMask());
        assertEquals(20, bofRecord.getRecordSize());
        assertEquals(262, bofRecord.getRequiredVersion());
        assertEquals(2057, bofRecord.getSid());
        assertEquals(5, bofRecord.getType());
        assertEquals(1536, bofRecord.getVersion());
        recType = MMSRecord.sid;
        size    = 2;
        data    = new byte[]
        {
            0, 0
        };
        record  = RecordFactory.createRecord(new TestcaseRecordInputStream(recType, size, data));
        assertEquals(MMSRecord.class.getName(),
                     record[ 0 ].getClass().getName());
        MMSRecord mmsRecord = ( MMSRecord ) record[ 0 ];

        assertEquals(0, mmsRecord.getAddMenuCount());
        assertEquals(0, mmsRecord.getDelMenuCount());
        assertEquals(6, mmsRecord.getRecordSize());
        assertEquals(193, mmsRecord.getSid());
    }

