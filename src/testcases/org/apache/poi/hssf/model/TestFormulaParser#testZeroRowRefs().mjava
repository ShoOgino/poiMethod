	/**
	 * Zero is not a valid row number so cell references like 'A0' are not valid.
	 * Actually, they should be treated like defined names.
	 * <br/>
	 * In addition, leading zeros (on the row component) should be removed from cell
	 * references during parsing.
	 */
	public void testZeroRowRefs() {
		String badCellRef = "B0"; // bad because zero is not a valid row number
		String leadingZeroCellRef = "B000001"; // this should get parsed as "B1"
		HSSFWorkbook wb = new HSSFWorkbook();

		try {
			HSSFFormulaParser.parse(badCellRef, wb);
			throw new AssertionFailedError("Identified bug 47312b - Shouldn't be able to parse cell ref '"
					+ badCellRef + "'.");
		} catch (FormulaParseException e) {
			// expected during successful test
			confirmParseException(e, "Specified named range '"
					+ badCellRef + "' does not exist in the current workbook.");
		}

		Ptg[] ptgs;
		try {
			ptgs = HSSFFormulaParser.parse(leadingZeroCellRef, wb);
			assertEquals("B1", ((RefPtg) ptgs[0]).toFormulaString());
		} catch (FormulaParseException e) {
			confirmParseException(e, "Specified named range '"
					+ leadingZeroCellRef + "' does not exist in the current workbook.");
			// close but no cigar
			throw new AssertionFailedError("Identified bug 47312c - '"
					+ leadingZeroCellRef + "' should parse as 'B1'.");
		}

		// create a defined name called 'B0' and try again
		Name n = wb.createName();
		n.setNameName("B0");
		n.setRefersToFormula("1+1");
		ptgs = HSSFFormulaParser.parse("B0", wb);
		confirmTokenClasses(ptgs, NamePtg.class);
	}

