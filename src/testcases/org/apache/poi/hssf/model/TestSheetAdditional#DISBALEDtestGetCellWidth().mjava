	public void DISBALEDtestGetCellWidth() throws Exception
	{
		Sheet sheet = Sheet.createSheet();
		ColumnInfoRecord nci = ( ColumnInfoRecord ) sheet.createColInfo();

		// Prepare test model
		nci.setFirstColumn((short)5);
		nci.setLastColumn((short)10);
		nci.setColumnWidth((short)100);
		
		Field f = null;
		f = Sheet.class.getDeclaredField("columnSizes");
		f.setAccessible(true);
		List columnSizes = new ArrayList();
		f.set(sheet,columnSizes);
		columnSizes.add(nci);
		sheet.records.add(1 + sheet.dimsloc, nci);
		sheet.dimsloc++;

		assertEquals((short)100,sheet.getColumnWidth((short)5));
		assertEquals((short)100,sheet.getColumnWidth((short)6));
		assertEquals((short)100,sheet.getColumnWidth((short)7));
		assertEquals((short)100,sheet.getColumnWidth((short)8));
		assertEquals((short)100,sheet.getColumnWidth((short)9));
		assertEquals((short)100,sheet.getColumnWidth((short)10));

		sheet.setColumnWidth((short)6,(short)200);

		assertEquals((short)100,sheet.getColumnWidth((short)5));
		assertEquals((short)200,sheet.getColumnWidth((short)6));
		assertEquals((short)100,sheet.getColumnWidth((short)7));
		assertEquals((short)100,sheet.getColumnWidth((short)8));
		assertEquals((short)100,sheet.getColumnWidth((short)9));
		assertEquals((short)100,sheet.getColumnWidth((short)10));
	}

