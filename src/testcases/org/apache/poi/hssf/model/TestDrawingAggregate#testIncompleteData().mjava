    /**
     * when reading incomplete data ensure that the serialized bytes
     match the source
     */
    public void testIncompleteData(){
        //EscherDgContainer and EscherSpgrContainer length exceeds the actual length of the data
        String hex =
                " 0F 00 02 F0 30 03 00 00 10 00 08 F0 08 00 00 " +
                " 00 07 00 00 00 B2 04 00 00 0F 00 03 F0 18 03 00 " +
                " 00 0F 00 04 F0 28 00 00 00 01 00 09 F0 10 00 00 " +
                " 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                " 00 02 00 0A F0 08 00 00 00 00 04 00 00 05 00 00 " +
                " 00 0F 00 04 F0 74 00 00 00 92 0C 0A F0 08 00 00 " +
                " 00 AD 04 00 00 00 0A 00 00 63 00 0B F0 3A 00 00 " +
                " 00 7F 00 04 01 E5 01 BF 00 08 00 08 00 81 01 4E " +
                " 00 00 08 BF 01 10 00 10 00 80 C3 16 00 00 00 BF " +
                " 03 00 00 02 00 44 00 69 00 61 00 67 00 72 00 61 " +
                " 00 6D 00 6D 00 20 00 32 00 00 00 00 00 10 F0 12 " +
                " 00 00 00 00 00 05 00 00 00 01 00 00 00 0B 00 00 " +
                " 00 0F 00 66 00 00 00 11 F0 00 00 00 00 ";
        byte[] buffer = HexRead.readFromString(hex);

        List<EscherRecord> records = new ArrayList<EscherRecord>();
        EscherRecordFactory recordFactory = new DefaultEscherRecordFactory();
        int pos = 0;
        while (pos < buffer.length) {
            EscherRecord r = recordFactory.createRecord(buffer, pos);
            int bytesRead = r.fillFields(buffer, pos, recordFactory);
            records.add(r);
            pos += bytesRead;
        }
        assertEquals("data was not fully read", buffer.length, pos);

        // serialize to byte array
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        try {
            for(EscherRecord r : records) out.write(r.serialize());
        } catch (IOException e){
            throw new RuntimeException(e);
        }
        assertEquals(HexDump.toHex(buffer, 10), HexDump.toHex(out.toByteArray(), 10));
    }

