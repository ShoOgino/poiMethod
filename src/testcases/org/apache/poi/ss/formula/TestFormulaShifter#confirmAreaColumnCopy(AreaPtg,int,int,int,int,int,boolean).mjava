    private static void confirmAreaColumnCopy(AreaPtg aptg,
                                           int firstColumnCopied, int lastColumnCopied, int columnOffset,
                                           int expectedFirstColumn, int expectedLastColumn, boolean expectedChanged) {

        final AreaPtg copyPtg = (AreaPtg) aptg.copy(); // clone so we can re-use aptg in calling method
        final Ptg[] ptgs = { copyPtg, };
        final FormulaShifter fs = FormulaShifter.createForColumnCopy(0, null, firstColumnCopied, lastColumnCopied, columnOffset, SpreadsheetVersion.EXCEL2007);
        final boolean actualChanged = fs.adjustFormula(ptgs, 0);

        // DeletedAreaRef
        if (expectedFirstColumn < 0 || expectedLastColumn < 0) {
            assertEquals("Reference should have shifted off worksheet, producing #REF! error: " + ptgs[0],
                    AreaErrPtg.class, ptgs[0].getClass());
            return;
        }

        assertEquals("Should this AreaPtg change due to column copy?", expectedChanged, actualChanged);
        assertEquals("AreaPtgs should be modified in-place when a column containing the AreaPtg is copied", copyPtg, ptgs[0]);  // expected to change in place (although this is not a strict requirement)
        assertEquals("AreaPtg first column", expectedFirstColumn, copyPtg.getFirstColumn());
        assertEquals("AreaPtg last column", expectedLastColumn, copyPtg.getLastColumn());

    }

