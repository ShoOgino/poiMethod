	private static void confirmAreaShift(AreaPtg aptg,
			int firstRowMoved, int lastRowMoved, int numberRowsMoved,
			int expectedAreaFirstRow, int expectedAreaLastRow) {

		FormulaShifter fs = FormulaShifter.createForRowShift(0, "", firstRowMoved, lastRowMoved, numberRowsMoved);
		boolean expectedChanged = aptg.getFirstRow() != expectedAreaFirstRow || aptg.getLastRow() != expectedAreaLastRow;

		AreaPtg copyPtg = (AreaPtg) aptg.copy(); // clone so we can re-use aptg in calling method
		Ptg[] ptgs = { copyPtg, };
		boolean actualChanged = fs.adjustFormula(ptgs, 0);
		if (expectedAreaFirstRow < 0) {
			assertEquals(AreaErrPtg.class, ptgs[0].getClass());
			return;
		}
		assertEquals(expectedChanged, actualChanged);
		assertEquals(copyPtg, ptgs[0]);  // expected to change in place (although this is not a strict requirement)
		assertEquals(expectedAreaFirstRow, copyPtg.getFirstRow());
		assertEquals(expectedAreaLastRow, copyPtg.getLastRow());

	}

