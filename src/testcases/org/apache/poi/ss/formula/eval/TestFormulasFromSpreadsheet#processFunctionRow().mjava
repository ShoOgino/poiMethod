    @Test
    public void processFunctionRow() {
        Row formulasRow = sheet.getRow(formulasRowIdx);
        Row expectedValuesRow = sheet.getRow(expectedValuesRowIdx);

        short endcolnum = formulasRow.getLastCellNum();

       // iterate across the row for all the evaluation cases
       for (int colnum=SS.COLUMN_INDEX_FIRST_TEST_VALUE; colnum < endcolnum; colnum++) {
           Cell c = formulasRow.getCell(colnum);
           if (c == null || c.getCellTypeEnum() != CellType.FORMULA) {
               continue;
           }

           CellValue actValue = evaluator.evaluate(c);
           Cell expValue = (expectedValuesRow == null) ? null : expectedValuesRow.getCell(colnum);

           String msg = String.format(Locale.ROOT, "Function '%s': Formula: %s @ %d:%d"
                   , targetFunctionName, c.getCellFormula(), formulasRow.getRowNum(), colnum);

           assertNotNull(msg + " - Bad setup data expected value is null", expValue);
           assertNotNull(msg + " - actual value was null", actValue);

           final CellType cellType = expValue.getCellTypeEnum();
           switch (cellType) {
               case BLANK:
                   assertEquals(msg, CellType.BLANK, actValue.getCellTypeEnum());
                   break;
               case BOOLEAN:
                   assertEquals(msg, CellType.BOOLEAN, actValue.getCellTypeEnum());
                   assertEquals(msg, expValue.getBooleanCellValue(), actValue.getBooleanValue());
                   break;
               case ERROR:
                   assertEquals(msg, CellType.ERROR, actValue.getCellTypeEnum());
                   assertEquals(msg, ErrorEval.getText(expValue.getErrorCellValue()), ErrorEval.getText(actValue.getErrorValue()));
                   break;
               case FORMULA: // will never be used, since we will call method after formula evaluation
                   fail("Cannot expect formula as result of formula evaluation: " + msg);
               case NUMERIC:
                   assertEquals(msg, CellType.NUMERIC, actValue.getCellTypeEnum());
                   TestMathX.assertEquals(msg, expValue.getNumericCellValue(), actValue.getNumberValue(), TestMathX.POS_ZERO, TestMathX.DIFF_TOLERANCE_FACTOR);
                   break;
               case STRING:
                   assertEquals(msg, CellType.STRING, actValue.getCellTypeEnum());
                   assertEquals(msg, expValue.getRichStringCellValue().getString(), actValue.getStringValue());
                   break;
               default:
                   fail("Unexpected cell type: " + cellType);
           }
       }
   }

