	public void testTextWithDeciamlFormatSecondArg() {

		ValueEval numArg = new NumberEval(321321.321);
		ValueEval formatArg = new StringEval("#,###.00000");
		ValueEval[] args = { numArg, formatArg };
		ValueEval result = T.TEXT.evaluate(args, -1, (short)-1);
		char groupSeparator = new DecimalFormatSymbols(Locale.getDefault()).getGroupingSeparator();
		char decimalSeparator = new DecimalFormatSymbols(Locale.getDefault()).getDecimalSeparator();
		ValueEval testResult = new StringEval("321" + groupSeparator + "321" + decimalSeparator + "32100");
		assertEquals(testResult.toString(), result.toString());
		numArg = new NumberEval(321.321);
		formatArg = new StringEval("00000.00000");
		args[0] = numArg;
		args[1] = formatArg;
		result = T.TEXT.evaluate(args, -1, (short)-1);
		testResult = new StringEval("00321" + decimalSeparator + "32100");
		assertEquals(testResult.toString(), result.toString());

		formatArg = new StringEval("$#.#");
		args[1] = formatArg;
		result = T.TEXT.evaluate(args, -1, (short)-1);
		testResult = new StringEval("$321" + decimalSeparator + "3");
		assertEquals(testResult.toString(), result.toString());
	}

