    @Test
    public void processFunctionRow() throws Exception {
        HSSFRow r = sheet.getRow(formulasRowIdx);
        HSSFCell evalCell = r.getCell(SS.COLUMN_INDEX_EVALUATION);
        HSSFCell expectedCell = r.getCell(SS.COLUMN_INDEX_EXPECTED_RESULT);
        
        CellReference cr = new CellReference(sheet.getSheetName(), formulasRowIdx, evalCell.getColumnIndex(), false, false);
        String msg = String.format(Locale.ROOT, "In %s %s {=%s} '%s'"
            , filename, cr.formatAsString(), evalCell.getCellFormula(), testName);

        CellValue actualValue = evaluator.evaluate(evalCell);

        assertNotNull(msg + " - Bad setup data expected value is null", expectedCell);
        assertNotNull(msg + " - actual value was null", actualValue);

        if (expectedCell.getCellType() == HSSFCell.CELL_TYPE_ERROR) {
            int expectedErrorCode = expectedCell.getErrorCellValue();
            assertEquals(msg, HSSFCell.CELL_TYPE_ERROR, actualValue.getCellType());
            assertEquals(msg, ErrorEval.getText(expectedErrorCode), actualValue.formatAsString());
            assertEquals(msg, expectedErrorCode, actualValue.getErrorValue());
            assertEquals(msg, ErrorEval.getText(expectedErrorCode), ErrorEval.getText(actualValue.getErrorValue()));
            return;
        }

        // unexpected error
        assertNotEquals(msg, HSSFCell.CELL_TYPE_ERROR, actualValue.getCellType());
        assertNotEquals(msg, formatValue(expectedCell), ErrorEval.getText(actualValue.getErrorValue()));

        // wrong type error
        assertEquals(msg, expectedCell.getCellType(), actualValue.getCellType());

        switch (expectedCell.getCellType()) {
            case HSSFCell.CELL_TYPE_BOOLEAN:
                assertEquals(msg, expectedCell.getBooleanCellValue(), actualValue.getBooleanValue());
                break;
            case HSSFCell.CELL_TYPE_FORMULA: // will never be used, since we will call method after formula evaluation
                fail("Cannot expect formula as result of formula evaluation: " + msg);
            case HSSFCell.CELL_TYPE_NUMERIC:
                assertEquals(expectedCell.getNumericCellValue(), actualValue.getNumberValue(), 0.0);
                break;
            case HSSFCell.CELL_TYPE_STRING:
                assertEquals(msg, expectedCell.getRichStringCellValue().getString(), actualValue.getStringValue());
                break;
        }
    }

