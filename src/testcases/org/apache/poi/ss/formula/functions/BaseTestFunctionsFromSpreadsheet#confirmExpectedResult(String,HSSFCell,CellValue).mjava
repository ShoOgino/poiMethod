    private static void confirmExpectedResult(String msg, HSSFCell expected, CellValue actual) {
        if (expected == null) {
            throw new AssertionFailedError(msg + " - Bad setup data expected value is null");
        }
        if(actual == null) {
            throw new AssertionFailedError(msg + " - actual value was null");
        }
        if(expected.getCellType() == HSSFCell.CELL_TYPE_ERROR) {
            confirmErrorResult(msg, expected.getErrorCellValue(), actual);
            return;
        }
        if(actual.getCellType() == HSSFCell.CELL_TYPE_ERROR) {
            throw unexpectedError(msg, expected, actual.getErrorValue());
        }
        if(actual.getCellType() != expected.getCellType()) {
            throw wrongTypeError(msg, expected, actual);
        }


        switch (expected.getCellType()) {
            case HSSFCell.CELL_TYPE_BOOLEAN:
                assertEquals(msg, expected.getBooleanCellValue(), actual.getBooleanValue());
                break;
            case HSSFCell.CELL_TYPE_FORMULA: // will never be used, since we will call method after formula evaluation
                throw new IllegalStateException("Cannot expect formula as result of formula evaluation: " + msg);
            case HSSFCell.CELL_TYPE_NUMERIC:
                assertEquals(expected.getNumericCellValue(), actual.getNumberValue(), 0.0);
                break;
            case HSSFCell.CELL_TYPE_STRING:
                assertEquals(msg, expected.getRichStringCellValue().getString(), actual.getStringValue());
                break;
        }
    }

