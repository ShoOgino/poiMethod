	public void testEvaluateMultipleWorkbooks() {
		HSSFWorkbook wbA = HSSFTestDataSamples.openSampleWorkbook("multibookFormulaA.xls");
		HSSFWorkbook wbB = HSSFTestDataSamples.openSampleWorkbook("multibookFormulaB.xls");

		HSSFFormulaEvaluator evaluatorA = new HSSFFormulaEvaluator(wbA);
		HSSFFormulaEvaluator evaluatorB = new HSSFFormulaEvaluator(wbB);

		// Hook up the workbook evaluators to enable evaluation of formulas across books
		String[] bookNames = { "multibookFormulaA.xls", "multibookFormulaB.xls", };
		HSSFFormulaEvaluator[] evaluators = { evaluatorA, evaluatorB, };
		HSSFFormulaEvaluator.setupEnvironment(bookNames, evaluators);

		HSSFCell cell;

		HSSFSheet aSheet1 = wbA.getSheetAt(0);
		HSSFSheet bSheet1 = wbB.getSheetAt(0);

		// Simple case - single link from wbA to wbB
		confirmFormula(wbA, 0, 0, 0, "[multibookFormulaB.xls]BSheet1!B1");
		cell = aSheet1.getRow(0).getCell(0);
		confirmEvaluation(35, evaluatorA, cell);


		// more complex case - back link into wbA
		// [wbA]ASheet1!A2 references (among other things) [wbB]BSheet1!B2
		confirmFormula(wbA, 0, 1, 0, "[multibookFormulaB.xls]BSheet1!$B$2+2*A3");
		// [wbB]BSheet1!B2 references (among other things) [wbA]AnotherSheet!A1:B2
		confirmFormula(wbB, 0, 1, 1, "SUM([multibookFormulaA.xls]AnotherSheet!$A$1:$B$2)+B3");

		cell = aSheet1.getRow(1).getCell(0);
		confirmEvaluation(264, evaluatorA, cell);

		// change [wbB]BSheet1!B3 (from 50 to 60)
		bSheet1.getRow(2).getCell(1).setCellValue(60);
		evaluatorB.setCachedPlainValue(bSheet1, 2, 1, new NumberEval(60));
		confirmEvaluation(274, evaluatorA, cell);

		// change [wbA]ASheet1!A3 (from 100 to 80)
		aSheet1.getRow(2).getCell(0).setCellValue(80);
		evaluatorA.setCachedPlainValue(aSheet1, 2, 0, new NumberEval(80));
		confirmEvaluation(234, evaluatorA, cell);

		// change [wbA]AnotherSheet!A1 (from 2 to 3)
		wbA.getSheetAt(1).getRow(0).getCell(0).setCellValue(3);
		evaluatorA.setCachedPlainValue(wbA.getSheetAt(1), 0, 0, new NumberEval(3));
		confirmEvaluation(235, evaluatorA, cell);
	}

