    @Test
    public void testCreateDataBarFormatting() throws IOException {
        Workbook wb1 = _testDataProvider.createWorkbook();
        Sheet sheet = wb1.createSheet();

        String colorHex = "FFFFEB84";
        ExtendedColor color = wb1.getCreationHelper().createExtendedColor();
        color.setARGBHex(colorHex);
        SheetConditionalFormatting sheetCF = sheet.getSheetConditionalFormatting();
        ConditionalFormattingRule rule1 = 
                sheetCF.createConditionalFormattingRule(color);
        DataBarFormatting dbFmt = rule1.getDataBarFormatting();
        
        assertEquals(false, dbFmt.isIconOnly());
        assertEquals(true, dbFmt.isLeftToRight());
        assertEquals(0,   dbFmt.getWidthMin());
        assertEquals(100, dbFmt.getWidthMax());
        assertColour(colorHex, dbFmt.getColor());
        
        dbFmt.getMinThreshold().setRangeType(RangeType.MIN);
        dbFmt.getMaxThreshold().setRangeType(RangeType.MAX);
        
        CellRangeAddress [] regions = { CellRangeAddress.valueOf("A1:A5") };
        sheetCF.addConditionalFormatting(regions, rule1);
        
        // Save, re-load and re-check
        Workbook wb2 = _testDataProvider.writeOutAndReadBack(wb1);
        wb1.close();
        sheet = wb2.getSheetAt(0);
        sheetCF = sheet.getSheetConditionalFormatting();
        assertEquals(1, sheetCF.getNumConditionalFormattings());
        
        ConditionalFormatting cf = sheetCF.getConditionalFormattingAt(0);
        assertEquals(1, cf.getNumberOfRules());
        rule1 = cf.getRule(0);
        dbFmt = rule1.getDataBarFormatting();
        assertEquals(ConditionType.DATA_BAR, rule1.getConditionType());
        
        assertEquals(false, dbFmt.isIconOnly());
        assertEquals(true, dbFmt.isLeftToRight());
        assertEquals(0,   dbFmt.getWidthMin());
        assertEquals(100, dbFmt.getWidthMax());
        assertColour(colorHex, dbFmt.getColor());

        assertEquals(RangeType.MIN, dbFmt.getMinThreshold().getRangeType());
        assertEquals(RangeType.MAX, dbFmt.getMaxThreshold().getRangeType());
        assertEquals(null, dbFmt.getMinThreshold().getValue());
        assertEquals(null, dbFmt.getMaxThreshold().getValue());
        
        wb2.close();
    }

