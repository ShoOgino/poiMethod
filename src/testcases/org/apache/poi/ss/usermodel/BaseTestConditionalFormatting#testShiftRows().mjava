    public void testShiftRows() {

        Workbook wb = _testDataProvider.createWorkbook();
        Sheet sheet = wb.createSheet();

        SheetConditionalFormatting sheetCF = sheet.getSheetConditionalFormatting();

        ConditionalFormattingRule rule1 = sheetCF.createConditionalFormattingRule(
                ComparisonOperator.BETWEEN, "SUM(A10:A15)", "1+SUM(B16:B30)");
        FontFormatting fontFmt = rule1.createFontFormatting();
        fontFmt.setFontStyle(true, false);

        PatternFormatting patternFmt = rule1.createPatternFormatting();
        patternFmt.setFillBackgroundColor(IndexedColors.YELLOW.index);
        ConditionalFormattingRule [] cfRules = { rule1, };

        CellRangeAddress [] regions = {
            new CellRangeAddress(2, 4, 0, 0), // A3:A5
        };
        sheetCF.addConditionalFormatting(regions, cfRules);

        // This row-shift should destroy the CF region
        sheet.shiftRows(10, 20, -9);
        assertEquals(0, sheetCF.getNumConditionalFormattings());

        // re-add the CF
        sheetCF.addConditionalFormatting(regions, cfRules);

        // This row shift should only affect the formulas
        sheet.shiftRows(14, 17, 8);
        ConditionalFormatting cf = sheetCF.getConditionalFormattingAt(0);
        assertEquals("SUM(A10:A23)", cf.getRule(0).getFormula1());
        assertEquals("1+SUM(B24:B30)", cf.getRule(0).getFormula2());

        sheet.shiftRows(0, 8, 21);
        cf = sheetCF.getConditionalFormattingAt(0);
        assertEquals("SUM(A10:A21)", cf.getRule(0).getFormula1());
        assertEquals("1+SUM(#REF!)", cf.getRule(0).getFormula2());
    }

