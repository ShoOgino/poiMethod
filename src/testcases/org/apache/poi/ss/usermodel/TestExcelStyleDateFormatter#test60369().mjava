    /**
     * [Bug 60369] Month format 'MMMMM' issue with TEXT-formula and Java 8
     */
    @Test
    public void test60369() throws ParseException {
        Map<Locale, List<String>> testMap = initializeLocales();

        // We have to set up dates as well.
        SimpleDateFormat testDateFormat = new SimpleDateFormat("dd.MM.yyyy", Locale.ROOT);
        List<Date> testDates = Arrays.asList(
                testDateFormat.parse("12.01.1980"),
                testDateFormat.parse("11.02.1995"),
                testDateFormat.parse("10.03.2045"),
                testDateFormat.parse("09.04.2016"),
                testDateFormat.parse("08.05.2017"),
                testDateFormat.parse("07.06.1945"),
                testDateFormat.parse("06.07.1998"),
                testDateFormat.parse("05.08.2099"),
                testDateFormat.parse("04.09.1988"),
                testDateFormat.parse("03.10.2023"),
                testDateFormat.parse("02.11.1978"),
                testDateFormat.parse("01.12.1890"));

        // Let's iterate over the test setup.
        for (Locale locale : testMap.keySet()) {
            ExcelStyleDateFormatter formatter = new ExcelStyleDateFormatter(EXCEL_DATE_FORMAT, new DateFormatSymbols(locale));
            for (int i = 0; i < testDates.size(); i++) {
                // Call the method to be tested!
                String result =
                        formatter.format(testDates.get(i),
                                new StringBuffer(),
                                new FieldPosition(java.text.DateFormat.MONTH_FIELD)).toString();
                //System.err.println(result +  " - " + getUnicode(result.charAt(0)));
                assertEquals("Failed for locale " + locale + ", provider: " + System.getProperty("java.locale.providers") +
                        " and date " + testDates.get(i) + ", having: " + result,
                        getUnicode(testMap.get(locale).get(i).charAt(0)), getUnicode(result.charAt(0)));
            }
        }
    }

