    @Test
    public void testSetValues() throws Exception {
        Workbook book = _testDataProvider.createWorkbook();
        Sheet sheet = book.createSheet("test");
        Row row = sheet.createRow(0);

        CreationHelper factory = book.getCreationHelper();
        Cell cell = row.createCell(0);

        cell.setCellValue(1.2);
        assertEquals(1.2, cell.getNumericCellValue(), 0.0001);
        assertEquals(Cell.CELL_TYPE_NUMERIC, cell.getCellType());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_BOOLEAN, Cell.CELL_TYPE_STRING,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_ERROR);

        cell.setCellValue(false);
        assertEquals(false, cell.getBooleanCellValue());
        assertEquals(Cell.CELL_TYPE_BOOLEAN, cell.getCellType());
        cell.setCellValue(true);
        assertEquals(true, cell.getBooleanCellValue());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_NUMERIC, Cell.CELL_TYPE_STRING,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_ERROR);

        cell.setCellValue(factory.createRichTextString("Foo"));
        assertEquals("Foo", cell.getRichStringCellValue().getString());
        assertEquals("Foo", cell.getStringCellValue());
        assertEquals(Cell.CELL_TYPE_STRING, cell.getCellType());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_NUMERIC, Cell.CELL_TYPE_BOOLEAN,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_ERROR);

        cell.setCellValue("345");
        assertEquals("345", cell.getRichStringCellValue().getString());
        assertEquals("345", cell.getStringCellValue());
        assertEquals(Cell.CELL_TYPE_STRING, cell.getCellType());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_NUMERIC, Cell.CELL_TYPE_BOOLEAN,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_ERROR);

        Calendar c = LocaleUtil.getLocaleCalendar();
        c.setTimeInMillis(123456789);
        cell.setCellValue(c.getTime());
        assertEquals(c.getTime().getTime(), cell.getDateCellValue().getTime());
        assertEquals(Cell.CELL_TYPE_NUMERIC, cell.getCellType());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_BOOLEAN, Cell.CELL_TYPE_STRING,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_ERROR);

        cell.setCellValue(c);
        assertEquals(c.getTime().getTime(), cell.getDateCellValue().getTime());
        assertEquals(Cell.CELL_TYPE_NUMERIC, cell.getCellType());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_BOOLEAN, Cell.CELL_TYPE_STRING,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_ERROR);

        cell.setCellErrorValue(FormulaError.NA.getCode());
        assertEquals(FormulaError.NA.getCode(), cell.getErrorCellValue());
        assertEquals(Cell.CELL_TYPE_ERROR, cell.getCellType());
        assertProhibitedValueAccess(cell, Cell.CELL_TYPE_NUMERIC, Cell.CELL_TYPE_BOOLEAN,
                Cell.CELL_TYPE_FORMULA, Cell.CELL_TYPE_STRING);
        
        book.close();
    }

