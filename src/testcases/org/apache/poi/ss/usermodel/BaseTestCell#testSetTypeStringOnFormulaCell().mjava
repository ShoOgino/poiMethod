	/**
	 * similar to {@link #testConvertStringFormulaCell()} but  checks at a
	 * lower level that {#link {@link Cell#setCellType(int)} works properly
	 */
	@Test
	public void testSetTypeStringOnFormulaCell() {
		Cell cellA1 = createACell();
		FormulaEvaluator fe = cellA1.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();

		cellA1.setCellFormula("\"DEF\"");
		fe.clearAllCachedResultValues();
		fe.evaluateFormulaCell(cellA1);
		assertEquals("DEF", cellA1.getStringCellValue());
		cellA1.setCellType(Cell.CELL_TYPE_STRING);
		assertEquals("DEF", cellA1.getStringCellValue());

		cellA1.setCellFormula("25.061");
		fe.clearAllCachedResultValues();
		fe.evaluateFormulaCell(cellA1);
		confirmCannotReadString(cellA1);
		assertEquals(25.061, cellA1.getNumericCellValue(), 0.0);
		cellA1.setCellType(Cell.CELL_TYPE_STRING);
		assertEquals("25.061", cellA1.getStringCellValue());

		cellA1.setCellFormula("TRUE");
		fe.clearAllCachedResultValues();
		fe.evaluateFormulaCell(cellA1);
		confirmCannotReadString(cellA1);
		assertEquals(true, cellA1.getBooleanCellValue());
		cellA1.setCellType(Cell.CELL_TYPE_STRING);
		assertEquals("TRUE", cellA1.getStringCellValue());

		cellA1.setCellFormula("#NAME?");
		fe.clearAllCachedResultValues();
		fe.evaluateFormulaCell(cellA1);
		confirmCannotReadString(cellA1);
		assertEquals(ErrorConstants.ERROR_NAME, cellA1.getErrorCellValue());
		cellA1.setCellType(Cell.CELL_TYPE_STRING);
		assertEquals("#NAME?", cellA1.getStringCellValue());
	}

