    @Test
    public void applyBorders() throws IOException {
        CellRangeAddress a1c3 = new CellRangeAddress(0, 2, 0, 2);
        CellRangeAddress b2 = new CellRangeAddress(1, 1, 1, 1);
        BorderPropertyTemplate pt = new BorderPropertyTemplate();
        Workbook wb = new HSSFWorkbook();
        Sheet sheet = wb.createSheet();
        
        pt.drawBorders(a1c3, BorderStyle.THIN, IndexedColors.RED.getIndex(), BorderExtent.ALL);
        pt.applyBorders(sheet);
        
        for (Row row: sheet) {
            for (Cell cell: row) {
                CellStyle cs = cell.getCellStyle();
                
                assertThin(cs.getBorderTop());
                assertRed(cs.getTopBorderColor());
                
                assertThin(cs.getBorderBottom());
                assertRed(cs.getBottomBorderColor());
                
                assertThin(cs.getBorderLeft());
                assertRed(cs.getLeftBorderColor());
                
                assertThin(cs.getBorderRight());
                assertRed(cs.getRightBorderColor());
            }
        }
        
        pt.drawBorders(b2, BorderStyle.NONE, BorderExtent.ALL);
        pt.applyBorders(sheet);
        
        for (Row row: sheet) {
            for (Cell cell: row) {
                CellStyle cs = cell.getCellStyle();
                if (cell.getColumnIndex() != 1 || row.getRowNum() == 0) {
                    assertThin(cs.getBorderTop());
                    assertRed(cs.getTopBorderColor());
                } else {
                    assertNone(cs.getBorderTop());
                }
                if (cell.getColumnIndex() != 1 || row.getRowNum() == 2) {
                    assertThin(cs.getBorderBottom());
                    assertRed(cs.getBottomBorderColor());
                } else {
                    assertNone(cs.getBorderBottom());
                }
                if (cell.getColumnIndex() == 0 || row.getRowNum() != 1) {
                    assertThin(cs.getBorderLeft());
                    assertRed(cs.getLeftBorderColor());
                } else {
                    assertNone(cs.getBorderLeft());
                }
                if (cell.getColumnIndex() == 2 || row.getRowNum() != 1) {
                    assertThin(cs.getBorderRight());
                    assertRed(cs.getRightBorderColor());
                } else {
                    assertNone(cs.getBorderRight());
                }
            }
        }
        
        wb.close();
    }

