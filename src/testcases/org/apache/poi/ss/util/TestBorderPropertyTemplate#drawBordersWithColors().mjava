    @Test
    public void drawBordersWithColors() throws IOException {
        CellRangeAddress a1c3 = new CellRangeAddress(0, 2, 0, 2);
        BorderPropertyTemplate pt = new BorderPropertyTemplate();
        
        pt.drawBorders(a1c3, BorderStyle.MEDIUM, RED, BorderExtent.ALL);
        for (int i = 0; i <= 2; i++) {
            for (int j = 0; j <= 2; j++) {
                CellAddress addr = new CellAddress(i, j);
                assertEquals(4, pt.getNumBorders(addr));
                assertEquals(4, pt.getNumBorderColors(addr));
                assertMedium(pt.getTemplateProperty(addr, CellUtil.BORDER_TOP));
                assertMedium(pt.getTemplateProperty(addr, CellUtil.BORDER_BOTTOM));
                assertMedium(pt.getTemplateProperty(addr, CellUtil.BORDER_LEFT));
                assertMedium(pt.getTemplateProperty(addr, CellUtil.BORDER_RIGHT));
                assertRed(pt.getTemplateProperty(addr, CellUtil.TOP_BORDER_COLOR));
                assertRed(pt.getTemplateProperty(addr, CellUtil.BOTTOM_BORDER_COLOR));
                assertRed(pt.getTemplateProperty(addr, CellUtil.LEFT_BORDER_COLOR));
                assertRed(pt.getTemplateProperty(addr, CellUtil.RIGHT_BORDER_COLOR));
            }
        }
        
        pt.drawBorders(a1c3, BorderStyle.NONE, BorderExtent.NONE);
        pt.drawBorders(a1c3, BorderStyle.NONE, RED, BorderExtent.ALL);
        for (int i = 0; i <= 2; i++) {
            for (int j = 0; j <= 2; j++) {
                CellAddress addr = new CellAddress(i, j);
                assertEquals(4, pt.getNumBorders(addr));
                assertEquals(0, pt.getNumBorderColors(addr));
                assertNone(pt.getTemplateProperty(addr, CellUtil.BORDER_TOP));
                assertNone(pt.getTemplateProperty(addr, CellUtil.BORDER_BOTTOM));
                assertNone(pt.getTemplateProperty(addr, CellUtil.BORDER_LEFT));
                assertNone(pt.getTemplateProperty(addr, CellUtil.BORDER_RIGHT));
            }
        }
    }

