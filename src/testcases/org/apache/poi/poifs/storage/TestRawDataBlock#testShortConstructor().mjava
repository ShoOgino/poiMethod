	/**
	 * Test creating a short RawDataBlock
	 * Will trigger a warning, but no longer an IOException,
	 *  as people seem to have "valid" truncated files
	 */
	public void testShortConstructor() throws Exception {
		// Get the logger to be used
		DummyPOILogger logger = new DummyPOILogger();
		Field fld = RawDataBlock.class.getDeclaredField("log");
		fld.setAccessible(true);
		fld.set(null, logger);
		assertEquals(0, logger.logged.size());

		// Test for various data sizes
		for (int k = 1; k <= 512; k++)
		{
			byte[] data = new byte[ k ];

			for (int j = 0; j < k; j++)
			{
				data[ j ] = ( byte ) j;
			}
			RawDataBlock block = null;

			logger.reset();
			assertEquals(0, logger.logged.size());

			// Have it created
			block = new RawDataBlock(new ByteArrayInputStream(data));
			assertNotNull(block);

			// Check for the warning is there for <512
			if(k < 512) {
				assertEquals(
						"Warning on " + k + " byte short block",
						1, logger.logged.size()
				);

				// Build the expected warning message, and check
				String bts = k + " byte";
				if(k > 1) {
					bts += "s";
				}

				assertEquals(
						"7 - Unable to read entire block; "+bts+" read before EOF; expected 512 bytes. Your document was either written by software that ignores the spec, or has been truncated!",
						(String)(logger.logged.get(0))
				);
			} else {
				assertEquals(0, logger.logged.size());
			}
		}
	}

