	/**
	 * Most OLE2 files use 512byte blocks. However, a small number
	 *  use 4k blocks. Check that we can open these.
	 */
	public void test4KBlocks() throws Exception {
      POIDataSamples _samples = POIDataSamples.getPOIFSInstance();
	   InputStream inp = _samples.openResourceAsStream("BlockSize4096.zvi");
	   
	   // First up, check that we can process the header properly
      HeaderBlockReader header_block_reader = new HeaderBlockReader(inp);
      POIFSBigBlockSize bigBlockSize = header_block_reader.getBigBlockSize();
      assertEquals(4096, bigBlockSize.getBigBlockSize());
      
      // Check the fat info looks sane
      assertEquals(109, header_block_reader.getBATArray().length);
      assertTrue(header_block_reader.getBATCount() > 0);
      assertEquals(0, header_block_reader.getXBATCount());
      
      // Now check we can get the basic fat
      RawDataBlockList data_blocks = new RawDataBlockList(inp, bigBlockSize);

	   
	   // Now try and open properly
	   POIFSFileSystem fs = new POIFSFileSystem(
	         _samples.openResourceAsStream("BlockSize4096.zvi")
	   );
	   assertTrue(fs.getRoot().getEntryCount() > 3);
	   
	   // Check we can get at all the contents
	   checkAllDirectoryContents(fs.getRoot());
	   
	   
	   // Finally, check we can do a similar 512byte one too
	   fs = new POIFSFileSystem(
            _samples.openResourceAsStream("BlockSize512.zvi")
      );
      assertTrue(fs.getRoot().getEntryCount() > 3);
      checkAllDirectoryContents(fs.getRoot());
	}

