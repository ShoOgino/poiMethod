    public void testAreDirectoriesIdentical() throws Exception {
       POIFSFileSystem fs = new POIFSFileSystem();
       DirectoryEntry dirA = fs.createDirectory("DirA");
       DirectoryEntry dirB = fs.createDirectory("DirB");
       
       // Names must match
       assertEquals(false, EntryUtils.areDirectoriesIdentical(dirA, dirB));
       
       // Empty dirs are fine
       DirectoryEntry dirA1 = dirA.createDirectory("TheDir"); 
       DirectoryEntry dirB1 = dirB.createDirectory("TheDir");
       assertEquals(0, dirA1.getEntryCount());
       assertEquals(0, dirB1.getEntryCount());
       assertEquals(true, EntryUtils.areDirectoriesIdentical(dirA1, dirB1));
       
       // Otherwise children must match
       dirA1.createDocument("Entry1", new ByteArrayInputStream(dataSmallA));
       assertEquals(false, EntryUtils.areDirectoriesIdentical(dirA1, dirB1));
       
       dirB1.createDocument("Entry1", new ByteArrayInputStream(dataSmallA));
       assertEquals(true, EntryUtils.areDirectoriesIdentical(dirA1, dirB1));
       
       dirA1.createDirectory("DD");
       assertEquals(false, EntryUtils.areDirectoriesIdentical(dirA1, dirB1));
       dirB1.createDirectory("DD");
       assertEquals(true, EntryUtils.areDirectoriesIdentical(dirA1, dirB1));
       
       
       // TODO Excludes support
    }

