    /**
     * test mark/reset/markSupported.
     */
    public void testMarkFunctions() throws IOException {
        DocumentInputStream stream = new DocumentInputStream(_workbook);
        byte[]              buffer = new byte[ _workbook_size / 5 ];

        stream.read(buffer);
        for (int j = 0; j < buffer.length; j++)
        {
            assertEquals("checking byte " + j, _workbook_data[ j ],
                         buffer[ j ]);
        }
        assertEquals(_workbook_size - buffer.length, stream.available());
        stream.reset();
        assertEquals(_workbook_size, stream.available());
        stream.read(buffer);
        stream.mark(12);
        stream.read(buffer);
        assertEquals(_workbook_size - (2 * buffer.length),
                     stream.available());
        for (int j = buffer.length; j < (2 * buffer.length); j++)
        {
            assertEquals("checking byte " + j, _workbook_data[ j ],
                         buffer[ j - buffer.length ]);
        }
        stream.reset();
        assertEquals(_workbook_size - buffer.length, stream.available());
        stream.read(buffer);
        assertEquals(_workbook_size - (2 * buffer.length),
                     stream.available());
        for (int j = buffer.length; j < (2 * buffer.length); j++)
        {
            assertEquals("checking byte " + j, _workbook_data[ j ],
                         buffer[ j - buffer.length ]);
        }
        assertTrue(stream.markSupported());
    }

