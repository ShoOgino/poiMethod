    /**
     * Test full path constructor
     */

    public void testFullPathConstructor()
    {
        String[] components =
        {
            "foo", "bar", "foobar", "fubar"
        };

        for (int j = 0; j < components.length; j++)
        {
            String[] params = new String[ j ];

            for (int k = 0; k < j; k++)
            {
                params[ k ] = components[ k ];
            }
            POIFSDocumentPath path = new POIFSDocumentPath(params);

            assertEquals(j, path.length());
            for (int k = 0; k < j; k++)
            {
                assertEquals(components[ k ], path.getComponent(k));
            }
            if (j == 0)
            {
                assertNull(path.getParent());
            }
            else
            {
                POIFSDocumentPath parent = path.getParent();

                assertNotNull(parent);
                assertEquals(j - 1, parent.length());
                for (int k = 0; k < j - 1; k++)
                {
                    assertEquals(components[ k ], parent.getComponent(k));
                }
            }
        }

        // test weird variants
        assertEquals(0, new POIFSDocumentPath(null).length());
        try
        {
            new POIFSDocumentPath(new String[]
            {
                "fu", ""
            });
            fail("should have caught IllegalArgumentException");
        }
        catch (IllegalArgumentException ignored)
        {
        }
        try
        {
            new POIFSDocumentPath(new String[]
            {
                "fu", null
            });
            fail("should have caught IllegalArgumentException");
        }
        catch (IllegalArgumentException ignored)
        {
        }
    }

