   @Test
   public void testNestedFiltering() throws Exception {
      List<String> excl = Arrays.asList(new String[]{
              dirA.getName() + "/" + "MadeUp",
              dirA.getName() + "/" + eA.getName(),
              dirA.getName() + "/" + dirAA.getName() + "/Test",
              eRoot.getName()
      });
      FilteringDirectoryNode d = new FilteringDirectoryNode(fs.getRoot(), excl);

      // Check main
      assertEquals(2, d.getEntryCount());
      assertEquals(true, d.hasEntry(dirA.getName()));
      assertEquals(true, d.hasEntry(dirB.getName()));
      assertEquals(false, d.hasEntry(eRoot.getName()));

      // Check filtering down
      assertEquals(true, d.getEntry(dirA.getName()) instanceof FilteringDirectoryNode);
      assertEquals(false, d.getEntry(dirB.getName()) instanceof FilteringDirectoryNode);

      DirectoryEntry fdA = (DirectoryEntry) d.getEntry(dirA.getName());
      assertEquals(false, fdA.hasEntry(eA.getName()));
      assertEquals(true, fdA.hasEntry(dirAA.getName()));

      DirectoryEntry fdAA = (DirectoryEntry) fdA.getEntry(dirAA.getName());
      assertEquals(true, fdAA.hasEntry(eAA.getName()));
   }

