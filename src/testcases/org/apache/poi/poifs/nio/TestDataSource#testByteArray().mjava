   public void testByteArray() throws Exception {
      byte[] data = new byte[256];
      byte b;
      for(int i=0; i<data.length; i++) {
         b = (byte)i;
         data[i] = b;
      }
      
      ByteArrayBackedDataSource ds = new ByteArrayBackedDataSource(data);
      
      // Start
      ByteBuffer bs = ByteBuffer.allocate(4); 
      ds.read(bs, 0);
      assertEquals(4, bs.capacity());
      assertEquals(4, bs.position());
      assertEquals(0x00, bs.get(0));
      assertEquals(0x01, bs.get(1));
      assertEquals(0x02, bs.get(2));
      assertEquals(0x03, bs.get(3));
      
      // Middle
      bs.clear(); 
      ds.read(bs, 100);
      assertEquals(4, bs.capacity());
      assertEquals(4, bs.position());
      assertEquals(100, bs.get(0));
      assertEquals(101, bs.get(1));
      assertEquals(102, bs.get(2));
      assertEquals(103, bs.get(3));
      
      // End
      bs.clear(); 
      ds.read(bs, 252);
      assertEquals(4, bs.capacity());
      assertEquals(4, bs.position());
      assertEquals(-4, bs.get(0));
      assertEquals(-3, bs.get(1));
      assertEquals(-2, bs.get(2));
      assertEquals(-1, bs.get(3));
      
      // Off the end
      bs.clear(); 
      ds.read(bs, 254);
      assertEquals(4, bs.capacity());
      assertEquals(2, bs.position());
      assertEquals(-2, bs.get(0));
      assertEquals(-1, bs.get(1));

      // Past the end
      bs.clear(); 
      try {
         ds.read(bs, 256);
         fail("Shouldn't be able to read off the end");
      } catch(IndexOutOfBoundsException e) {}
      
      
      // Overwrite
      bs.clear();
      bs.put(0, (byte)-55);
      bs.put(1, (byte)-54);
      bs.put(2, (byte)-53);
      bs.put(3, (byte)-52);
      
      ds.write(bs, 40);
      bs.clear();
      ds.read(bs, 40);
      
      assertEquals(4, bs.position());
      assertEquals(-55, bs.get(0));
      assertEquals(-54, bs.get(1));
      assertEquals(-53, bs.get(2));
      assertEquals(-52, bs.get(3));
      
      // Append
      bs.clear();
      bs.put(0, (byte)-55);
      bs.put(1, (byte)-54);
      bs.put(2, (byte)-53);
      bs.put(3, (byte)-52);
      
      assertEquals(256, ds.size());
      ds.write(bs, 256);
      assertEquals(260, ds.size());
      
      bs.clear();
      ds.read(bs, 256);
      assertEquals(4, bs.position());
      assertEquals(-55, bs.get(0));
      assertEquals(-54, bs.get(1));
      assertEquals(-53, bs.get(2));
      assertEquals(-52, bs.get(3));
   }

