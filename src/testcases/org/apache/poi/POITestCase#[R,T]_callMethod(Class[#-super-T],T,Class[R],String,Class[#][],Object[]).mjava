     /** Utility method to call a private/protected method.
      * Only use this method in test cases!!!
      */
     public static <R,T> R callMethod(final Class<? super T> clazz, final T instance, final Class<R> returnType, final String methodName,
             final Class<?>[] parameterTypes, final Object[] parameters) {
         assertTrue("Reflection of private methods is only allowed for POI classes.", clazz.getName().startsWith("org.apache.poi."));
         try {
            return AccessController.doPrivileged(new PrivilegedExceptionAction<R>() {
                @Override
                @SuppressWarnings("unchecked")
                @SuppressForbidden("For test usage only")
                public R run() throws Exception {
                    Method m = clazz.getDeclaredMethod(methodName, parameterTypes);
                    m.setAccessible(true);
                    return (R) m.invoke(instance, parameters);
                }
            });
         } catch (PrivilegedActionException pae) {
             throw new RuntimeException("Cannot access method '" + methodName + "' of class " + clazz, pae.getException());
         }
     }

