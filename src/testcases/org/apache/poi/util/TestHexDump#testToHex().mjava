    public void testToHex() {
        assertEquals("000A", HexDump.toHex((short)0xA));
        
        assertEquals("[]", HexDump.toHex(new short[] { }));
        assertEquals("[000A]", HexDump.toHex(new short[] { 0xA }));
        assertEquals("[000A, 000B]", HexDump.toHex(new short[] { 0xA, 0xB }));
        
        assertEquals("0A", HexDump.toHex((byte)0xA));
        assertEquals("0000000A", HexDump.toHex(0xA));

        assertEquals("[]", HexDump.toHex(new byte[] { }));
        assertEquals("[0A]", HexDump.toHex(new byte[] { 0xA }));
        assertEquals("[0A, 0B]", HexDump.toHex(new byte[] { 0xA, 0xB }));

        assertEquals(": 0", HexDump.toHex(new byte[] { }, 10));
        assertEquals("0: 0A", HexDump.toHex(new byte[] { 0xA }, 10));
        assertEquals("0: 0A, 0B", HexDump.toHex(new byte[] { 0xA, 0xB }, 10));
        assertEquals("0: 0A, 0B\n2: 0C, 0D", HexDump.toHex(new byte[] { 0xA, 0xB, 0xC, 0xD }, 2));
        assertEquals("0: 0A, 0B\n2: 0C, 0D\n4: 0E, 0F", HexDump.toHex(new byte[] { 0xA, 0xB, 0xC, 0xD, 0xE, 0xF }, 2));

        assertEquals("FFFF", HexDump.toHex((short)0xFFFF));
        
        assertEquals("00000000000004D2", HexDump.toHex(1234l));
        
        confirmStr("0xFE", HexDump.byteToHex(-2));
        confirmStr("0x25", HexDump.byteToHex(37));
        confirmStr("0xFFFE", HexDump.shortToHex(-2));
        confirmStr("0x0005", HexDump.shortToHex(5));
        confirmStr("0xFFFFFF9C", HexDump.intToHex(-100));
        confirmStr("0x00001001", HexDump.intToHex(4097));
        confirmStr("0xFFFFFFFFFFFF0006", HexDump.longToHex(-65530));
        confirmStr("0x0000000000003FCD", HexDump.longToHex(16333));
    }

