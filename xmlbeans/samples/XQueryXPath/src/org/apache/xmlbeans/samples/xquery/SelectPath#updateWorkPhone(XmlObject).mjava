    /**
     * Prints the XML bound to <em>empDoc</em>, uses XPath to 
     * retrieve elements containing work phone numbers, changes the numbers 
     * to another number, then prints the XML again to display the changes.
     * 
     * This method demonstrates the following characteristics of the selectPath method: 
     * 
     * - it supports expressions that include predicates 
     * - the XML it returns is the XML queried against -- not a copy, as with results
     * returned via execQuery methods and XQuery. Changes to this XML update 
     * the XML queried against. 
     * - selectPath called from an XMLBean type (instead of a cursor) returns an 
     * array of results (if any). These results can be cast to a matching type 
     * generated from schema.
     * 
     * @param empDoc The incoming XML.
     * @return <code>true</code> if the XPath expression returned results;
     * otherwise, <code>false</code>.
     */
    public boolean updateWorkPhone(XmlObject empDoc)
    {
        boolean hasResults = false;

        // Print the XML received.
        System.out.println("XML as received by updateWorkPhone method: \n\n"
                + empDoc.toString());
 
        // Create a variable with the query expression.
        String pathExpression = 
            "$this/xq:employees/xq:employee/xq:phone[@location='work']";

        // Execute the query.
        XmlObject[] results = empDoc.selectPath(m_namespaceDeclaration
                + pathExpression);
        if (results.length > 0)
        {
            hasResults = true;

            // <phone> elements returned from the expression will conform to the
            // schema, so bind them to the appropriate XMLBeans type generated
            // from the schema.
            PhoneType[] phones = (PhoneType[]) results;

            // Change all the work phone numbers to the same number.
            for (int i = 0; i < phones.length; i++)
            {
                phones[i].setStringValue("(206)555-1234");
            }
            // Print the XML with updates.
            System.out.println("\nXML as updated by updateWorkPhone method (each work \n" +
                    "phone number has been changed to the same number): \n\n"
                    + empDoc.toString() + "\n");
        }
        return hasResults;
    }

