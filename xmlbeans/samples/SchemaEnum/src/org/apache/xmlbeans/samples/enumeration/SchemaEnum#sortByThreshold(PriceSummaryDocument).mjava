    /**
     * <p>This method loops through a price summary XML document to
     * create a string that lists the items grouped by threshold.
     * Unlike the summarizeItems method, which creates a new XML
     * document that contains an attribute whose value is enumerated,
     * this method retrieves values from an enumeration.</p>
     * <p/>
     * <p>This method illustrates how you can use the int value corresponding
     * to enumerations to specify them in Java switch statements.</p>
     */
    public String sortByThreshold(PriceSummaryDocument summaryDoc)
    {
        // Extract the summary element from the incoming XML, then use it
        // to extract an array of the price elements.
        PriceSummaryDocument.PriceSummary summary = summaryDoc.getPriceSummary();
        PriceType[] priceElements = summary.getPriceArray();

        StringBuffer responseBuffer = new StringBuffer();

        // Create string buffers to hold the sorted results of the values
        // retrieved.
        StringBuffer zeroBuffer = new StringBuffer("\nItems under 10 dollars: \n");
        StringBuffer tenBuffer = new StringBuffer("\nItems between 10 and 20 dollars: \n");
        StringBuffer twentyBuffer = new StringBuffer("\nItems more than 20 dollars: \n");

        // Loop through the price elements, extracting the array of <item> child
        // elements in each.
        for (int i = 0; i < priceElements.length; i++)
        {
            ItemType[] itemElements = priceElements[i].getItemArray();

            // Loop through the <item> elements, discovering which threshold
            // the item belongs to, then using the element's <title> value
            // in in a sorted list.
            for (int j = 0; j < itemElements.length; j++)
            {
                ItemType item = itemElements[j];

                // For each <item> element, find out the int value of its <price>
                // parent element's threshold attribute value. Append the item's
                // title to the appropriate string buffer.
                switch (priceElements[i].getThreshold().intValue())
                {

                    case PriceType.Threshold.INT_BELOW_10_DOLLARS:
                        zeroBuffer.append(" " + item.getTitle() + "\n");
                        break;

                    case PriceType.Threshold.INT_BETWEEN_10_AND_20_DOLLARS:
                        tenBuffer.append(" " + item.getTitle() + "\n");
                        break;

                    case PriceType.Threshold.INT_ABOVE_20_DOLLARS:
                        twentyBuffer.append(" " + item.getTitle() + "\n");
                        break;

                    default:
                        System.out.println("Yo! Something unexpected happened!");
                        break;
                }
            }
        }
        responseBuffer.append(tenBuffer);
        responseBuffer.append(twentyBuffer);
        return responseBuffer.toString();
    }

