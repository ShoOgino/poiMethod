    /**
     * <p>This method uses values in the incoming XML to construct
     * a new XML document of a different schema. PriceSummary.xsd, the schema
     * for the new document, defines XML enumerations for a price
     * threshold attribute. Items whose price is between $10 and $20 receive
     * a threshold value of "Between10And20Dollars"; items above 20 get a threshold
     * value of "Above20Dollars".</p>
     * <p/>
     * <p>This method loops through the purchase order items, creating a summary
     * document that specifies their threshold value.</p>
     * <p/>
     * <p>You can verify this method's work by comparing the resulting XML with
     * the XML in PriceSummary.xml. You can also use this method's return value
     * to test the sortByThreshold method.</p>
     */
    public PriceSummaryDocument summarizeItems(PurchaseOrderDocument poDoc)
    {
        PurchaseOrderDocument.PurchaseOrder po = poDoc.getPurchaseOrder();

        // Create a new instance of the PriceSummary schema. This is the document
        // the code creates, extracting values from the purchase order.
        PriceSummaryDocument summaryDoc = PriceSummaryDocument.Factory.newInstance();
        PriceSummaryDocument.PriceSummary summary = summaryDoc.addNewPriceSummary();

        // Create <price> elements to hold <item> elements according to their
        // price threshold.
        PriceType priceZero = summary.addNewPrice();
        PriceType priceTen = summary.addNewPrice();
        PriceType priceTwenty = summary.addNewPrice();

        // Set the threshold attribute value for the two new elements.
        priceZero.setThreshold(PriceType.Threshold.BELOW_10_DOLLARS);
        priceTen.setThreshold(PriceType.Threshold.BETWEEN_10_AND_20_DOLLARS);
        priceTwenty.setThreshold(PriceType.Threshold.ABOVE_20_DOLLARS);

        // Loop through the purchase order <line-item> elements. If their
        // <price> child element is between 10.00 and 20.00, add the <line-item>
        // to the <price> element whose threshold is 10.00. For those over 20.00,
        // add them to the <price> element whose threshold is 20.00.

        // There don't happen to be any under 10.00, but handle this case anyway.
        LineItem[] items = po.getLineItemArray();
        for (int i = 0; i < items.length; i++)
        {
            LineItem item = items[i];

            if (item.getPrice() < 10.00)
            {

                ItemType newItem = priceZero.addNewItem();
                newItem.setTitle(item.getDescription());
                newItem.xsetQuantity(item.xgetQuantity());
                newItem.setAmount(item.getPrice());

            } else if (item.getPrice() >= 10.00 && item.getPrice() < 20.00)
            {

                ItemType newItem = priceTen.addNewItem();
                newItem.setTitle(item.getDescription());
                newItem.xsetQuantity(item.xgetQuantity());
                newItem.setAmount(item.getPrice());

            } else if (item.getPrice() >= 20.00)
            {

                ItemType newItem = priceTwenty.addNewItem();
                newItem.setTitle(item.getDescription());
                newItem.xsetQuantity(item.xgetQuantity());
                newItem.setAmount(item.getPrice());
            }
        }
        return summaryDoc;
    }

