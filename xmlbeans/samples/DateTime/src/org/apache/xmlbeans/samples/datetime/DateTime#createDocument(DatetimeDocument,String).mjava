   /**
    * This method creates an new <important-date> element and attaches to the existing XML Instance, and saves the
    * new Instance to a file(args[1]).
    */
   public void createDocument(DatetimeDocument doc , String file){
       // Retrieve the <datetime> element and add a new <important-date> element.
       DatetimeDocument.Datetime dtelement = doc.getDatetime();

       //
       // add an important date using XmlCalendar
       //

       ImportantDate impdate = dtelement.addNewImportantDate();

       //Creating value for <holiday> element
       Calendar  holiday = new XmlCalendar("2004-07-04");

       //Creating value for <fun-begin-time> element
       Calendar  funbegintime = new XmlCalendar("10:30:33");

       //Creating value for <fun-end-time> element
       Calendar  funendtime = new XmlCalendar("12:40:12");

       //Creating value for <birthdatetime> element
       Calendar  birthdatetime = new XmlCalendar("1977-11-29T10:10:12");

       //Creating value for <job-duration> element
       GDuration jobduration =  new GDuration(1,2,4,5,10,12,15,null);

       //Creating value for <payday> element
       Calendar payday = new XmlCalendar("---12");

       //Setting all the elements
       impdate.addHoliday(holiday);
       impdate.setFunBeginTime(funbegintime);
       impdate.setFunEndTime(funendtime);
       impdate.setJobDuration(jobduration);
       impdate.setBirthdatetime(birthdatetime);
       impdate.setPayday(payday);
       impdate.setDescription("Using XmlCalendar");


       //
       // add another important date using Calendar
       //

       impdate = dtelement.addNewImportantDate();

       //Creating value for <holiday> element using XmlCalendar
       holiday = new XmlCalendar("2004-07-04");

       //Creating value for <fun-begin-time> element using GregorianCalendar
       funbegintime = Calendar.getInstance();
       funbegintime.clear();
       funbegintime.set(Calendar.AM_PM , Calendar.AM);
       funbegintime.set(Calendar.HOUR, 10);
       funbegintime.set(Calendar.MINUTE, 30 );
       funbegintime.set(Calendar.SECOND, 35 );

       //Creating value for <fun-end-time> element
       funendtime = Calendar.getInstance();
       funendtime.clear();
       funendtime.set(Calendar.AM_PM , Calendar.AM);
       funendtime.set(Calendar.HOUR, 12);
       funendtime.set(Calendar.MINUTE, 40 );
       funendtime.set(Calendar.SECOND, 12 );

       //Creating value for <birthdatetime> element
       birthdatetime = Calendar.getInstance();
       birthdatetime.clear();
       birthdatetime.set(1977,10,29,10,10,12);

       //Creating value for <job-duration> element
       jobduration =  new GDuration(1,2,4,5,10,12,15,null);

       //Creating value for <payday> element
       payday = Calendar.getInstance();
       payday.clear();
       payday.set(Calendar.DAY_OF_MONTH,12);

       //Setting all the elements
       impdate.addHoliday(holiday);
       impdate.setFunBeginTime(funbegintime);
       impdate.setFunEndTime(funendtime);
       impdate.setJobDuration(jobduration);
       impdate.setBirthdatetime(birthdatetime);
       impdate.setPayday(payday);
       impdate.setDescription("Using Calendar");

       XmlOptions xmlOptions = new XmlOptions();
       xmlOptions.setSavePrettyPrint();

       // Validate the new XML
       boolean isXmlValid = validateXml(doc);
       if (isXmlValid) {
           File f = new File(file);

           try{
               //Writing the XML Instance to a file.
               doc.save(f,xmlOptions);
           }
           catch(IOException e){
               e.printStackTrace();
           }
           System.out.println("\nXML Instance Document saved at : " + f.getPath());
       }
   }

