    /**
     * Diffs the contents of two dirs looking only at the xsb files
     * contained in these two dirs
     * Updated diffs with a list of differences (for the time being, strings
     * describing the difference)
     */
    public static void dirsAsTypeSystems(File dir1, File dir2, List diffs)
    {
        assert dir1.isDirectory() : "Parameters must be directories";
        assert dir2.isDirectory() : "Parameters must be directories";

        /**
         * Navigate three directories deep to get to the type system.
         * Assume the schema[METADATA_PACKAGE_LOAD]/system/* structure
         */
        File temp1 = new File(dir1, "schema" + SchemaTypeSystemImpl.METADATA_PACKAGE_GEN + "/system");
        File temp2 = new File(dir2, "schema" + SchemaTypeSystemImpl.METADATA_PACKAGE_GEN + "/system");
        if (temp1.exists() && temp2.exists())
        {
            File[] files1 = temp1.listFiles();
            File[] files2 = temp2.listFiles();
            if (files1.length == 1 && files2.length == 1)
            {
                temp1 = files1[0];
                temp2 = files2[0];
            }
            else
            {
                if (files1.length == 0)
                    temp1 = null;
                if (files2.length == 0)
                    temp2 = null;
                if (files1.length > 1)
                {
                    diffs.add("More than one typesystem found in dir \"" +
                        dir1.getName() + "\"");
                    return;
                }
                if (files2.length > 1)
                {
                    diffs.add("More than one typesystem found in dir \"" +
                        dir2.getName() + "\"");
                    return;
                }                    
            }
        }
        else
        {
            if (!temp1.exists())
                temp1 = null;
            if (!temp2.exists())
                temp2 = null;
        }
        if (temp1 == null && temp2 == null)
            return;
        else if (temp1 == null || temp2 == null)
        {
            if (temp1 == null)
                diffs.add("No typesystems found in dir \"" + dir1 + "\"");
            if (temp2 == null)
                diffs.add("No typesystems found in dir \"" + dir2 + "\"");
            return;
        }
        else
        {
            dir1 = temp1;
            dir2 = temp2;
        }

        boolean diffIndex = isDiffIndex();
        XsbFilenameFilter xsbName = new XsbFilenameFilter();
        File[] files1 = dir1.listFiles(xsbName);
        File[] files2 = dir2.listFiles(xsbName);
        FileNameComparator comparator = new FileNameComparator();
        Arrays.sort(files1, comparator);
        Arrays.sort(files2, comparator);
        int i1 = 0;
        int i2 = 0;
        while (i1 < files1.length && i2 < files2.length)
        {
            String name1 = files1[i1].getName();
            String name2 = files2[i2].getName();
            int dif = name1.compareTo(name2);
            if (dif == 0)
            {
                if (diffIndex || !files1[i1].getName().equals("index.xsb"))
                    filesAsXsb(files1[i1], files2[i2], diffs); // Compare the files
                i1++; i2++; // Move to next pair
            }
            else if (dif < 0)
            {
                // dir1 contains a file that dir2 doesn't
                diffs.add("Dir \"" + dir1.getName() + "\" contains an extra file: \"" +
                    name1 + "\"");
                i1++;
            }
            else if (dif > 0)
            {
                // dir2 contains a file that dir1 doesn't
                diffs.add("Dir \"" + dir2.getName() + "\" contains an extra file: \"" +
                    name2 + "\"");
                i2++;
            }
        }
        while (i1 < files1.length)
        {
            diffs.add("Dir \"" + dir1.getName() + "\" contains an extra file: \"" +
                files1[i1].getName() + "\"");
            i1++;
        }
        while (i2 < files2.length)
        {
            diffs.add("Dir \"" + dir2.getName() + "\" contains an extra file: \"" +
                files2[i2].getName() + "\"");
            i2++;
        }
    }

