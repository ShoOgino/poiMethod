    /**
     * Returns an input stream for the specified resource.
     *
     * <p>This method will firstly try
     * <code>ClassLoader.getSystemResourceAsStream()</code> then
     * the class loader of the current thread with
     * <code>getResourceAsStream()</code> and finally attempt
     * <code>getResourceAsStream()</code> on
     * <code>FactoryFinder.class.getClassLoader()</code>.
     *
     * @param factoryResource  the resource name
     * @return  an InputStream that can be used to read that resource, or
     *              <code>null</code> if the resource could not be resolved
     */
    private static InputStream getResource(String factoryResource) {
        ClassLoader classloader = null;
        try {
            classloader = Thread.currentThread().getContextClassLoader();
        } catch (SecurityException securityexception) {}

        InputStream inputstream;
        if (classloader == null) {
            inputstream = ClassLoader.getSystemResourceAsStream(factoryResource);
        } else {
            inputstream = classloader.getResourceAsStream(factoryResource);
        }

        if (inputstream == null) {
            inputstream = FactoryFinder.class.getClassLoader().getResourceAsStream(factoryResource);
        }
        return inputstream;
    }

