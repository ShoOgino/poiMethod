    /**
     * Does a simple most-significant-digit-first comparison,
     * ignoring any timezone or has/doesn't have issues.
     * The data must have been digested first.
     */
    private static int fieldwiseCompare(GDateSpecification tdate, GDateSpecification date)
    {
        if (tdate.hasYear())
        {
            int CY = date.getYear();
            int TCY = tdate.getYear();
            if (TCY < CY) return -1;
            if (TCY > CY) return 1;
        }
        if (tdate.hasMonth())
        {
            int M = date.getMonth();
            int TM = tdate.getMonth();
            if (TM < M) return -1;
            if (TM > M) return 1;
        }
        if (tdate.hasDay())
        {
            int D = date.getDay();
            int TD = tdate.getDay();
            if (TD < D) return -1;
            if (TD > D) return 1;
        }
        if (tdate.hasTime())
        {
            int h = date.getHour();
            int th = tdate.getHour();
            if (th < h) return -1;
            if (th > h) return 1;
            int m = date.getMinute();
            int tm = tdate.getMinute();
            if (tm < m) return -1;
            if (tm > m) return 1;
            int s = date.getSecond();
            int ts = tdate.getSecond();
            if (ts < s) return -1;
            if (ts > s) return 1;
            BigDecimal fs = date.getFraction();
            BigDecimal tfs = tdate.getFraction();
            if (tfs == null && fs == null) return 0;
            return (tfs == null ? GDate._zero : tfs).compareTo(fs == null ? GDate._zero : fs);
        }

        return 0;
    }

