    public static String toPlainString(BigDecimal bd)
    {
        BigInteger intVal = bd.unscaledValue();
        int scale = bd.scale();
        String intValStr = intVal.toString();
        if (scale == 0)
            return intValStr;

        boolean isNegative = (intValStr.charAt(0) == '-');

        int point = intValStr.length() - scale - (isNegative ? 1 : 0);

        StringBuffer sb = new StringBuffer(intValStr.length() + 2 + (point <= 0 ? (-point + 1) : 0));
        if (point <= 0)
        {
            // prepend zeros and a decimal point.
            if (isNegative) sb.append('-');
            sb.append('0').append('.');
            while (point < 0)
            {
                sb.append('0');
                point++;
            }
            sb.append(intValStr.substring(isNegative ? 1 : 0));
        }
        else if (point < intValStr.length())
        {
            // No zeros needed
            sb.append(intValStr);
            sb.insert(point + (isNegative ? 1 : 0), '.');
        }
        else
        {
            // append zeros if not 0
            sb.append(intValStr);
            if (!intVal.equals(BigInteger.ZERO))
                for (int i = intValStr.length(); i < point; i++)
                    sb.append('0');
        }
        return sb.toString();
    }

