    private SoapEncSchemaTypeSystem()
    {
        // soapenc:Array
        _container.setTypeSystem(this);
        soapArray = new SchemaTypeImpl(_container, true);
        _container.addGlobalType(soapArray.getRef());
        soapArray.setName(new QName(SOAPENC, SOAP_ARRAY));
        soapArrayHandle = SOAP_ARRAY.toLowerCase() + "type";
        soapArray.setComplexTypeVariety(SchemaType.ELEMENT_CONTENT);
        soapArray.setBaseTypeRef(BuiltinSchemaTypeSystem.ST_ANY_TYPE.getRef());
        soapArray.setBaseDepth(1);
        soapArray.setDerivationType(SchemaType.DT_EXTENSION);
        soapArray.setSimpleTypeVariety(SchemaType.NOT_SIMPLE);
        SchemaParticleImpl contentModel = new SchemaParticleImpl();
        contentModel.setParticleType(SchemaParticle.SEQUENCE);
        contentModel.setMinOccurs(BigInteger.ZERO);
        contentModel.setMaxOccurs(BigInteger.ONE);
        contentModel.setTransitionRules(QNameSet.ALL, true);
        SchemaParticleImpl[] children = new SchemaParticleImpl[1];
        contentModel.setParticleChildren(children);
        SchemaParticleImpl contentModel2 = new SchemaParticleImpl();
        contentModel2.setParticleType(SchemaParticle.WILDCARD);
        contentModel2.setWildcardSet(QNameSet.ALL);
        contentModel2.setWildcardProcess(SchemaParticle.LAX);
        contentModel2.setMinOccurs(BigInteger.ZERO);
        contentModel2.setMaxOccurs(null);
        contentModel2.setTransitionRules(QNameSet.ALL, true);
        children[0] = contentModel2;

        SchemaAttributeModelImpl attrModel = new SchemaAttributeModelImpl();
        attrModel.setWildcardProcess(SchemaAttributeModel.LAX);
        HashSet excludedURI = new HashSet();
        excludedURI.add(SOAPENC);
        attrModel.setWildcardSet(QNameSet.forSets(excludedURI, null, Collections.EMPTY_SET,
                Collections.EMPTY_SET));
        SchemaLocalAttributeImpl attr = new SchemaLocalAttributeImpl();
        attr.init(new QName("", ATTR_ID), BuiltinSchemaTypeSystem.ST_ID.getRef(),
            SchemaLocalAttribute.OPTIONAL, null, null, null, false, null, null, null);
        attrModel.addAttribute(attr);
        attr = new SchemaLocalAttributeImpl();
        attr.init(new QName("", ATTR_HREF), BuiltinSchemaTypeSystem.ST_ANY_URI.getRef(),
            SchemaLocalAttributeImpl.OPTIONAL, null, null, null, false, null, null, null);
        attrModel.addAttribute(attr);
        attr = new SchemaLocalAttributeImpl();
        attr.init(new QName(SOAPENC, ARRAY_TYPE), BuiltinSchemaTypeSystem.ST_STRING.getRef(),
            SchemaLocalAttributeImpl.OPTIONAL, null, null, null, false, null, null, null);
        attrModel.addAttribute(attr);
        attr = new SchemaLocalAttributeImpl();
        attr.init(new QName(SOAPENC, ATTR_OFFSET), BuiltinSchemaTypeSystem.ST_STRING.getRef(),
            SchemaLocalAttributeImpl.OPTIONAL, null, null, null, false, null, null, null);
        attrModel.addAttribute(attr);
        soapArray.setContentModel(contentModel, attrModel, Collections.EMPTY_MAP, Collections.EMPTY_MAP, false);

        // soapenc:arrayType
        arrayType = new SchemaGlobalAttributeImpl(_container);
        _container.addGlobalAttribute(arrayType.getRef());
        arrayType.init(new QName(SOAPENC, ARRAY_TYPE), BuiltinSchemaTypeSystem.ST_STRING.getRef(),
            SchemaLocalAttributeImpl.OPTIONAL, null, null, null, false, null, null, null);
        _handlesToObjects.put(soapArrayHandle, soapArray);
        _handlesToObjects.put(ARRAY_TYPE.toLowerCase() + "attribute", arrayType);
        _container.setImmutable();
    }

