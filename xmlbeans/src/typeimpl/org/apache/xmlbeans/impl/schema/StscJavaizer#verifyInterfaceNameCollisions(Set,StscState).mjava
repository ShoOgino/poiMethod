    private static void verifyInterfaceNameCollisions(Set usedNames, StscState state)
    {
        BindingConfig config = state.getBindingConfig();
        if (config == null)
            return;

        InterfaceExtension[] exts = config.getInterfaceExtensions();
        for (int i = 0; i < exts.length; i++)
        {
            if (usedNames.contains(exts[i].getInterface().toLowerCase()))
                state.error("InterfaceExtension interface '" + exts[i].getInterface() + "' creates a name collision with one of the generated interfaces or classes.", XmlError.SEVERITY_ERROR, null);

            String handler = exts[i].getStaticHandler();
            if (handler != null && usedNames.contains(handler.toLowerCase()))
                state.error("InterfaceExtension handler class '" + handler + "' creates a name collision with one of the generated interfaces or classes.", XmlError.SEVERITY_ERROR, null);
        }

        PrePostExtension[] prepost = config.getPrePostExtensions();
        for (int i = 0; i < prepost.length; i++)
        {
            String handler = prepost[i].getStaticHandler();
            if (handler != null && usedNames.contains(handler.toLowerCase()))
                state.error("PrePostExtension handler class '" + handler + "' creates a name collision with one of the generated interfaces or classes.", XmlError.SEVERITY_ERROR, null);
        }
    }

