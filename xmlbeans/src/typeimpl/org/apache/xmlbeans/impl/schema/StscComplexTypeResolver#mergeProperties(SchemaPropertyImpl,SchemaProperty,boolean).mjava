    static void mergeProperties(SchemaPropertyImpl into, SchemaProperty from, boolean asSequence)
    {
        // minoccur, maxoccur
        BigInteger minOccurs = into.getMinOccurs();
        BigInteger maxOccurs = into.getMaxOccurs();
        if (asSequence)
        {
            minOccurs = minOccurs.add(from.getMinOccurs());
            if (maxOccurs != null)
                maxOccurs = (from.getMaxOccurs() == null ? null :
                                  maxOccurs.add(from.getMaxOccurs()));
        }
        else
        {
            minOccurs = minOccurs.min(from.getMinOccurs());
            if (maxOccurs != null)
                maxOccurs = (from.getMaxOccurs() == null ? null :
                                maxOccurs.max(from.getMaxOccurs()));
        }
        into.setMinOccurs(minOccurs);
        into.setMaxOccurs(maxOccurs);

        // nillable, default, fixed
        if (from.hasNillable() != into.hasNillable())
            into.setNillable(SchemaProperty.VARIABLE);
        if (from.hasDefault() != into.hasDefault())
            into.setDefault(SchemaProperty.VARIABLE);
        if (from.hasFixed() != into.hasFixed())
            into.setFixed(SchemaProperty.VARIABLE);

        // default value
        if (into.getDefaultText() != null)
        {
            if (from.getDefaultText() == null ||
                !into.getDefaultText().equals(from.getDefaultText()))
                into.setDefaultText(null);
        }
    }

