    private void assertContainersSynchronized()
    {
        boolean assertEnabled = false;
        // This code basically checks whether asserts are enabled so we don't do
        // all the work if they arent
        assert assertEnabled = true;
        if (!assertEnabled)
            return;
        // global elements
        Map temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildComponentRefMap((SchemaComponent[]) ((SchemaContainer) it.next()).globalElements().toArray(new SchemaComponent[0])));
        assert _globalElements.equals(temp);
        // global attributes
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildComponentRefMap((SchemaComponent[]) ((SchemaContainer) it.next()).globalAttributes().toArray(new SchemaComponent[0])));
        assert _globalAttributes.equals(temp);
        // model groups
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildComponentRefMap((SchemaComponent[]) ((SchemaContainer) it.next()).modelGroups().toArray(new SchemaComponent[0])));
        assert _modelGroups.equals(temp);
        // redefined model groups
        Set temp2 = new HashSet();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp2.addAll(buildComponentRefList((SchemaComponent[]) ((SchemaContainer) it.next()).redefinedModelGroups().toArray(new SchemaComponent[0])));
        assert new HashSet(_redefinedModelGroups).equals(temp2);
        // attribute groups
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildComponentRefMap((SchemaComponent[]) ((SchemaContainer) it.next()).attributeGroups().toArray(new SchemaComponent[0])));
        assert _attributeGroups.equals(temp);
        // redefined attribute groups
        temp2 = new HashSet();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp2.addAll(buildComponentRefList((SchemaComponent[]) ((SchemaContainer) it.next()).redefinedAttributeGroups().toArray(new SchemaComponent[0])));
        assert new HashSet(_redefinedAttributeGroups).equals(temp2);
        // global types
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildComponentRefMap((SchemaComponent[]) ((SchemaContainer) it.next()).globalTypes().toArray(new SchemaComponent[0])));
        assert _globalTypes.equals(temp);
        // redefined global types
        temp2 = new HashSet();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp2.addAll(buildComponentRefList((SchemaComponent[]) ((SchemaContainer) it.next()).redefinedGlobalTypes().toArray(new SchemaComponent[0])));
        assert new HashSet(_redefinedGlobalTypes).equals(temp2);
        // document types
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildDocumentMap((SchemaType[]) ((SchemaContainer) it.next()).documentTypes().toArray(new SchemaType[0])));
        assert _documentTypes.equals(temp);
        // attribute types
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildAttributeTypeMap((SchemaType[]) ((SchemaContainer) it.next()).attributeTypes().toArray(new SchemaType[0])));
        assert _attributeTypes.equals(temp);
        // identity constraints
        temp = new HashMap();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp.putAll(buildComponentRefMap((SchemaComponent[]) ((SchemaContainer) it.next()).identityConstraints().toArray(new SchemaComponent[0])));
        assert _identityConstraints.equals(temp);
        // annotations
        temp2 = new HashSet();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp2.addAll(((SchemaContainer) it.next()).annotations());
        assert new HashSet(_annotations).equals(temp2);
        // namespaces
        temp2 = new HashSet();
        for (Iterator it = _containers.values().iterator(); it.hasNext(); )
            temp2.add(((SchemaContainer) it.next()).getNamespace());
        assert _namespaces.equals(temp2);
    }

