        InputStreamSaver ( Cur c, XmlOptions options )
        {
            _locale = c._locale;

            _closed = false;

            assert _locale.entered();

            options = XmlOptions.maskNull( options );

            _outStreamImpl = new OutputStreamImpl();

            String encoding = null;

            XmlDocumentProperties props = Locale.getDocProps( c, false );

            if (props != null && props.getEncoding() != null)
                encoding = EncodingMap.getIANA2JavaMapping( props.getEncoding() );

            if (options.hasOption( XmlOptions.CHARACTER_ENCODING ))
                encoding = (String) options.get( XmlOptions.CHARACTER_ENCODING );

            if (encoding != null)
            {
                String ianaEncoding = EncodingMap.getJava2IANAMapping( encoding );

                if (ianaEncoding != null)
                    encoding = ianaEncoding;
            }

            if (encoding == null)
                encoding = EncodingMap.getJava2IANAMapping( "UTF8" );

            String javaEncoding = EncodingMap.getIANA2JavaMapping( encoding );

            if (javaEncoding == null)
                throw new IllegalStateException( "Unknown encoding: " + encoding );

            try
            {
                _converter = new OutputStreamWriter( _outStreamImpl, javaEncoding );
            }
            catch ( UnsupportedEncodingException e )
            {
                throw new RuntimeException( e );
            }

            _textSaver = new TextSaver( c, options, encoding );
        }

