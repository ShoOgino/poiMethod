    public static Dom node_getPreviousSibling ( Dom n )
    {
        Dom prev = null;
        Dom temp;
        switch (n.nodeType())
        {
        case TEXT:
        case CDATA:
            {
                assert n instanceof CharNode: "Text/CData should be a CharNode";
                CharNode node = (CharNode) n;
                if (!(node._src instanceof Xobj))
                    return null;
                Xobj src = (Xobj) node._src;
                src.ensureOccupancy();
                boolean isThisNodeAfterText = node.isNodeAftertext();
                prev = node._prev;
                if (prev == null)
                    prev = isThisNodeAfterText ? (Dom) src :
                        src._charNodesValue;
                break;
            }
        default:
            {
                assert n instanceof Xobj;
                Xobj node = (Xobj) n;
                prev = (Dom) node._prevSibling;
                if (prev == null && node._parent != null)
                    prev = (Dom) node_getFirstChild((Dom) node._parent);
            }
        }
        temp = (Dom) prev;
        while (temp != null &&
            (temp = node_getNextSibling(temp)) != n)
            prev = temp;
        return prev;
    }

