    /**
     * Not Impl
     * public void testNextTag() throws Exception {
     * try{
     * m_stream.nextTag();
     * fail("shouldn't jump to next tag");
     * }catch (IllegalStateException e){}
     * <p/>
     * cur = Public2.newStore();
     * cur.toNextToken();
     * <p/>
     * cur.insertComment("cmt");
     * cur.beginElement("foobar");
     * cur.insertChars("   \n");
     * cur.toNextToken();
     * cur.insertProcInst("xml-foo","http://foo.org");
     * cur.insertElement("foobar1");
     * <p/>
     * m_stream=cur.newXMLStreamReader();
     * <p/>
     * assertEquals ( XMLStreamConstants.START_ELEMENT, m_stream.nextTag());
     * assertEquals("fooabar", m_stream.getLocalName());
     * assertEquals ( XMLStreamConstants.END_ELEMENT, m_stream.nextTag());
     * assertEquals("fooabar", m_stream.getLocalName());
     * <p/>
     * assertEquals ( XMLStreamConstants.START_ELEMENT, m_stream.nextTag());
     * assertEquals("fooabar1", m_stream.getLocalName());
     * assertEquals ( XMLStreamConstants.END_ELEMENT, m_stream.nextTag());
     * assertEquals("fooabar1", m_stream.getLocalName());
     * <p/>
     * <p/>
     * }
     */


    public void setUp() throws Exception {
        cur = XmlObject.Factory.newInstance().newCursor();
        cur.toNextToken();

        cur.insertAttributeWithValue(new QName("foo.org", "at0", "pre"),
                "val0");
        cur.insertAttributeWithValue(new QName("", "at1", "pre"), "val1");
        cur.insertNamespace("pre", "foons.bar.org");
        cur.beginElement(new QName("foo.org", "foo", ""));
        cur.insertAttribute("localName");
        cur.insertChars("some text");
        cur.toNextToken();
        cur.toNextToken();//end elt
        cur.insertProcInst("xml-stylesheet", "http://foobar");
        cur.insertChars("\t");
        cur.insertComment(" some comment ");

        cur.toStartDoc();

        m_stream = getStream(cur);
    }

