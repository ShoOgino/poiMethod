    public void testCompare ( )
        throws Exception
    {
        XmlObject x;
        XmlCursor cFrom, cTo;

        // Forward navigation 
        
        x = XmlObject.Factory.parse( "<bar p='q' x='y'>ab<foo>xy</foo>cd</bar>" );

        cFrom = navDoc( x, "" );
        cTo = navDoc( x, "" );
            
        for ( ; ; )
        {
            Assert.assertTrue( cFrom.comparePosition( cTo ) == 0 );
            Assert.assertTrue( cFrom.isAtSamePositionAs( cTo ) );

            TokenType tt = cFrom.currentTokenType();
            
            if (tt == TokenType.ENDDOC)
            {
                break;
            }
            else if (tt == TokenType.TEXT)
            {
                cFrom.toNextChar( 1 );
                cTo.toNextChar( 1 );
            }
            else
            {
                cFrom.toNextToken();
                cTo.toNextToken();
            }
        }

        // Backward navigation 
        
        x = XmlObject.Factory.parse( "<bar p='q' x='y'>ab<foo>xy</foo>cd</bar>" );

        cFrom = navDoc( x, "r" );
        cTo = navDoc( x, "r" );
            
        for ( ; ; )
        {
            Assert.assertTrue( cFrom.comparePosition( cTo ) == 0 );
            Assert.assertTrue( cFrom.isAtSamePositionAs( cTo ) );

            if (cFrom.toPrevChar( 1 ) == 1)
                cTo.toPrevChar( 1 );
            else if (cFrom.toPrevToken() != TokenType.NONE)
                cTo.toPrevToken();
            else
                break;
        }

        //
        
        x = XmlObject.Factory.parse(
            "<bar p='q' x='y'>ab<foo>xy</foo>c<f y='x'>xy</f>d</bar>" );

        cFrom = navDoc( x, "" );

        for ( ; ; )
        {
            boolean passed = false;
            
            cTo = navDoc( x, "" );

            for ( ; ; )
            {
                if (cTo.isAtSamePositionAs( cFrom ))
                {
                    Assert.assertTrue( !passed );
                    passed = true;
                }
                else if (cTo.isLeftOf( cFrom ))
                {
                    Assert.assertTrue( !passed );
                }
                else
                {
                    Assert.assertTrue( passed );
                    Assert.assertTrue( cTo.isRightOf( cFrom ) );
                }
                
                if (cTo.toNextChar( 1 ) != 1)
                    if (cTo.toNextToken() == TokenType.ENDDOC)
                        break;
            }
            
            if (cFrom.toNextChar( 1 ) != 1)
                if (cFrom.toNextToken() == TokenType.ENDDOC)
                    break;
        }
    }

