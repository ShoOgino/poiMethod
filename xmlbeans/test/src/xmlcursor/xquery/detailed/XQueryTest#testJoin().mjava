    public void testJoin()
            throws XmlException,
            IOException {
        String query = JarUtil.getResourceFromJar("xbean/xmlcursor/xquery/Join.xq");
        InputStream input = JarUtil.getResourceFromJarasStream("xbean/xmlcursor/XQueryInput.xml");
        XmlObject o = XmlObject.Factory.parse(input);
        XmlCursor c = o.newCursor();
        XmlCursor c1 = c.execQuery(query);

      //  assertEquals(3, c1.getSelectionCount());
        c1.toFirstContentToken();
        assertEquals("<result>" +
                "<ssn>1000</ssn>,\n" +
                "\t\t<name>Bob</name>,\n" +
                "\t\t<name>NotBob</name>" +
                "</result>",
                c1.xmlText());
/*      assertEquals("<xml-fragment>" +
              "<result>" +
              "<ssn>1000</ssn>,\n" +
              "\t\t<name>Bob</name>,\n" +
              "\t\t<name>NotBob</name>" +
              "</result>" +
              "<result><ssn>1001</ssn>,\n" +
              "\t\t<name>Beth</name>,\n" +
              "\t\t</result>" +
              "<result><ssn>1000</ssn>,\n" +
              "\t\t<name>NotBob</name>,\n" +
              "\t\t<name>Bob</name>" +
              "</result>" +
              "</xml-fragment>",
                    c1.xmlText() ); */
        c1.dispose();
        c.dispose();

        XmlObject[] res = o.execQuery(query);
        assertEquals(3, res.length);
    }

