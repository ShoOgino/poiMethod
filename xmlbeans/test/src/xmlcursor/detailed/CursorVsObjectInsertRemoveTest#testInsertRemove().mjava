    public void testInsertRemove() throws Exception {
        CarLocationMessageDocument clm =
                (CarLocationMessageDocument) XmlObject.Factory.parse(
                        JarUtil.getResourceFromJar(Common.TRANXML_FILE_CLM));
        assertNotNull(clm);
        XmlCursor xc = clm.newCursor();
        xc.toFirstChild();
        xc.toFirstChild();
        xc.toNextSibling();
        xc.toNextSibling();
        assertEquals("EventStatus", xc.getName().getLocalPart());
        EventStatus eventStatus = (EventStatus) xc.getObject();
        assertNotNull("Expected non-null EventStatus object", eventStatus);
        String sEventStatusText = xc.getTextValue();
        GeographicLocation glDest = eventStatus.getDestination().getGeographicLocation();
        assertNotNull("Expected non-null GeographicLocation object", glDest);
        glDest.setPostalCode("90210");
        glDest.setCountryCode("US");
        XmlCursor xcPostalCode = glDest.xgetPostalCode().newCursor();
        XmlCursor xcCountryCode = glDest.xgetCountryCode().newCursor();
        try {
            assertEquals("90210", xcPostalCode.getTextValue());
            assertEquals("US", xcCountryCode.getTextValue());
            xcPostalCode.setTextValue("90310");
            xcPostalCode.toNextChar(2);
            assertEquals("90310", glDest.getPostalCode());
            eventStatus.getDestination().getGeographicLocation().unsetPostalCode();
            assertEquals(TokenType.START, xcPostalCode.currentTokenType());
            assertEquals("CountryCode", xcPostalCode.getName().getLocalPart());
            xcCountryCode.removeXml();
            assertEquals(sEventStatusText, xc.getTextValue());
        } finally {
            xcPostalCode.dispose();
            xcCountryCode.dispose();
        }
    }

