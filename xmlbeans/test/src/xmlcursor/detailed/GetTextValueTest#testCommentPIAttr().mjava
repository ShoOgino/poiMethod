    //test text of comment, PI or Attr
    public void testCommentPIAttr() throws Exception {
        String sExpected = "http://ecommerce.org/schema";
        int nSize = sExpected.length();
        char[] buffer = new char[nSize + 1];
        toNextTokenOfType(m_xc, TokenType.NAMESPACE);
        int nCopied = m_xc.getTextValue(buffer, 0, nSize);
        assertEquals(sExpected,
                new String(buffer)
                .substring(0, nCopied));
        assertEquals(sExpected.length(), nCopied);

        String sTestXml = "<?xml-stylesheet type=\"text/xsl\" xmlns=\"http://openuri.org/shipping/\"?><foo at0=\"value0\">text</foo>";
        m_xc = XmlObject.Factory.parse(sTestXml).newCursor();
        nCopied = m_xc.getTextValue(buffer, 0, nSize);
        //assert attributes are skipped
        assertEquals("text", new String(buffer).substring(0, nCopied));
        assertEquals("text".length(), nCopied);

        buffer = new char[100];
        toNextTokenOfType(m_xc, TokenType.ATTR);
        nCopied = m_xc.getTextValue(buffer, 0, 100);
        assertEquals("value0", new String(buffer).substring(0, nCopied));
        assertEquals("value0".length(), nCopied);

        sExpected =
                "type=\"text/xsl\" xmlns=\"http://openuri.org/shipping/\"";
        nSize = sExpected.length();
        toPrevTokenOfType(m_xc, TokenType.PROCINST);
        nCopied = m_xc.getTextValue(buffer, 0, nSize);
        assertEquals(sExpected, new String(buffer)
                .substring(0, nCopied));
        assertEquals(sExpected.length(), nCopied);

    }

