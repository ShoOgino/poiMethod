    public void testLocationTEXTMiddle() throws Exception {
        XmlCursor xc1, xc2, xc3;
        m_xo = XmlObject.Factory.parse(Common.XML_TEXT_MIDDLE);

        xc1 = m_xo.newCursor();
        xc2 = m_xo.newCursor();
        xc3 = m_xo.newCursor();


        //	 while(xc2.currentTokenType() != TokenType.ENDDOC)
        //	{
        //    System.out.println(xc2.currentTokenType());
        //    xc2.toNextToken();
        // }

//moving cursor to right locations. one is in middle of mixed content. the others is in middle of text of first node and last node

        toNextTokenOfType(xc1, TokenType.TEXT);
        toNextTokenOfType(xc2, TokenType.TEXT);
        toNextTokenOfType(xc3, TokenType.START);
        toNextTokenOfType(xc2, TokenType.TEXT);
        xc1.toNextChar(4);
        xc2.toNextChar(5);
        xc3.toEndToken();
        xc3.toPrevToken();
        xc3.toPrevChar(3);
//comparing positions
        assertEquals(-1, xc2.comparePosition(xc3));
        assertEquals(true, xc2.isRightOf(xc1));
        assertEquals(true, xc1.isInSameDocument(xc2));
        assertEquals(false, xc2.isAtSamePositionAs(xc3));

//moving cursors
        xc3.toPrevChar(2);
        xc2.toNextChar(1);
//comparing position once again
        assertEquals(-1, xc2.comparePosition(xc3));
        assertEquals(true, xc2.isRightOf(xc1));
        assertEquals(true, xc1.isInSameDocument(xc2));
        assertEquals(false, xc2.isAtSamePositionAs(xc3));

//moving and bringing them to identical positions
        xc3.toPrevToken();
        xc2.toNextChar(2);
        assertEquals(true, xc2.isAtSamePositionAs(xc3));

        xc1.dispose();
        xc2.dispose();
        xc3.dispose();


    }

