    /**
     * The idea was to try to force the following:
     * <test xmlns:n1="foo.org" xmlns:n2="foo.org"><bad n1:a="foo" n2:a="bar"/>
     * which would be illegal
     * This test case is not necessary: The implementation re-writes this as
     * xmlns:com="..." and com:at0,  com:at1
     * it seems impossible to force a binding of the same URI with two
     * different prefixes
     */
    /*
      public void testUriCollision(){
      m_xc.insertAttribute("at0","com.bea.foo");
      try{
      m_xc.insertAttribute("at1","com.bea.foo");
      toPrevTokenOfType(m_xc,TokenType.START);
      System.out.println(m_xc.xmlText());
      fail("Should not be able to insert at attr with colliding name ");
      }catch(Exception e){}
      }
    */
    public void testUriLocalNameOK(){
	m_xc.insertAttribute("at","");
	m_xc.insertAttribute("at","com.bea.foo");
	toPrevTokenOfType(m_xc,XmlCursor.TokenType.START);
	m_xc.toFirstAttribute();
	int i=1;
//	System.out.println(m_xc.xmlText());
	while(m_xc.toNextAttribute()) i++;
	assertEquals(i,2);
    }

