    public void testMultipleCopy() throws Exception {
        CarLocationMessageDocument clm =
                (CarLocationMessageDocument) XmlObject.Factory.parse(
                        JarUtil.getResourceFromJar(Common.TRANXML_FILE_CLM));
        assertNotNull(clm);
        XmlCursor xc = clm.newCursor();
        XmlCursor[] aCursors = new XmlCursor[3];
        try {
            xc.selectPath(Common.CLM_NS_XQUERY_DEFAULT +
                          "$this//GeographicLocation");
            xc.toNextSelection();
            for (int i = 0; i < 3; i++) {
                aCursors[i] = xc.newCursor();
                xc.toNextSelection();
            }
            xc.toStartDoc();
            xc.selectPath(Common.CLM_NS_XQUERY_DEFAULT +
                          "$this//GeographicLocation");
            assertTrue( xc.getSelectionCount() > 0 );
            assertTrue( xc.toNextSelection());
            aCursors[0].toLastChild();
            assertEquals("TX", aCursors[0].getTextValue());

            aCursors[0].toNextToken();
            aCursors[0].toNextToken();
            aCursors[0].toNextToken();
            aCursors[0].toNextToken();
            assertEquals(TokenType.END, aCursors[0].currentTokenType());

            aCursors[0].beginElement("LocationIdentifier",
                                      "http://www.tranxml.org/TranXML/Version4.0");
            aCursors[0].insertAttributeWithValue("Qualifier", "FR");
             aCursors[0].toEndToken();
            aCursors[0].toNextToken();//move past the end token
            aCursors[0].insertElementWithText("CountrySubdivisionCode",
                                              "http://www.tranxml.org/TranXML/Version4.0",
                                              "xyz");
            aCursors[0].toCursor(xc);
            GeographicLocation gl = (GeographicLocation) aCursors[0].getObject();
            XmlOptions validateOptions=new XmlOptions();
            ArrayList errors=new ArrayList();
            validateOptions.setErrorListener(errors);
            try{
            assertEquals(true, gl.validate(validateOptions));
            }catch (Throwable t){
                StringBuffer sb=new StringBuffer();
               for (int i = 0; i < errors.size(); i++) {
                XmlError error = (XmlError) errors.get(i);

                sb.append("Message: " + error.getMessage() + "\n");
                if (error.getCursorLocation() != null)
                    System.out.println("Location of invalid XML: " +
                            error.getCursorLocation().xmlText() + "\n");
            }
                throw new Exception(" Validation failed "+sb.toString());
            }

            assertEquals("DALLAS", gl.getCityName().getStringValue());
            assertEquals("TX", gl.getStateOrProvinceCode());
            LocationIdentifier li = gl.getLocationIdentifier();
            assertNotNull("Cursor0: LocationIdentifier unexpectedly null", li);
            assertEquals(CodeList309.FR, gl.getLocationIdentifier().getQualifier());
            assertEquals("xyz", gl.getCountrySubdivisionCode());


            for (int i = 1; i < 3; i++) {
                aCursors[i].removeXml();
                aCursors[0].copyXml(aCursors[i]);
                // must move to PrevElement to get to the START of the copied section.
                aCursors[i].toPrevSibling();

                gl = (GeographicLocation) aCursors[i].getObject();

                assertEquals("DALLAS", gl.getCityName().getStringValue());
                assertEquals("TX", gl.getStateOrProvinceCode());
                li = gl.getLocationIdentifier();
                assertNotNull("Cursor " + i + ": LocationIdentifier unexpectedly null", li);
                assertEquals(CodeList309.FR, gl.getLocationIdentifier().getQualifier());
                assertEquals("xyz", gl.getCountrySubdivisionCode());
            }

        } finally {
            xc.dispose();
            for (int i = 0; i < 3; i++) {
                aCursors[i].dispose();
            }
        }
    }

