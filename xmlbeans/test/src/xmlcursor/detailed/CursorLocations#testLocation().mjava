    public void testLocation() throws Exception {
        XmlCursor xc1, xc2, xc3, xc4;
        XmlObject m_xo1;


        m_xo = XmlObject.Factory.parse(
                JarUtil.getResourceFromJar(Common.TRANXML_FILE_XMLCURSOR_PO));
        m_xo1 = XmlObject.Factory.parse(Common.XML_FOO_BAR_TEXT);


        xc1 = m_xo.newCursor();
        xc2 = m_xo.newCursor();
        xc3 = m_xo1.newCursor();


        toNextTokenOfType(xc2, TokenType.END);
        toNextTokenOfType(xc3, TokenType.START);


       //start w/ xc1 at beg of doc
        //xc2 at end of first elt (po:name)
        while (xc1.isLeftOf(xc2)) {
            assertEquals(false, xc1.isRightOf(xc2));
            assertEquals(true, xc2.isRightOf(xc1));
            assertEquals(true, xc1.isInSameDocument(xc2));
            assertEquals(false, xc2.isAtSamePositionAs(xc1));
            assertEquals(false, xc1.isAtSamePositionAs(xc2));
            assertEquals(1, xc2.comparePosition(xc1));
            assertEquals(-1, xc1.comparePosition(xc2));
            //	System.out.println(xc1.currentTokenType() + "       " +  xc2.currentTokenType());
            xc1.toNextToken();
            xc2.toPrevToken();
        }
        //xc1 & xc2 @ shipTo
       toNextTokenOfType(xc1,TokenType.TEXT);
       toNextTokenOfType(xc2,TokenType.TEXT);
       assertEquals("Current Token Type ",
               xc1.currentTokenType(),
               xc2.currentTokenType());
        //both @ Alice Smith
         toNextTokenOfType(xc1,TokenType.TEXT);
       toNextTokenOfType(xc2,TokenType.TEXT);
        assertEquals(XmlCursor.TokenType.TEXT,
                xc1.currentTokenType());
        //these are only equivalent if the cursor is on a TEXT token
        assertEquals(xc1.getChars(), xc1.getTextValue());
        assertEquals(xc1.getChars(), xc2.getTextValue());

        assertEquals(true, xc1.isAtSamePositionAs(xc2));
        xc2.toNextChar(10);


//comparing two cursors in the middle of text

        assertEquals(xc2.toPrevChar(4), xc1.toNextChar(4));
        assertEquals(true, xc2.isRightOf(xc1));
        assertEquals(false, xc1.isRightOf(xc2));
        assertEquals(false, xc2.isLeftOf(xc1));
        assertEquals(false, xc1.isAtSamePositionAs(xc2));
        assertEquals(1, xc2.comparePosition(xc1));
        assertEquals(true, xc1.isInSameDocument(xc2));
        xc1.toNextChar(2);
        assertEquals(0, xc2.comparePosition(xc1));
        assertEquals(xc1.currentTokenType(), xc2.currentTokenType());

//Comparing the same cursor to itself
        xc1.toNextChar(1);
        assertEquals(false, xc1.isRightOf(xc1));
        assertEquals(0, xc2.comparePosition(xc2));
        assertEquals(true, xc2.isInSameDocument(xc2));
        assertEquals(true, xc2.isAtSamePositionAs(xc2));

        xc2.toPrevToken();
        //xc2 on Alice
        assertEquals(TokenType.TEXT, xc2.toPrevToken());
        //put the bookmark on S*mith
        xc1.setBookmark(_theBookmark0);

        //moving xml and bookmark to a
        // different location
        assertEquals(true, xc1.moveXml(xc3));
        xc4 = _theBookmark0.createCursor();

        XmlCursor debug=xc4.newCursor();
        XmlCursor debug1=xc1.newCursor();

         toPrevTokenOfType(debug1,TokenType.START);
        assertEquals(true, xc4.isInSameDocument(xc3));
        assertEquals(-1, xc4.comparePosition(xc3));
      //  assertEquals(TokenType.TEXT, xc3.toPrevToken());
        assertEquals(4,xc3.toPrevChar(4));
        assertEquals(0, xc4.comparePosition(xc3));

//comparing in  two different documents
        assertEquals(false, xc2.isInSameDocument(xc3));


        try {
            xc4.isLeftOf(xc2);
            fail("Expecting Illegal Argument Exception");
        }
        catch (IllegalArgumentException ie) {
        }

        xc1.dispose();
        xc2.dispose();
        xc3.dispose();
        xc4.dispose();

    }

