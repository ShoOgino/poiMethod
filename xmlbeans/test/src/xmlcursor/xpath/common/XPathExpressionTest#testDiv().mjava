    /**
     * div Division 8 div 4 2
     * NOTE: do a case where res is infinite (eg 10 div 3 or 22/7)
     */
    public void testDiv() throws Exception {
        String sXpath=getQuery("testDiv",0); //get the second(last) price child
        String sExpected="<price at=\"val0\">3.00</price>";
        m_xc.selectPath(sXpath);
        m_xc.toNextSelection();
        assertEquals(sExpected,m_xc.xmlText());

        m_xc.clearSelections();
        m_xc.toStartDoc();

        sXpath=getQuery("testDiv",1); //get the second(last) price child
        sExpected="<price at=\"val1\">2</price>";
        m_xc.selectPath(sXpath);
        m_xc.toNextSelection();
        assertEquals(sExpected,m_xc.xmlText());

        m_xc.clearSelections();
        m_xc.toStartDoc();

        String sXpathZero=getQuery("testDiv",2);
        int i = 0;
        try{
            m_xc.selectPath(sXpathZero);
            i = m_xc.getSelectionCount();
            fail("Division by 0");
        }catch (Exception e){}
        assertEquals(0,i);

        m_xc.clearSelections();
        m_xc.toStartDoc();

        String sXpathInf=getQuery("testDiv",3);
        m_xc.selectPath(sXpathInf);
        m_xc.toNextSelection();
        assertEquals(sExpected,m_xc.xmlText());
    }

