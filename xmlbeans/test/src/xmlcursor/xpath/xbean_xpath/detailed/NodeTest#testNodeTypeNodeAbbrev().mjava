    public void testNodeTypeNodeAbbrev() throws XmlException {
        String sQuery1 = "$this/foo/*";
        XmlCursor c = XmlObject.Factory.parse(sXmlChild).newCursor();
        String sExpected = "<bar at0=\"val0\" xmlns:pre=\"http://uri.com\">" +
                "<pre:baz baz:at0=\"val1\" xmlns:baz=\"http://uri\"/>txt child</bar>";
        c.selectPath(sQuery1);
        assertEquals(1, c.getSelectionCount());
        c.toNextSelection();
        assertEquals(sExpected, c.xmlText());
    }
    /**
     * Will not support natively
     *
     public void testNodeTypeNode() throws XmlException {
     String sQuery1 = "$this/foo/node()";
     XmlCursor c = XmlObject.Factory.parse( sXmlChild ).newCursor();
     String sExpected ="<bar at0=\"val0\" xmlns:pre=\"http://uri.com\">" +
     "<pre:baz baz:at0=\"val1\" xmlns:baz=\"http://uri\"/>txt child</bar>";
     c.selectPath(sQuery1);
     assertEquals(1, c.getSelectionCount());
     c.toNextSelection();
     assertEquals(sExpected, c.xmlText());
     }
     public void testNodeTypePI() throws XmlException {

     XmlCursor c = XmlObject.Factory.parse( sXmlChild ).newCursor();
     String sExpected ="<foo><?xml-stylesheet target=\"http://someuri\"?></foo>";
     String sQuery="./foo/processing-instruction()";
     c.selectPath(sQuery);
     assertEquals(1, c.getSelectionCount());
     c.toNextSelection();
     assertEquals(sExpected, c.xmlText());

     }

     public void testNodeTypeText() throws XmlException {
     String sQuery1 = "$this//text()";
     XmlCursor c = XmlObject.Factory.parse( sXmlChild ).newCursor();
     String sExpected =" ";
     assertEquals( XmlCursor.TokenType.START, c.toNextToken() );
     c.selectPath(sQuery1);
     assertEquals(1, c.getSelectionCount());
     c.toNextSelection();
     assertEquals(sExpected, c.xmlText());
     }

     public void testPI() throws XmlException {

     XmlCursor c = XmlObject.Factory.parse( sXmlPI ).newCursor();
     String sExpected ="<?xml-stylesheet target=\"http://someuri\"?>";
     String sQuery="./foo/processing-instruction('xml-stylesheet')";
     c.selectPath(sQuery);
     assertEquals(1, c.getSelectionCount());
     c.toNextSelection();
     assertEquals(sExpected, c.xmlText());

     }

     public void testPIDNE() throws XmlException {

     XmlCursor c = XmlObject.Factory.parse( sXmlPI ).newCursor();
     String sQuery="./foo/processing-instruction('stylesheet')";
     c.selectPath(sQuery);
     assertEquals(0, c.getSelectionCount());

     }
     */

