    /**
     * the preceding axis contains all nodes that are descendants of the root
     * of the tree in which the context node is found, are not ancestors of
     * the context node, and occur before the context node in document order
     *
     * @throws Exception
     */
    public void testZvonExample18()
        throws Exception
    {
        System.out.println("====== Example-18 ==========");
        XmlObject xDoc = XmlObject.Factory.parse(
            JarUtil.getResourceFromJar("xbean/xmlcursor/xpath/zvon18.xml"));
        XmlCursor xc = xDoc.newCursor();
        String ex1Simple = "/AAA/XXX/preceding::*";
        XmlObject[] ex1Xml = new XmlObject[]{
            XmlObject.Factory.parse("<BBB><CCC/><ZZZ><DDD/></ZZZ></BBB>"),
            XmlObject.Factory.parse("<CCC/>"),
            XmlObject.Factory.parse("<ZZZ><DDD/></ZZZ>"),
            XmlObject.Factory.parse("<DDD/>")
        };

        String ex2Simple = "//GGG/preceding::*";
        XmlObject[] ex2Xml = new XmlObject[]{
            XmlObject.Factory.parse("<BBB><CCC/><ZZZ><DDD/></ZZZ></BBB>"),
            XmlObject.Factory.parse("<CCC/>"),
            XmlObject.Factory.parse("<ZZZ><DDD/></ZZZ>"),
            XmlObject.Factory.parse("<DDD/>"),

            XmlObject.Factory.parse("<EEE/>"),
            XmlObject.Factory.parse("<DDD/>"),
            XmlObject.Factory.parse("<CCC/>"),
            XmlObject.Factory.parse("<FFF/>")

            /*XmlObject.Factory.parse(
                                               "<DDD><EEE/><DDD/><CCC/><FFF/><FFF><GGG/></FFF></DDD>"),
                                           XmlObject.Factory.parse(
                                               "<CCC><DDD/></CCC>"),
                                           XmlObject.Factory.parse(
                                               "<XXX><DDD><EEE/><DDD/><CCC/><FFF/><FFF><GGG/></FFF></DDD></XXX>"),
                                           XmlObject.Factory.parse("<DDD/>"),
                                           */
        };

        System.out.println("Test 1: " + ex1Simple);
        XmlCursor x1 = xDoc.newCursor();
        x1.selectPath(fixPath(ex1Simple));
        //XPathCommon.display(x1);
        XPathCommon.compare(x1, ex1Xml);
        x1.dispose();

        System.out.println("Test 2: " + ex2Simple);
        XmlCursor x2 = xDoc.newCursor();
        x2.selectPath(fixPath(ex2Simple));
        //XPathCommon.display(x2);
        XPathCommon.compare(x2, ex2Xml);
        x2.dispose();

    }

