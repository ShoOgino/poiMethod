    public XPathFunctionTestImpl(String name)
    {
        super(name);

        testMap.put("testFunctionCount", new String[]{
            "count(//cd)",
            "//cd[position()=2]"});

        testMap.put("testFunctionLocalName", new String[]{
            "//*[local-name(.)='bar']"});

        testMap.put("testFunctionConcat", new String[]{
            "//bar/*[name(.)=concat(\"pr\",\"ice\")]"});

        testMap.put("testFunctionString", new String[]{
            "/foo/*[name(.)=" +
            "concat(\"bar\",string(./foo/bar/price[last()]))]"});

        testMap.put("testFunctionStringLength", new String[]{
            "//bar/*[string-length(name(.))=5]"});

        testMap.put("testFunctionSubString", new String[]{
            "//bar/*[substring(name(.),3,3)=\"ice\"]"});

        testMap.put("testFunctionSubStringAfter", new String[]{
            "//bar/*[substring-after(" +
            "name(.),'pr'" +
            ")=\"ice\"]"});

        testMap.put("testFunctionSubStringBefore", new String[]{
            "//bar/*[substring-before(" +
            "name(.),'ice'" +
            ")=\"pr\"]"});

        testMap.put("testFunctionTranslate", new String[]{
            "//bar/*[translate(name(.)," +
            "'ice','pr')=\"prpr\"]"});

        testMap.put("testFunctionLang", new String[]{
            "//price[lang(\"en\")=true()]",
            "//foo[lang(\"en\")=true()]"});

        testMap.put("testFunctionTrue", new String[]{
            "//*[boolean(@at)=true()]"});
    }

