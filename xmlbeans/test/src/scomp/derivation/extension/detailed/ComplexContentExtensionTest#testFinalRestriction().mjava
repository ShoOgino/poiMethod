    public void testFinalRestriction() {
        String inputXsd = "    <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n" +
                "    <xsd:complexType name=\"BaseProductTypeFinalRestriction\" final=\"restriction\">\n" +
                "        <xsd:sequence>\n" +
                "            <xsd:element name=\"number\" type=\"xsd:integer\" />\n" +
                "            <xsd:element name=\"name\" type=\"xsd:string\" />\n" +
                "        </xsd:sequence>\n" +
                "    </xsd:complexType>\n" +
                "\n" +
                "    <xsd:complexType name=\"ProductTypeRestriction\">\n" +
                "        <xsd:complexContent>\n" +
                "            <xsd:restriction base=\"BaseProductTypeFinalRestriction\">\n" +
                "                <xsd:sequence>\n" +
                "                    <xsd:element name=\"number\" type=\"xsd:integer\"/>\n" +
                "                </xsd:sequence>\n" +
                "            </xsd:restriction>\n" +
                "        </xsd:complexContent>\n" +
                "    </xsd:complexType>    " +
                "    </xsd:schema>";

        try {
            XmlObject xobj = XmlObject.Factory.parse(inputXsd);
            XmlObject[] compInput = new XmlObject[]{xobj};
            XmlBeans.compileXmlBeans(null, null, compInput, null, XmlBeans.getBuiltinTypeSystem(), null, null);
        }
        catch (XmlException xme) {
            assertEquals(1, xme.getErrors().size());

            XmlError eacherr = (XmlError) xme.getErrors().iterator().next();
            System.out.println("Err:" + eacherr.getMessage());
            assertNotNull(eacherr.getErrorCode());
            assertEquals(XmlErrorCodes.COMPLEX_TYPE_RESTRICTION$FINAL, eacherr.getErrorCode());
        }
    }

