    public void testFinalExtension() {
        String inputXsd = "    <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n" +
                "    <xsd:complexType name=\"BaseProductTypeFinalExtension\" final=\"extension\">\n" +
                "        <xsd:sequence>\n" +
                "            <xsd:element name=\"number\" type=\"xsd:integer\" />\n" +
                "            <xsd:element name=\"name\" type=\"xsd:string\" minOccurs=\"0\" />\n" +
                "        </xsd:sequence>\n" +
                "    </xsd:complexType>\n" +
                "\n" +
                "    <xsd:complexType name=\"ProductTypeExtension\">\n" +
                "        <xsd:complexContent>\n" +
                "            <xsd:extension base=\"BaseProductTypeFinalExtension\">\n" +
                "                <xsd:sequence>\n" +
                "                    <xsd:element name=\"subcategory\" type=\"xsd:string\"/>\n" +
                "                </xsd:sequence>\n" +
                "            </xsd:extension>\n" +
                "        </xsd:complexContent>\n" +
                "    </xsd:complexType>    \n" +
                "\n" +
                "    </xsd:schema>";

        try {
            XmlObject xobj = XmlObject.Factory.parse(inputXsd);
            XmlObject[] compInput = new XmlObject[]{xobj};
            XmlBeans.compileXmlBeans(null, null, compInput, null, XmlBeans.getBuiltinTypeSystem(), null, null);
        }
        catch (XmlException xme) {
            assertEquals(xme.getErrors().size(), 1);

            XmlError eacherr = (XmlError) xme.getErrors().iterator().next();
            System.out.println("error:" + eacherr.getErrorCode());
            assertNotNull(eacherr.getErrorCode());
            assertEquals(XmlErrorCodes.COMPLEX_TYPE_EXTENSION$FINAL, eacherr.getErrorCode());
        }
    }

