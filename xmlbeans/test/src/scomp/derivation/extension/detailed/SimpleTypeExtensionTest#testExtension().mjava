    public void testExtension() throws Throwable {
        SimpleExtensionEltDocument doc = SimpleExtensionEltDocument.Factory.newInstance();
        SimpleExtensionT elt = doc.addNewSimpleExtensionElt();

        assertTrue(!doc.validate(validateOptions));

        String[] errExpected = new String[]{"cvc-attribute"};
//        assertTrue(compareErrorCodes(errExpected));

        elt.setStringValue("1");
        assertTrue(elt.validate());
        elt.setAttribute("ATTR_VAL");
        try{
        assertTrue(doc.validate());
        }catch(Throwable t){
            showErrors();
            throw t;
        }
        assertEquals("ATTR_VAL", elt.getAttribute());
        elt.unsetAttribute();
        assertEquals(null, elt.getAttribute());
        assertTrue(!elt.isSetAttribute());

        // why does type mismatch show up as XmlValueOutOfRangeException ?
        // updated: ok, since a setStringValue is used for an integer, this is a case where set value cannot be converted
        // into any of the possible valid types. Hence an exception is
        // throw irrespective of the setValidateOnSet XmlOption
        boolean voeThrown = false;
        try{
            elt.setStringValue("foobar");
            //assertTrue(!elt.validate(validateOptions));

            //errExpected = new String[]{"cvc-attribute"};
            //assertTrue(compareErrorCodes(errExpected));
        }
        catch (XmlValueOutOfRangeException voe){
            voeThrown = true;
        }
        finally{
            if(!voeThrown)
                fail("Expected XmlValueOutOfRangeException here");
        }


    }

