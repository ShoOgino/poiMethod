    /**
     * field combo not unique in instance  (a and c are the same)
     *
     * @throws Throwable
     */
    public void testUniqueIllegal() throws Throwable {
        ProductListDocument doc = ProductListDocument.Factory.newInstance();
        ProductListType products = ProductListType.Factory.newInstance();
        ProductType a = products.addNewProduct();
        ProductType.Department dep = ProductType.Department.Factory.newInstance();
        XmlString val = XmlString.Factory.newInstance();
        val.setStringValue("FooDep");
        dep.setName(val);
        a.setDepartmentArray(new ProductType.Department[]{dep});
        a.setId("0");

        ProductType b = products.addNewProduct();
        b.setDepartmentArray(new ProductType.Department[]{dep});
        b.setId("1");

        ProductType c = products.addNewProduct();
        c.setDepartmentArray(new ProductType.Department[]{dep});
        c.setId("0");
        doc.setProductList(products);

        System.out.println(doc.xmlText());

        assertTrue(!doc.validate(validateOptions));
        showErrors();
        String[] errExpected = new String[]{
            XmlErrorCodes.IDENTITY_CONSTRAINT_VALID$DUPLICATE_UNIQUE
        };
        assertTrue(compareErrorCodes(errExpected));


    }

