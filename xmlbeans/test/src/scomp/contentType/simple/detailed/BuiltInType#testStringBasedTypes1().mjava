    /**
     * testing types String, normalizedString and token
     *
     * @throws Throwable
     */
    public void testStringBasedTypes1() throws Throwable {
        String[] exp = new String[]{
            "\tLead tab,A string on\n 2 lines with 2  spaces",
            "  2 Lead spaces,A string on\n 2 lines with 2  spaces",
            " Lead tab,A string on  2 lines with 2  spaces",
            "  2 Lead spaces,A string on  2 lines with 2  spaces",
            "Lead tab,A string on 2 lines with 2 spaces",
            "2 Lead spaces,A string on 2 lines with 2 spaces"
        };
        StringEltDocument doc = StringEltDocument.Factory.parse(buildString("StringElt", false));
        assertTrue(doc.validate(validateOptions));
        assertEquals("<StringElt" +
                " xmlns=\"http://xbean/scomp/contentType/builtIn/String\">" +
                exp[0] +
                "</StringElt>", doc.xmlText());

        doc = StringEltDocument.Factory.parse(buildString("StringElt", true));
        assertTrue(doc.validate(validateOptions));
        assertEquals(
                exp[1]
                , doc.getStringElt());

        NormalizedStringEltDocument doc1 = NormalizedStringEltDocument.Factory
                .parse(buildString("NormalizedStringElt", false));
        assertTrue(doc.validate(validateOptions));
        assertEquals(exp[2], doc1.getNormalizedStringElt());
        doc1 =
                NormalizedStringEltDocument.Factory
                .parse(buildString("NormalizedStringElt", true));
        assertTrue(doc1.validate(validateOptions));
        assertEquals(
                exp[3] , doc1.getNormalizedStringElt());

        TokenEltDocument doc2 = TokenEltDocument.Factory.parse(buildString("TokenElt", false));
        assertTrue(doc2.validate(validateOptions));
        assertEquals(exp[4] , doc2.getTokenElt());
        doc2 = TokenEltDocument.Factory.parse(buildString("TokenElt", true));
        assertTrue(doc2.validate(validateOptions));
        assertEquals(exp[5], doc2.getTokenElt());
    }

