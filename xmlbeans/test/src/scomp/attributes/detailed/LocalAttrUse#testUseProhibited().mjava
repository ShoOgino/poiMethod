    public void testUseProhibited() throws Throwable {
        AttrProhibitedEltDocument doc =
                AttrProhibitedEltDocument.Factory.newInstance();
        AttrUseProhibited elt = doc.addNewAttrProhibitedElt();
        elt.setAttRequiredFixed("XBeanFix");
        elt.setAttRequired(new BigInteger("10"));
        elt.setAttRequiredDefault("boo");
        try {
            assertTrue(elt.validate(validateOptions));
        } catch (Throwable t) {
            showErrors();
            throw t;
        }
        //use here is prohibited
        elt.setAttOpt("bla");
        assertTrue(!elt.validate(validateOptions));
        showErrors();
        //does Kevin have the right code here? doesn't seem so to me?
        String[] errExpected = new String[]{
            XmlErrorCodes.ELEM_COMPLEX_TYPE_LOCALLY_VALID$NO_WILDCARD
        };
        assertTrue(compareErrorCodes(errExpected));


        elt.unsetAttOpt();
        try {
            assertTrue(elt.validate(validateOptions));
        } catch (Throwable t) {
            showErrors();
            throw t;
        }
    }

