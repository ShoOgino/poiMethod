    public void testAttributeGroup() throws Throwable {
        AttGroupEltDocument doc = AttGroupEltDocument.Factory.newInstance();
        GlobalT elt = doc.addNewAttGroupElt();
        XmlObject obj = elt.addNewChild2();
        XmlString str = XmlString.Factory.newInstance();
        str.setStringValue("child2Elt");
        obj.set(str);
        XmlDecimal val = XmlDecimal.Factory.newInstance();
        elt.xsetGlobalAttr(val);

        elt.setVersion(new BigDecimal(new BigInteger("10")));
        elt.setGlobalAttr(new BigDecimal(BigInteger.ONE));
        //add a wildcard attr: ##other, lax
        XmlCursor cur = elt.newCursor();
        //move to document element
        cur.toNextToken();
        cur.insertAttribute(new QName("http://org.apache.sample", "attr",
                "pre"));
        String[] errExpected=new String[]{
            XmlErrorCodes
                .ELEM_COMPLEX_TYPE_LOCALLY_VALID$MISSING_REQUIRED_ATTRIBUTE};
        assertTrue( !doc.validate(validateOptions) );

       /*  assertTrue( compareErrorCodes(new String[]{
            XmlErrorCodes.ELEM_COMPLEX_TYPE_LOCALLY_VALID
        }) ); */
        assertEquals(1, errorList.size());
        showErrors();
        assertTrue(compareErrorCodes(errExpected));


        System.out.println("*******");
        elt.setID("IdAttr");
        try {
            assertTrue(elt.validate(validateOptions));
        }
        catch (Throwable t) {
            showErrors();
            throw t;
        }


    }

