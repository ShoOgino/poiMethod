    public void testsFaultCodeNSUpdate() throws Exception
    {
        EnvelopeDocument env1 = EnvelopeDocument.Factory.parse("<soap:Envelope \n" +
                "xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n" +
                "  <soap:Body>\n" +
                "      <soap:Fault>\n" +
                "           <faultcode>soap:Server</faultcode>\n" +
                "           <faultstring>my error message</faultstring>\n" +
                "      </soap:Fault>\n" +
                "  </soap:Body>\n" +
                "</soap:Envelope>");

        // Test for NS of the faultcode element
        EnvelopeDocument env2 = EnvelopeDocument.Factory.newInstance();
        env2.addNewEnvelope().setBody(env1.getEnvelope().getBody());

        // compare the 2 body elements using the Xml Comparator. This uses a cursor to walk thro the docs and compare elements and attributes
        tools.xml.XmlComparator.Diagnostic diag = new tools.xml.XmlComparator.Diagnostic();
        assertTrue("new envelope has missing XSD namespace declaration", XmlComparator.lenientlyCompareTwoXmlStrings(env1.getEnvelope().getBody().xmlText(), env2.getEnvelope().getBody().xmlText(), diag));

        // navigate to the soap element and check for the 'soap' namespace
        XmlCursor env2Cursor = env2.newCursor();
        assertTrue(env2Cursor.toFirstChild());      // <Envelope>
        assertTrue(env2Cursor.toFirstChild());      // <Body>
        assertTrue(env2Cursor.toFirstChild());      // <Fault>
        if (env2Cursor.toFirstChild())              // <faultcode>
        {
            assertTrue("Element name mismatch!", env2Cursor.getName().equals(new QName("","faultcode")));
            assertEquals("soap Namespace has been dropped", "http://schemas.xmlsoap.org/soap/envelope/", env2Cursor.namespaceForPrefix("soap"));
        }

    }

