    public void testNillableGlobalElement()
    {
        XmlOptions options = new XmlOptions();
        options.setValidateOnSet();

        // global element, nillable. If setXXX is set to null & validateOnSet is true, it should NOT throw XmlValueNotNillableException
        GlobalEltNillableDocument testElt = GlobalEltNillableDocument
                .Factory.newInstance(options);
        try{
            testElt.setGlobalEltNillable(null);
        }
        catch (XmlValueNotNillableException e) {
            e.printStackTrace();
            fail("XmlValueNotNillableException Not Expected here");
        }
        assertEquals("<nil:GlobalEltNillable " +
               "xsi:nil=\"true\" " +
               "xmlns:nil=\"http://xbean/scomp/element/NillTest\" " +
               "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>",
               testElt.xmlText());

        // without the validateOnSet - no exception in this case either
        GlobalEltNillableDocument testEltWithValidateOff = GlobalEltNillableDocument
                .Factory.newInstance();
        try{
            testEltWithValidateOff.setGlobalEltNillable(null);
        }
        catch (XmlValueNotNillableException e) {
            e.printStackTrace();
            fail("XmlValueNotNillableException Not Expected here");
        }
        assertEquals("<nil:GlobalEltNillable " +
               "xsi:nil=\"true\" " +
               "xmlns:nil=\"http://xbean/scomp/element/NillTest\" " +
               "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"/>",
               testElt.xmlText());


    }

