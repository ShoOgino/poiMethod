    public void testReplaceChildDNE() {

        if (!(m_doc instanceof Document))
            assertEquals(m_doc, m_node.getOwnerDocument());

        //node to replace is not a child
        Node node =m_doc.createElement("foobar");
        Node newNode = m_doc.createElement("fooBAR");
        try {
            super.testReplaceChild(newNode, node);
        } catch (DOMException de) {
            assertEquals(DOMException.NOT_FOUND_ERR, de.code);//Raised if oldChild is not a child of this node.
        }

         //newChild was created from a different document than the one that created this node

        newNode = m_docNS.createElement("fooBAR");
        assertFalse(m_docNS.equals(m_node.getOwnerDocument()));
        try {
            super.testReplaceChild(newNode, node);
            fail("Node is from the wrong document");
        } catch (DOMException de) {
            assertEquals(DOMException.WRONG_DOCUMENT_ERR, de.code);
        }
       //refChild was created from a different document than the one that created this node

          node = m_docNS.createElement("fooBAR");
            newNode=m_doc.createElement("fooBAR");
        try {
            super.testReplaceChild(newNode, node);
            fail("Node is from the wrong document");
        } catch (DOMException de) {
            assertTrue(
                          (DOMException.WRONG_DOCUMENT_ERR == de.code)
                           || (DOMException.NOT_FOUND_ERR == de.code)
                    );
        }

    }

