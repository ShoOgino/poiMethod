    public void testRemoveChild(Node removed) {
        int pos = getChildPos(m_node, removed);
        int len = m_node.getChildNodes().getLength();
        if (removed == null)
            try {
                m_node.removeChild(removed);
                fail("Should not be Removing non-existing node");
            } catch (DOMException de) {
                assertEquals(DOMException.NOT_FOUND_ERR, de.code);
            }
        else if (pos == -1)
            try {
                m_node.removeChild(removed);
                fail("Removing non-existing node");
            } catch (DOMException de) {
                throw de;
            }
        else {
            m_node.removeChild(removed);
            assertEquals(len - 1, m_node.getChildNodes().getLength());
        }

    }

