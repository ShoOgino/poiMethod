    public void testCreateProcessingInstruction() {
        ProcessingInstruction pi = null;
        try {
            pi = m_doc.createProcessingInstruction("xml", "version 1.0");
            assertEquals(null, pi.getParentNode());
            assertEquals(m_doc, pi.getOwnerDocument());
            fail(" this is a no-go");
        }
        catch (Throwable t) {
            //TODO: ensure right exception here
        }
        String val = null;
        pi = m_doc.createProcessingInstruction("xml-foo", val);
        assertEquals("", pi.getData());


        try {
            pi = m_doc.createProcessingInstruction(null, "foo");
            fail("PI target can't be null");
        }
        catch (IllegalArgumentException e) {

        }


        try {
            pi = m_doc.createProcessingInstruction("invalid@", "foo");
            fail("Invalid pi name");
        }
        catch (DOMException de) {
            assertEquals(DOMException.INVALID_CHARACTER_ERR, de.code);
        }

    }

