    // test getElementById() with schema containing DTD with ID definition for untyped XmlObject
    public void testIDSchema() throws Exception
    {
        XmlObject o = XmlObject.Factory.parse("<!DOCTYPE xs:schema PUBLIC \"-//W3C//DTD XMLSCHEMA 200102//EN\" \"XMLSchema.dtd\" [\n" +
                "<!ELEMENT first_name (#PCDATA)>\n" +
                "<!ELEMENT hobby (#PCDATA)>\n" +
                "<!ELEMENT homepage EMPTY>\n" +
                "<!ATTLIST homepage href CDATA #REQUIRED>\n" +
                "<!ELEMENT last_name (#PCDATA)>\n" +
                "<!ELEMENT middle_initial (#PCDATA)>\n" +
                "<!ELEMENT name (first_name, middle_initial?, last_name)>\n" +
                "<!ELEMENT person (name, profession+, homepage?, hobby?)>\n" +
                "<!ATTLIST person\n" +
                "        born CDATA #REQUIRED\n" +
                "        died CDATA #REQUIRED\n" +
                "        id ID #REQUIRED\n" +
                ">\n" +
                "<!ELEMENT profession (#PCDATA)>\n" +
                "]>" +
                "<person id=\"25\" born=\"yday\" />");
        Document n = (Document) o.getDomNode();
        Element elem = n.getElementById("25");
        assertNotNull(elem);
        System.out.println("Elem: " + elem.getNodeName());

        Element elemInvalid = n.getElementById("100");
        assertNull(elemInvalid);
    }

