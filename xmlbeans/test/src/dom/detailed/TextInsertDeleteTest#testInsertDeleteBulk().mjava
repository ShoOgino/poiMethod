    public void testInsertDeleteBulk() {

        int nNodeCnt = 16;
        m_node = m_docNS.getDocumentElement();
        Text[] nodes = new Text[nNodeCnt];
        NodeList ch = m_node.getChildNodes();

        for (int i = 0; i < nNodeCnt; i++) {
            nodes[i] = m_docNS.createTextNode("bar" + i);
            m_node.appendChild(nodes[i]);
        }

        assertEquals(nNodeCnt, ch.getLength());

        //delete all odd entries;go back
        for (int i = nNodeCnt - 1; i > -1; i--) {
            if (i % 2 != 0)
                m_node.removeChild(nodes[i]);
        }

        assertEquals(nNodeCnt/2 , ch.getLength());

        //split all remaining nodes

        for (int i = 0; i < nNodeCnt; i++) {
            ((Text)ch.item(i++)).splitText(2);
        }
        System.out.println();
        //delete all even entries;go fwd
        for (int i = 0; i < nodes.length; i++) {
            if (i % 2 == 0)
                m_node.removeChild(nodes[i]);
        }
          System.out.println();
        for (int i = 0; i < nNodeCnt / 2; i++) {

            assertEquals("r" + 2 * i, ch.item(i).getNodeValue());
        }

    }

