    public void testInsertDelete() {
        //eric test
        // TODO: three children delete middle--verify length
        m_node = m_docNS.getFirstChild();

        Text txt1 = m_docNS.createTextNode("bar");
        Text txt2 = m_docNS.createTextNode("baz");
        m_node.appendChild(txt1);
        m_node.appendChild(txt2);
        assertEquals("baz", m_node.getLastChild().getNodeValue());
        assertEquals("bar", m_node.getFirstChild().getNodeValue());
        m_node.removeChild(m_node.getChildNodes().item(1));
        assertEquals("bar", m_node.getLastChild().getNodeValue());

        NodeList ch = m_node.getChildNodes();

        //another test
        Text txt3 = m_docNS.createTextNode("boom");
        m_node.appendChild(txt2);
        m_node.appendChild(txt3);
        Node remove = m_node.getChildNodes().item(1);
        m_node.removeChild(remove);
        assertEquals("boom", m_node.getLastChild().getNodeValue());
        assertEquals("bar", m_node.getFirstChild().getNodeValue());
        assertEquals(2, ch.getLength());

        m_node.removeChild(m_node.getChildNodes().item(1));
        assertEquals(1, ch.getLength());
        assertEquals("bar", m_node.getLastChild().getNodeValue());
        assertEquals("bar", m_node.getFirstChild().getNodeValue());


    }

