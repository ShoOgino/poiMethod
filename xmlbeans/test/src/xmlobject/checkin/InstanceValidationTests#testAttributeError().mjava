    public void testAttributeError() throws XmlException
    {
        StringBuffer empSchema = new StringBuffer();

        empSchema.append("<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'   elementFormDefault='qualified'>\n");
        empSchema.append("<xs:element name='age'>\n");
        empSchema.append("<xs:simpleType>\n");
        empSchema.append("<xs:restriction base='xs:integer'>\n");
        empSchema.append("<xs:minInclusive value='0'/>\n");
        empSchema.append("<xs:maxInclusive value='100'/>\n");
        empSchema.append("</xs:restriction>\n");
        empSchema.append("</xs:simpleType>\n");
        empSchema.append("</xs:element>\n");
        empSchema.append("<xs:element name='empRecords'>\n");
        empSchema.append("<xs:complexType>\n");
        empSchema.append("<xs:sequence>\n");
        empSchema.append("<xs:element name='person' type='personType' maxOccurs='unbounded'/>\n");
        empSchema.append("</xs:sequence>\n");
        empSchema.append("</xs:complexType>\n");
        empSchema.append("</xs:element>\n");
        empSchema.append("<xs:element name='name' type='xs:string'/>\n");
        empSchema.append("<xs:complexType name='personType'>\n");
        empSchema.append("<xs:sequence>\n");
        empSchema.append("<xs:element ref='name'/>\n");
        empSchema.append("<xs:element ref='age'/>\n");
        empSchema.append("</xs:sequence>\n");
        empSchema.append("<xs:attribute name='employee' use='required'>\n");
        empSchema.append("<xs:simpleType>\n");
        empSchema.append("<xs:restriction base='xs:NMTOKEN'>\n");
        empSchema.append("<xs:enumeration value='current'/>\n");
        empSchema.append("<xs:enumeration value='past'/>\n");
        empSchema.append("</xs:restriction>\n");
        empSchema.append("</xs:simpleType>\n");
        empSchema.append("</xs:attribute>\n");
        empSchema.append("</xs:complexType>\n");
        empSchema.append("</xs:schema>\n");

        StringBuffer xmlInstance = new StringBuffer();
        xmlInstance.append("<empRecords xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' >");
        xmlInstance.append("<person employee='past'>");
        xmlInstance.append("<name>joe blow</name>");
        xmlInstance.append("<age>31</age>");
        xmlInstance.append("</person>");
        xmlInstance.append("<person>");
        xmlInstance.append("<name>test user</name>");
        xmlInstance.append("<age>29</age>");
        xmlInstance.append("</person>");
        xmlInstance.append("</empRecords>");

        String[] schemas = {empSchema.toString()};

        List errors = null;

        errors = performValidation(schemas, null, xmlInstance.toString(), true);
        Assert.assertTrue(errors != null);
        Assert.assertTrue(errors.size()>0);

        for (Iterator it = errors.iterator(); it.hasNext();)
        {
            XmlError xmlError = (XmlError) it.next();
            Assert.assertEquals(xmlError.getMessage(), "Expected attribute: employee in element person");
            // todo check XmlValidationError
        }
    }

