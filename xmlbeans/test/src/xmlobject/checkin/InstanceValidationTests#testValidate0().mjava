    public void testValidate0 ( )
            throws Exception
        {
            //
            // The most basic schema
            //

            String schema =
                "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'>\n" +
                "</xs:schema>" +
                "";

            String[] schemas = { schema };

            SchemaTypeLoader stl = makeSchemaTypeLoader( schemas );

            //
            // One which uses ##targetNamespace on a wildcard
            //

            schema =
                "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'>\n" +
                "  <xs:complexType name='foo'>\n" +
                "    <xs:sequence>\n" +
                "      <xs:any namespace='##targetNamespace'/>\n" +
                "    </xs:sequence>\n" +
                "  </xs:complexType>\n" +
                "</xs:schema>" +
                "";

            String[] schemas99 = { schema };

            stl = makeSchemaTypeLoader( schemas99 );

            //
            // A big, nasty schema :-)
            //

             File schemeFile =
                     JarUtil.getResourceFromJarasFile("xbean/xmlobject/store/XMLSchema.xsd" );
            File xmlFile =  JarUtil.getResourceFromJarasFile("xbean/xmlobject/store/XML.xsd" );

            File[] schemasF = { schemeFile, xmlFile };

            stl = makeSchemaTypeLoader( schemasF );

            SchemaType type =
                stl.findDocumentType(
                    new QName( "http://www.w3.org/2001/XMLSchema", "schema" ) );

            Assert.assertTrue( type != null );


            //
            // A good piece from a J2EE schema
            //

            schema =
                "<?xml version='1.0' encoding='UTF-8'?>\n" +
                "<xsd:schema xmlns='http://www.w3.org/2001/XMLSchema'\n" +
                "     xmlns:xsd='http://www.w3.org/2001/XMLSchema'\n" +
                "     elementFormDefault='qualified'\n" +
                "     attributeFormDefault='unqualified'>\n" +
                "<xsd:annotation>\n" +
                "<xsd:documentation>\n" +
                "@(#)application-client_1_4.xsds	1.7 07/08/02\n" +
                "</xsd:documentation>\n" +
                "</xsd:annotation>\n" +
                "</xsd:schema>\n";

            String[] schemas5 = { schema };

            stl = makeSchemaTypeLoader( schemas5 );

            //
            // A bad schema
            //

            schema = "<foo/>";

            String[] schemas2 = { schema };

            try
            {
                stl = makeSchemaTypeLoader( schemas2 );
                Assert.assertTrue( false );
            }
            catch ( Exception e )
            {
            }

            //
            // A bad schema
            //
            schema =
                "<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'>\n" +
                "  <foo/>\n" +
                "</xs:schema>" +
                "";

            String[] schemas3 = { schema };

            try
            {
                makeSchemaTypeLoader( schemas3 );

                Assert.assertTrue( false );
            }
            catch ( XmlException e )
            {
            }
        }

