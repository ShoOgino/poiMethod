    public void test_validSubstitute() throws Exception
    {
        QName name = new QName(URI, "beanBag");
        // get an item
        xmlobject.substgroup.OrderItem order = OrderItem.Factory.newInstance();
        ItemType item = order.addNewItem();
        item.setName("ItemForTest");
        item.setSku(new BigInteger("12"));

        // types and content before substitution
        System.out.println("Before Substitution :\nQNAme Item doc    :" + ItemDocument.type.getName());
        System.out.println("QNAme beanBag elem:" + name);
        System.out.println("item type:" + item.getClass().getName());
        System.out.println("item XMLText      : " + item.xmlText());

        try{
            XmlObject xObj = item.substitute(name, BeanBagType.type);
            System.out.println("After Substitution :\nSubstituted XObj text: "+xObj.xmlText());
            System.out.println("Substituted XObj type: " + xObj.getClass().getName());
            Assert.assertNotSame("Invalid Substitution. Xobj Types after substitution are the same.",xObj.getClass().getName(),item.getClass().getName() );

        }catch(NullPointerException npe){
            System.out.println("NPE Thrown: "+npe.getMessage());
            npe.printStackTrace();
        }

        boolean xvdThrown = false;
        try{
            // invoke some operation on the original XmlObject, it should thrown an XmlValueDisconnectedException
            item.xmlText();
        }catch(XmlValueDisconnectedException xvdEx){
            xvdThrown = true;
        }

        if( !xvdThrown ){
            Assert.fail("Referencing Item  after " +
                    "substitute did not throw the expected XmlValueDisconnectedException");
        }

    }

