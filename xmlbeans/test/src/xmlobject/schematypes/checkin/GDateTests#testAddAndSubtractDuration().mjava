    public void testAddAndSubtractDuration()
    {
        _testAddAndSubtract("1970-01-01", "1973-01-01", "P3Y");
        _testAddAndSubtract("0001-01-01", "0004-01-01", "P3Y");
        // there is no year 0, so 1 BCE + 3Y = 3 CE
        _testAddAndSubtract("-0001-01-01", "0003-01-01", "P3Y");
        _testAddAndSubtract("-0002-01-01", "0003-01-01", "P4Y");
        _testAddAndSubtract("-0001-01-01", "0001-01-01", "P1Y");
        _testSubtract("-0001-02-29", "0004-02-29", "P4Y");
        _testSubtract("-0001-12-31", "0001-01-01", "P1D");
        _testSubtract("-0002-12-31", "0001-12-31", "P731D");
        _testAddAndSubtract("1970-01-01T00:00:00", "1973-02-01T01:30:45", "P3Y31DT1H30M45S");
        _testAddAndSubtract("-0001-01-01T00:00:00", "0003-02-01T01:30:45", "P3Y31DT1H30M45S");
        // addition and subtraction of duration is not necessarily symmetric
        // if duration is not constant, i.e., contains a component that varies
        // in length, such as  month (or year)
        _testAdd("2000-02-29", "2001-02-28", "P1Y");
        _testSubtract("2000-02-28", "2001-02-28", "P1Y");
        _testAddAndSubtract("1970-01-01T23:00:00", "1970-01-02T00:00:00", "PT1H");
        _testAddAndSubtract("1970-01-01T00:00:00", "1969-12-31T23:00:00", "-PT1H");
        _testAddAndSubtract("1970-01-01T00:00:00", "1969-12-31T22:59:59", "-PT1H1S");
        _testAddAndSubtract("1971-02-02T01:01:01.1", "1970-01-01T00:00:00", "-P1Y1M1DT1H1M1.1S");
        _testAdd("1970-01-01T00:00:00", "1968-11-29T22:58:58.9", "-P1Y1M1DT1H1M1.1S");
        _testSubtract("1969-12-31T00:00:00", "1968-11-29T22:58:58.9", "-P1Y1M1DT1H1M1.1S");
        _testAdd("0001-01-01T00:00:00", "-0002-11-29T22:58:58.9", "-P1Y1M1DT1H1M1.1S");
        _testSubtract("0001-01-01T00:00:00", "-0002-11-29T22:58:58.9", "-P1Y1M2DT1H1M1.1S");
    }

