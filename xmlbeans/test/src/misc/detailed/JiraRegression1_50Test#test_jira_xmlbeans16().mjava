    /*
    * [XMLBEANS-16]: newDomNode creates a DOM with empty strings for namespace URIs for unprefixed
    * attributes (rather than null)
    * status : fails with crimson and not with Xerces
    */
    public void test_jira_xmlbeans16() throws Exception {
        StringBuffer sb = new StringBuffer(100);
        sb.append("<?xml version='1.0'?>\n");
        sb.append("<test noprefix='nonamespace' \n");
        sb.append("      ns:prefix='namespace' \n");
        sb.append("      xmlns:ns='http://xml.apache.org/xmlbeans'>value</test>");

        // Parse it using XMLBeans
        XmlObject xdoc = XmlObject.Factory.parse(sb.toString());

        // Convert to a DOM Element
        Element firstChild = (Element) xdoc.newDomNode().getFirstChild();

        // We expect to find a null namespace for the first attribute and 'ns' for the second
        NamedNodeMap attributes = firstChild.getAttributes();
        System.out.println("Prefix for attr noprefix is:" + attributes.getNamedItem("noprefix").getPrefix() + ":");
        assertNull("Expected null namespace for attribute noprefix", attributes.getNamedItem("noprefix").getPrefix());
        assertEquals("Wrong namespace for attribute prefix", "ns", attributes.getNamedItem("ns:prefix").getPrefix());

        // We should be able to lookup 'prefix' by specifying the appropriate URI
        String prefix = firstChild.getAttributeNS("http://xml.apache.org/xmlbeans", "prefix");
        assertEquals("Wrong value for prefixed attribute", "namespace", prefix);

        // And 'noprefix' by specifying a null namespace URI
        String noprefix = firstChild.getAttributeNS(null, "noprefix");
        assertEquals("Wrong value for unprefixed attribute", "nonamespace", noprefix); // This assertion fails under Crimson

    }

