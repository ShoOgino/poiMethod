        public void run()
        {

            try {
                String xbean_home = System.getProperty("xbean.rootdir");
                if (xbean_home == null) {
                    xbean_home = new File(".").getAbsolutePath();
                }
                File xbeanFile = new File(xbean_home + "/build/lib/xbean.jar");
                if (!xbeanFile.exists())
                    throw new Exception("File does not exist");
                URL xbeanjar = xbeanFile.toURL();
                File xmlpublicFile = new File(xbean_home + "/build/lib/xmlpublic.jar");
                if (!xmlpublicFile.exists())
                    throw new Exception("File does not exist");
                URL xmlpublicjar = xmlpublicFile.toURL();
                File jsr173File = new File(xbean_home + "/build/lib/jsr173.jar");
                if (!jsr173File.exists())
                    throw new Exception("File does not exist");
                URL jsr173jar = new URL(jsr173File.toURL().toString());
                File jsr173_apiFile = new File(xbean_home + "/build/lib/jsr173_1.0_api.jar");
                if (!jsr173_apiFile.exists())
                    throw new Exception("File does not exist");
                URL jsr173_apijar = jsr173_apiFile.toURL();
                File jsr173_riFile = new File(xbean_home + "/build/lib/jsr173_1.0_ri.jar");
                if (!jsr173_riFile.exists())
                    throw new Exception("File does not exist");
                URL jsr173_rijar = jsr173_riFile.toURL();
                File junitFile = new File(xbean_home + "/external/lib/junit.jar");
                if (!junitFile.exists())
                    throw new Exception("File does not exist");
                URL junitjar = junitFile.toURL();

                File xmlcursorFile = new File(xbean_home + "/build/test/lib/schemajars/xmlcursor.jar");
                if (!xmlcursorFile.exists())
                    throw new Exception("File does not exist");
                URL xmlcursorjar = xmlcursorFile.toURL();
                File validatingFile = new File(xbean_home + "/build/test/lib/schemajars/ValidatingStream.jar");
                if (!validatingFile.exists())
                    throw new Exception("File does not exist");
                URL validating = validatingFile.toURL();


                //URLClassLoader allLoader = new URLClassLoader(new URL[]{xbeanjar, xmlpublicjar,
                //                                                        jsr173jar, jsr173_apijar, jsr173_rijar,
                //                                                        junitjar, validating, xmlcursorjar});

                URLClassLoader personLoader = new URLClassLoader(new URL[]{xbeanjar, xmlpublicjar,
                                                                      jsr173jar, jsr173_apijar, jsr173_rijar,
                                                                      junitjar, validating});

                URLClassLoader poLoader = new URLClassLoader(new URL[]{xbeanjar, xmlpublicjar,
                                                                      jsr173jar, jsr173_apijar, jsr173_rijar,
                                                                      junitjar, xmlcursorjar});

                for (int i = 0; i < ITERATION_COUNT; i++) {
                    switch (i) {
                        case 0:
                            testPO(poLoader);
                            break;
                        case 1:
                            testPerson(personLoader);
                            break;
                        default:
                            System.out.println("Val: " + i);
                            break;
                    }

                }
                _result = true;

            } catch (Throwable t) {
                _throwable = t;
                t.printStackTrace();
            }
        }

