    // This method parsers the input xml string using the DOM API with the parser specified using the 
    // "javax.xml.parsers.DocumentBuilderFactory" system property
    public void parseXmlWithDOMAPI(String xmlInput, String parserName, String docbuilderfactory) {

        System.setProperty("javax.xml.parsers.DocumentBuilderFactory", docbuilderfactory);
        try {
            // Step 1: create a DocumentBuilderFactory and configure it
            DocumentBuilderFactory dbf =
                    DocumentBuilderFactory.newInstance();

            dbf.setNamespaceAware(true);

            // Set the validation mode to either: no validation, DTD
            // validation, or XSD validation
            dbf.setValidating(false);

            // Step 2: create a DocumentBuilder that satisfies the constraints
            // specified by the DocumentBuilBderFactory
            DocumentBuilder db = dbf.newDocumentBuilder();

            // Step 3: parse the input string
            Document doc = db.parse(new InputSource(new StringReader(xmlInput)));
        }
        catch (ParserConfigurationException pce) {
            pce.printStackTrace();
        }
        catch (SAXParseException spe) {
            System.out.println("parsing error with " + parserName + " (DOM) for xml input string :'" + xmlInput + "''");
            spe.printStackTrace();
            fail("parsing error with " + parserName + " (DOM) for xml input string :'" + xmlInput + "''");
        }
        catch (SAXException se) {
            se.printStackTrace();
        }
        catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }

