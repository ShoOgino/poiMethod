    public void testDynamicLoad2() throws Throwable {
        File inputfile1 = JarUtil
                .getResourceFromJarasFile("xbean/misc/dyntest2.xsd");
        SchemaTypeLoader loader = XmlBeans.loadXsd(new XmlObject[]
        {XmlObject.Factory.parse(inputfile1)});
        XmlObject result = loader.parse(
                JarUtil.getResourceFromJarasFile("xbean/misc/dyntest2.xml"),
                null, null);
        Assert.assertEquals(
                "D=wrappedwildcard@http://openuri.org/test/dyntest",
                result.schemaType().toString());
        Assert.assertEquals(
                loader.findDocumentType(
                        new QName("http://openuri.org/test/dyntest",
                                "wrappedwildcard")),
                result.schemaType());
        XmlCursor cur = result.newCursor();
        Assert.assertTrue("Should have a root element", cur.toFirstChild());
        result = cur.getObject();
        Assert.assertEquals(
                "E=wrappedwildcard|D=wrappedwildcard@http://openuri.org/test/dyntest",
                result.schemaType().toString());
        Assert.assertEquals(
                loader.findElement(
                        new QName("http://openuri.org/test/dyntest",
                                "wrappedwildcard"))
                .getType(),
                result.schemaType());
        Assert.assertTrue("Should have a first child", cur.toFirstChild());
        Assert.assertEquals(
                new QName("http://www.w3.org/2001/XMLSchema", "schema"),
                cur.getName());
        XmlObject obj = cur.getObject();
        Assert.assertEquals(Schema.type, obj.schemaType());
    }

