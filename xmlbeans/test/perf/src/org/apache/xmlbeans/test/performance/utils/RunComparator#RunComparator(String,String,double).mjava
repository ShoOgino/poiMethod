    public RunComparator(String runResultsXmlFilePath1, String runResultsXmlFilePath2, double tolerance) throws Exception
    {
        System.out.println("XMLBeans RunComparator - comparing Perf Runs...");

        if ((runResultsXmlFilePath1 != null) && (runResultsXmlFilePath2 != null))
        {
            try
            {
                File resultsFileOne = new File(runResultsXmlFilePath1);
                File resultsFileTwo = new File(runResultsXmlFilePath2);

                if (tolerance > 100 || tolerance < 0)
                {
                    throw(new Exception("Invalid input value for 'tolerance'"));
                }
                this.tolerance = tolerance;

                // generate XmlObjects and validate against schema
                XmlOptions validateOptions = new XmlOptions();
                List errors = new ArrayList();
                validateOptions.setErrorListener(errors);

                resultsDocOne = ResultSetDocument.Factory.parse(resultsFileOne);
                if (!resultsDocOne.validate(validateOptions))
                {
                    System.out.println("Result Set XML Document " + runResultsXmlFilePath1 + "is not Valid against schema!");
                    for (Iterator iterator = errors.iterator(); iterator.hasNext();)
                    {
                        XmlError eachErr = (XmlError) iterator.next();
                        //System.out.println("Validation Error:" + eachErr.getMessage() + eachErr.getLine());
                    }
                    //throw new Exception("Invalid Results File " + runResultsXmlFilePath1);
                }

                errors.clear();
                resultsDocTwo = ResultSetDocument.Factory.parse(resultsFileTwo);
                if (!resultsDocTwo.validate(validateOptions))
                {
                    System.out.println("Result Set XML Document " + runResultsXmlFilePath2 + "is not Valid against schema!");
                    for (Iterator iterator = errors.iterator(); iterator.hasNext();)
                    {
                        XmlError eachErr = (XmlError) iterator.next();
                        //System.out.println("Validation Error:" + eachErr.getMessage() + eachErr.getLine());
                    }

                    //throw new Exception("Invalid Results File " + runResultsXmlFilePath2);
                }

            }

            catch (FileNotFoundException fne)
            {
                throw new Exception("Invalid results file(s) specified!");
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }
        else
        {
            throw new Exception("Input File Path(s) in null!");
        }

    } // end constructor

