    private void compare()
    {
        // create a hashmap with first run results
        Result[] res1 = resultsDocOne.getResultSet().getResultArray();

        HashMap runOneHashMap = new HashMap();
        for (int i = 0; i < res1.length; i++)
        {
            Result eachResult = res1[i];
            //System.out.println("Name:" + eachResult.getName() + "\tnote:" + eachResult.getNote() + "\tTime:" + eachResult.getTime());

            Custom[] custArr = eachResult.getCustomArray();
            if ((custArr != null) || (custArr.length > 0))
            {
                for (int j=0; j < custArr.length; j++)
                {
                    Custom eachCustomElem = custArr[j];
                    //System.out.println("Cust:" + eachCustomElem.getName() + "\tvalue:" + eachCustomElem.getValue());

                    String hashKey = eachResult.getName() + "_" + eachCustomElem.getName() + "_" + eachCustomElem.getValue();
                    //System.out.println("Key:" + hashKey);
                    //System.out.println("Val:" + eachResult.getTime());

                    // insert each result into the hashmap
                    runOneHashMap.put(hashKey, eachResult);
                }
            }
            else
            {
                // every result should have a custom element but this is not always true, the generated results are invalid sometimes
                System.out.println("Result Set 1, Custom Element Missing!:" + eachResult.getName());
            }
        }

        // now iterate thro second result set and compare
        Result[] res2 = resultsDocTwo.getResultSet().getResultArray();
        for (int i = 0; i < res2.length; i++)
        {
            Result eachResult2 = res2[i];

            Custom[] custArr2 = eachResult2.getCustomArray();
            if ((custArr2 != null) || (custArr2.length > 0))
            {
                for (int j = 0; j < custArr2.length; j++)
                {
                    Custom custom = custArr2[j];

                    String hashKeyToLookFor = eachResult2.getName() + "_" + custom.getName() + "_" + custom.getValue();
                    Result resFromHash = (Result) runOneHashMap.get(hashKeyToLookFor);

                    if(resFromHash != null)
                    {
                        if (resFromHash.getTime() == eachResult2.getTime())
                        {
                            // no-op
                            //System.out.println("MATCH:" + hashKeyToLookFor );
                            //System.out.println("First Result Set:" + runOneTime.longValue());
                            //System.out.println("Second Result Set:" + result2.getTime());
                            //System.out.println("------");
                        }
                        else
                        {
                            // compute diff here and compare with tolerence
                            double diffPercent = ((double) resFromHash.getTime() - (double) eachResult2.getTime()) / (double) resFromHash.getTime();
                            diffPercent *= 100;

                            //**System.out.println("% Change= " + diff);
                            String testDetails = "Test Case Name\t:" + resFromHash.getName() + "\n" +
                                                   "Test Case Spec\t:" + resFromHash.getCustomArray(j).getName() + "=" +
                                                                        resFromHash.getCustomArray(j).getValue() +  "\n" +
                                                   "Tolerance Spec\t:" + tolerance;

                            // regression
                            if (diffPercent < 0)
                            {
                                diffPercent *= -1.00;
                                if (diffPercent >= 0)
                                {
                                    if (diffPercent > tolerance)
                                    {
                                        diffPercent *= -1.00;
                                        System.out.println("Regression Found! \n" + testDetails + "\n" + "% Deviation\t\t:" + diffPercent);
                                        System.out.println("------");
                                    }
                                }

                            }

                            // improvement
                            if (diffPercent >= 0)
                            {
                                if (diffPercent > tolerance)
                                {
                                    //System.out.println("Improvement Found! \n" + testDetails + "\n" + "% Deviation\t\t:" + diffPercent);
                                    //System.out.println("------");
                                }
                            }
                        }
                    } // end of hashtable look up result null check
                } // end for
            }
            else
            {
                // every result should have a custom element
                System.out.println("Result Set 2, Custom Element Missing!::" + eachResult2.getName());
            }


        }


    }

