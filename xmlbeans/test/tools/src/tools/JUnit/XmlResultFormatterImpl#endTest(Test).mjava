	public synchronized void endTest(Test test)
    {
        long endTime = System.currentTimeMillis();

        System.out.flush();
        System.err.flush();

        // Update the test record
        testRecord.setSysout(bOut.toString());
        testRecord.setSyserr(bErr.toString());
        testRecord.setEndTime(endTime);

        // this is a little hack for our reporting..
        // We could be on shaky ground if the behaviour of the JUnit task
        // ever changes.. OH Well...
        String fullTestName = test.toString();

        // Test-unit is between '(' and ')'
        int startindex = fullTestName.indexOf("(");
        int lastindex = fullTestName.indexOf(")");

        String testUnit;
        if (startindex >= 0 && lastindex > startindex)
            testUnit = fullTestName.substring(startindex+1, lastindex);
        else
            testUnit = fullTestName;

        String testMethod = ((TestCase) test).getName();

        // Get the last token from testUnit for the logical name
        startindex = testUnit.lastIndexOf(".");
        String baseClass = testUnit.substring(startindex+1);

        // update the extra fields of TestRecord
        testRecord.setTestUnitName(testUnit);
        testRecord.setTestLogicalName(baseClass + "." + testMethod);

        // If the test did not fail, record it as a success
        if (!testRecord.isFailure())
        {
            testRecord.setStatus(TEST_SUCCESS);
            passCount++;
        }
        else
            failCount++;

        testCount++;

        // Add it to the set
        records.add(testRecord);

        // set testRecord to null..
        // Restore STDOUT and STDERR
        System.setOut(_out);
        System.setErr(_err);

        info("Finished Test: " + fullTestName + " "
                           + testRecord.getStatusString() + "\n");

        // Reset TestRecord
        testRecord = null;
	}

