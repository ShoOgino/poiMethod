    /**
     * Recursively copy a jar dir entry to a new dir.  This is expensive since
     * we have to iterate over all the entries in the .zip/.jar file.
     * The <code>fromDir</code> parameter must end in '/'.
     */
    public static void copyDirToDir(ZipFile zip, String fromDir,
                                    File toDir, boolean replaceNewer, final String[] exclude)
            throws IOException
    {
        //System.out.println("copyDirToDir(zip=" + zip +
        //", fromDir=" + fromDir +
        //", toDir=" + toDir + ")");

        if (!fromDir.endsWith("/"))
            return;

        Enumeration _enum = zip.entries();
        COPY_JAR_LOOP:
        while (_enum.hasMoreElements())
        {
            ZipEntry entry = (ZipEntry) _enum.nextElement();
            //System.out.println("  entry = " + entry.getName());

            // skip directories
            if (entry.isDirectory())
                continue;

            if (!entry.getName().startsWith(fromDir))
                continue;

            String entryFile = entry.getName().substring(fromDir.length());

            // FIXME: exclude files matching any pattern in exclude array

            // use this class' loader to obtain the resource
            URL url = Util.class.getResource("/" + entry.getName());
            if (url == null)
            {
                throw new java.io.IOException("Resource not found: " +
                                              entry.toString());
            }
            copyToFile(url, new File(toDir, entryFile), replaceNewer);
        }
    }

