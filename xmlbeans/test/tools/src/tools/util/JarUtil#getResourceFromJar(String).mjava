    /**
     * returns an item within the given jarFile as a String. jarFile must exist in classpath
     *
     * @param pathToResource
     * @return String
     */

    public static String getResourceFromJar(String pathToResource)
            throws IOException {

        URL url = ClassLoader.getSystemClassLoader().getResource(
                pathToResource);
        if (url == null) {
            throw new FileNotFoundException(
                    "Resource: " + pathToResource + " was not found ");
        }
        JarURLConnection jarConnection = (JarURLConnection) url.openConnection();
        JarFile jar = jarConnection.getJarFile();
        if (jar.getJarEntry(pathToResource) == null) {
            throw new FileNotFoundException(
                    "Resource: " + pathToResource + " was not found ");
        }

        JarEntry item = jar.getJarEntry(pathToResource);
        BufferedReader in = new BufferedReader(
                new InputStreamReader(jar.getInputStream(item)));

        StringBuffer stb = new StringBuffer();
        String buffer;

        while (!((buffer = in.readLine()) == null)) {
            stb.append(buffer + EOL);
        }
        return stb.toString();
    }

