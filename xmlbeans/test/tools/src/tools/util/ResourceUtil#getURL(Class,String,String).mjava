    /**
     * Find a resource with the given name. For example,
     * <pre>
     * getURL(foo.bar.Blee.class, "Blee", "file.txt");
     * </pre>
     * will obtain an <code>URL</code> to the file named
     * "foo/bar/Blee/file.txt".  Note that the
     * {@link Class#getResource()} method would return the resource
     * for "foo/bar/file.txt" instead.
     *
     * @param clazz The resource class.
     * @param lastName The name of the class itself, eg. for class
     *   "foo.bar.Blee", the <code>lastName</code> is "Blee".
     * @param name The name of the resource to obtain.
     * @return The <code>URL</code> to the named resource.
     * @see java.lang.Class#getResourceAsStream(java.lang.String name)
     * @throws RuntimeException If no resource is found.
     */
    public static URL getURL(Class c, String lastName, String name)
    {
        // get the contents of the resouce
        URL url = c.getResource(lastName + "/" + name);
        if (url == null) {
            throw new RuntimeException("Can't find resource: " +
                lastName +
                File.separator +
                File.separator + name);
        }
        return url;
    }

